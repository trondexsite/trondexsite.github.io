{"version":3,"sources":["actions/app.js","components/Common/customTheme.js","components/Common/Transition.js","components/Common/GameAppBar.js","actions/constants.js","actions/snackbar.js","components/Common/GameSnackbar.js","utils/tronCommon.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","utils/tronMain.js","store/index.js","utils/math.js","utils/tracker.js","utils/parseQueryString.js","components/TronMax/DailyDivs.js","utils/tronAccountDetails.js","components/TronMax/AccountDetails.js","components/Common/RoutingScreen.js","components/Common/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["SET_SCREEN","SCREEN_VAULT","RELOAD_ACCOUNT","setScreen","screen","type","payload","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","third","action","important","warning","slider","trackSize","handleSize","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","TT_URL","TG_URL","GameAppBar","_this","classCallCheck","this","_super","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getFlagUrl","concat","getLogoImage","navigateTo","home","handleDrawerToggle","state","openWechat","wechatOpen","closeWechat","languages","name","anchorEl","addTranslation","siteTranslations","activeLanguageCode","get","Dialog_default","open","onClose","TransitionComponent","AppBar_default","position","className","Toolbar_default","Tooltip_default","title","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","variant","react_localize_redux_es","id","_this2","_this$state","disableRipple","src","alt","aria-owns","undefined","href","map","lang","key","rel","target","_this3","Menu_default","Drawer_default","container","anchor","List_default","Divider_default","ListItem_default","button","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","SNACKBAR_WARNING","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","core_IconButton_default","close","hideSnackbar","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","indexOf","TRON_WEB_STATE_NOT_MAINNET","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","defaultTronWeb","wrap","_context","prev","next","abrupt","Promise","resolve","tronWebState","tries","timer","setInterval","window","tronWeb","clearInterval","ready","stop","_x","apply","arguments","initContract","_ref2","_callee2","contractAddress","contract","_context2","at","sent","t0","console","_x2","_x3","_x4","trxToSun","trx","sunToTrx","sun","isNaN","getDateTimeLongFromUnix","unix","date","Date","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","initialState","currentAddress","reducers","app","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","toTruncateDown","value","n","Math","pow","v","toString","split","f","substr","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","tronMain","initTronWeb","_initTronWeb","store","dispatch","on","needsToNotify","reloadAccountNonce","uuid","getCurrentAddress","currentAddressBalance","_currentAddressBalance","_callee3","balance","_context3","getBalance","_getBalance","_callee4","_context4","getContractBalance","BigNumber","toNumber","getPlayerCount","_getPlayerCount","_callee5","totalusers","playerCount","_context5","totalUsers","getTotalReferrals","_getTotalReferrals","_callee6","totalReferrals","_context6","getTotalInvestments","_getTotalInvestments","_callee7","totalInvestments","_context7","totalInvested","getTotalWithdraws","_getTotalWithdraws","_callee8","totalWithdraws","_context8","totalWithdrawn","getTotalTxs","_getTotalTxs","_callee9","totalTxs","_context9","getUserAvailable","_getUserAvailable","_callee10","userAvailable","_context10","getContractBalanceRate","_getContractBalanceRate","_callee11","contractBalanceRate","_context11","getUserPercentRate","_getUserPercentRate","_callee12","userPercentRate","_context12","getUserTotalDeposits","_getUserTotalDeposits","_callee13","userTotalDeposits","_context13","getUserTotalWithdrawn","_getUserTotalWithdrawn","_callee14","userTotalWithdrawn","_context14","getUserReferralBonus","_getUserReferralBonus","_callee15","referralBonus","_context15","getUserReferralCountByLevel","_getUserReferralCountByLevel","_callee16","level","referralCount","_context16","getUserCheckpoint","_getUserCheckpoint","_callee17","userCheckPoint","checkpoint","_context17","currentDivsAddressBalance","_currentDivsAddressBalance","_callee18","_context18","invest","_invest","_callee19","sendAmount","referrer","payAmount","data","_context19","log","send","feeLimit","callValue","shouldPollResponse","withdrawDivs","_withdrawDivs","_callee20","_context20","withdraw","fromHex","trim","e","tracker","initialize","pageview","rawPath","trackerNames","event","category","label","nonInteraction","transport","parseReferralAddress","storedReferralAddress","referralAddress","qs","parse","location","search","parseGameRoute","loadDataInterval","gameStartTime","moment","utc","renderer","days","hours","minutes","seconds","completed","Grid_default","item","xs","depositAmounts","isLoading","accountValidForReferral","accountBalance","contractBalance","baseRate","totalDonations","totalGrants","totalIntegrations","donationAmount","playerCode","playerAddress","referrerEarnings","availableReferrerEarnings","referrerCode","level1RefCount","level2RefCount","level3RefCount","planCount","currentDividends","userCheckpoint","playerInvestments","MINIMUM_DEPOSIT_GAS_FEE","MINIMUM_WITHDRAW_GAS_FEE","DailyDivs","loadData","loadPlayerData","loadDivsData","getPlayerData","isDepositDisabled","withdrawableDivs","investmentDivs","gameStarted","isBefore","isWithdrawDisabled","_this$state2","formatAmount","amount","formattedAmount","replace","getPlanInfo","planId","planData","copyLink","myReferralLink","Tracker","handleDepositAmountChange","_ref6","deposit","_ref7","_this$state3","_this$state4","prevProps","loaded","index_es","toDate","_this$state5","processWithdrawText","userPercentRateDisplay","baseRateDisplay","userHoldOutRateDisplay","contractBalanceRateDisplay","styles","customTheme","Button_default","renderCountdownIfNeeded","md","toLocaleString","TextField_default","autoComplete","onChange","InputProps","endAdornment","margin","disabled","lib","text","onCopy","FileCopy_default","React","&:hover","tronAccountDetails","_getPlayerData","myTokens","myDividends","myRoundStats","myReferrals","isValidAddress","getPlayerInfoCurrentRound","wei","myRoundBuy","myRoundSell","balanceOf","_balanceOf","isAddress","accountAddress","AccountDetails","TronAccountDetails","_ref3","playerData","handleChange","_ref4","defineProperty","Card_default","placeholder","TronMax_DailyDivs","TronMax_AccountDetails","Footer","App","initScreen","initTracker","options","renderToStaticMarkup","MuiThemeProvider_default","Common_GameAppBar","Common_RoutingScreen","Common_Footer","Common_GameSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.802b3f1c.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_VAULT = 'SCREEN_VAULT';\nconst SCREEN_ACCOUNT_DETAILS = 'SCREEN_ACCOUNT_DETAILS';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport { SET_SCREEN, SCREEN_VAULT, SCREEN_ACCOUNT_DETAILS, RELOAD_ACCOUNT };\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#12161c',\n      main: '#12161c',\n      dark: '#12161c',\n      contrastText: '#1DA1F2',\n    },\n    secondary: {\n      light: '#a3eeff',\n      main: '#a3eeff',\n      dark: '#a3eeff',\n      contrastText: '#ffffff',\n    },\n    third: {\n      light: '#7ce27c',\n      main: '#7ce27c',\n      dark: '#7ce27c',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = props => <Slide direction=\"up\" {...props} />;\nexport default Transition;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport Dialog from '@material-ui/core/Dialog/Dialog';\nimport Transition from './Transition';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../../translations/translate.json';\n\nimport { SCREEN_VAULT, setScreen } from '../../actions/app';\n\nconst TT_URL = 'https://twitter.com/trondexorg';\nconst TG_URL = 'https://t.me/trondex';\n\nclass GameAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n      anchorEl: null,\n      wechatOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('language') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('language', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getFlagUrl = code => {\n    return `images/misc/${code}.svg`;\n  };\n\n  getLogoImage = () => {\n    return `images/misc/logo_white.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_VAULT);\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderWechat() {\n    const { wechatOpen } = this.state;\n\n    return (\n      <Dialog\n        open={wechatOpen}\n        onClose={this.closeWechat}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"static\" className=\"wechat-appbar\">\n          <Toolbar>\n            <Tooltip title=\"Close\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.closeWechat}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <Translate id=\"max.joinWechat\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n    );\n  }\n\n  openWechat = () => {\n    this.setState({ wechatOpen: true });\n  };\n\n  closeWechat = () => {\n    this.setState({ wechatOpen: false });\n  };\n\n  renderDesktop() {\n    const { languages, anchorEl } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"logo\"\n            disableRipple={true}\n            onClick={this.home}\n          >\n            <img\n              src={this.getLogoImage()}\n              className=\"logo-medium\"\n              alt=\"vault\"\n            />\n          </IconButton>\n        </div>\n\n        <div>\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.invest\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_invest\"\n          >\n            <span className=\"contracts-menu gold\">\n              <Translate id=\"max.invest\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.stats\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_stats\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.stats\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.myaccount\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_myaccount\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.myaccount\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.roadmap\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_faq\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.faq\" />\n            </span>\n          </IconButton>\n\n          {languages.map(lang => (\n            <IconButton\n              id={lang.code}\n              key={lang.code}\n              color=\"inherit\"\n              disableRipple={true}\n              onClick={() => this.setActiveLanguage(lang.code)}\n            >\n              <img\n                src={this.getFlagUrl(lang.code)}\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          ))}\n\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TT_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/twitter.png\"\n                className=\"image-flag\"\n                alt=\"Twitter\"\n              />\n            </IconButton>\n          </span>\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TG_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/telegram.png\"\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          disableRipple={true}\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            disableRipple={true}\n            aria-label={<Translate id=\"max.tronmax\" />}\n            onClick={this.home}\n          >\n            <span>\n              <Translate id=\"max.tronmax\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <ListItem\n                    button\n                    key={lang.code}\n                    className=\"drawer-item\"\n                    disableRipple={true}\n                    onClick={() => this.setActiveLanguage(lang.code)}\n                  >\n                    <img\n                      src={this.getFlagUrl(lang.code)}\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </ListItem>\n                ))}\n                <span className=\"social\">\n                  <IconButton\n                    disableRipple={true}\n                    className=\"social-button\"\n                    href={TT_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/twitter.png\"\n                      className=\"image-flag\"\n                      alt=\"Twitter\"\n                    />\n                  </IconButton>\n                </span>\n                <span className=\"social\">\n                  <IconButton\n                    className=\"social-button\"\n                    href={TG_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/telegram.png\"\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </IconButton>\n                </span>\n              </ListItem>\n              <Divider />\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GameAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: '#0000a5',\n  },\n  error: {\n    backgroundColor: '#cc0040',\n  },\n  info: {\n    backgroundColor: '#2993c4',\n  },\n  warning: {\n    backgroundColor: '#c04a42',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst GameSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(GameSnackbar));\n","export const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'TGBt46zCTAVPWzAELHtd9v16XFUB2hzZQV';\nexport const FOUNDATION_CODE = 6666;\n\nexport const injectTronWeb = async defaultTronWeb => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nexport const initContract = async (\n  tronWebState,\n  defaultTronWeb,\n  contractAddress\n) => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(contractAddress);\n    } else {\n      contract = await defaultTronWeb.contract().at(contractAddress);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport const trxToSun = trx => {\n  return trx * 1e6;\n};\n\nexport const sunToTrx = sun => {\n  if (isNaN(sun)) {\n    return '';\n  }\n  return sun / 1e6;\n};\n\nexport const weiToToken = wei => {\n  if (isNaN(wei)) {\n    return '';\n  }\n  return wei / 1e18;\n};\n\nexport const tokenToWei = token => {\n  return token * 1e18;\n};\n\nexport const isValidCode = code => {\n  const n = Math.floor(Number(code));\n  return n !== Infinity && String(n) === code && n >= FOUNDATION_CODE;\n};\nexport const isValidAddress = addrs => {\n  return true;\n};\n\nexport const getDateTimeFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(unix * 1000);\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\nexport const getDateTimeLongFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  if (unix > 0) {\n    let date = new Date(unix * 1000);\n    let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear(),\n      hour = '' + d.getHours(),\n      minute = '' + d.getMinutes();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    let p1 = [year, month, day].join('-');\n    let p2 = [hour, minute].join(':');\n\n    return [p1, p2].join(' ');\n  } else {\n    return null;\n  }\n};\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_VAULT, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_VAULT,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  getDateTimeFromUnix,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nimport { toTruncateDown } from './math';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '41dda355f8246a8b5fb6c7c7515b93b16d62ed75c9';\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// // TESTNET\n// const CONTRACT_ADDRESS = '41f63d68cf68c6446aeadb3ff6759a485dcea4966d';\n// const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  \n\n\n  // async getDivsAllData() {\n  //   const currentAddress = this.getCurrentAddress();\n  //   if (!currentAddress || currentAddress === FOUNDATION_ADDRESS) {\n  //     return {\n  //       withdrawable: 0,\n  //       investment: 0,\n  //       referral: 0,\n  //     };\n  //   }\n\n  //   const data = {};\n  //   try {\n  //     const playerUID = await contract.getUIDByAddress(currentAddress).call();\n  //     const playerInfo = await contract.getInvestorInfoByUID(playerUID).call();\n\n  //     data.playerCode = new BigNumber(playerUID).toNumber();\n  //     data.referrerEarnings = playerInfo[0]\n  //       ? sunToTrx(new BigNumber(playerInfo[0]).toNumber())\n  //       : 0;\n  //     data.availableReferrerEarnings = playerInfo[1]\n  //       ? sunToTrx(new BigNumber(playerInfo[1]).toNumber())\n  //       : 0;\n  //     data.referrerCode = playerInfo[2]\n  //       ? new BigNumber(playerInfo[2]).toNumber()\n  //       : 0;\n  //     data.level1RefCount = playerInfo[3]\n  //       ? new BigNumber(playerInfo[3]).toNumber()\n  //       : 0;\n  //     data.level2RefCount = playerInfo[4]\n  //       ? new BigNumber(playerInfo[4]).toNumber()\n  //       : 0;\n  //     data.level3RefCount = playerInfo[5]\n  //       ? new BigNumber(playerInfo[5]).toNumber()\n  //       : 0;\n  //     data.planCount = playerInfo[6]\n  //       ? new BigNumber(playerInfo[6]).toNumber()\n  //       : 0;\n\n  //     let currentDividends = 0;\n  //     if (playerInfo[7].length > 0) {\n  //       for (var i = 0; i < playerInfo[7].length; i++) {\n  //         currentDividends += sunToTrx(\n  //           new BigNumber(playerInfo[7][i]).toNumber()\n  //         );\n  //       }\n  //     }\n\n  //     let newDividends = 0;\n  //     if (playerInfo[8].length > 0) {\n  //       for (var j = 0; j < playerInfo[8].length; j++) {\n  //         newDividends += sunToTrx(new BigNumber(playerInfo[8][j]).toNumber());\n  //       }\n  //     }\n\n  //     data.currentDividends = toTruncateDown(\n  //       new BigNumber(currentDividends),\n  //       6\n  //     );\n  //     data.newDividends = toTruncateDown(new BigNumber(newDividends), 6);\n\n  //     const playerInvestment = await contract\n  //       .getInvestmentPlanByUID(playerUID)\n  //       .call();\n  //     let playerInvestments = [];\n  //     let playerTotalInvestment = 0;\n  //     let investmentCount = 0;\n  //     if (playerInvestment.length > 0) {\n  //       investmentCount = playerInvestment[0].length;\n  //     }\n\n  //     for (var k = 0; k < investmentCount; k++) {\n  //       let inv = {};\n\n  //       const planId = new BigNumber(playerInvestment[0][k]).toNumber();\n  //       const investmentDate = getDateTimeFromUnix(\n  //         new BigNumber(playerInvestment[1][k]).toNumber()\n  //       );\n  //       const investment = sunToTrx(\n  //         new BigNumber(playerInvestment[2][k]).toNumber()\n  //       );\n  //       const currentDividend = toTruncateDown(\n  //         new BigNumber(\n  //           sunToTrx(new BigNumber(playerInvestment[3][k]).toNumber())\n  //         ),\n  //         6\n  //       );\n  //       const isExpired = playerInvestment[4][k];\n\n  //       inv.planId = planId;\n  //       inv.investmentDate = investmentDate;\n  //       inv.investment = investment;\n  //       inv.currentDividend = currentDividend;\n  //       inv.isExpired = isExpired;\n\n  //       if (!isExpired) {\n  //         playerTotalInvestment = playerTotalInvestment + investment;\n  //       }\n\n  //       playerInvestments.push(inv);\n  //     }\n  //     data.playerTotalInvestment = toTruncateDown(\n  //       new BigNumber(playerTotalInvestment).toNumber(),\n  //       6\n  //     );\n\n  //     data.playerInvestments = playerInvestments;\n\n  //     return data;\n  //   } catch (e) {\n  //     console.error(e);\n  //     return data;\n  //   }\n  // },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","export const toTruncateDown = (value, n) => {\n  if (value < Math.pow(0.1, n)) {\n    return 0;\n  }\n  const v = value.toString().split('.');\n  if (n <= 0) {\n    return v[0];\n  }\n\n  let f = v[1] || '';\n  if (f.length > n) {\n    const result = `${v[0]}.${f.substr(0, n)}`;\n    return result;\n  }\n  while (f.length < n) {\n    f += '0';\n  }\n  const result = `${v[0]}.${f}`;\n  return result;\n};\n","import ReactGA from 'react-ga';\n// import { isProductionEnvironment } from './environment';\nconst isProductionEnvironment = false;\n\nexport default {\n  initialize: () => {\n    isProductionEnvironment && ReactGA.initialize('UA-3373847473-1');\n  },\n  pageview: (rawPath, trackerNames, title) => {\n    isProductionEnvironment && ReactGA.pageview(rawPath, trackerNames, title);\n  },\n  event: (\n    { category, action, label, value, nonInteraction, transport, ...args } = {},\n    trackerNames\n  ) => {\n    isProductionEnvironment &&\n      ReactGA.event(\n        { category, action, label, value, nonInteraction, transport, ...args },\n        trackerNames\n      );\n  },\n};\n","import Lockr from 'lockr';\nimport qs from 'qs';\n\nimport { isValidAddress } from './tronCommon';\nimport { SCREEN_VAULT } from '../actions/app';\n\nconst REFERRAL_ADDRESS_KEY = 'TRONDEX_REFERRAL'; // there is a typo, but can't change now\n\nexport const parseReferralAddress = () => {\n  const storedReferralAddress = Lockr.get(REFERRAL_ADDRESS_KEY);\n  const parsedQueryString = qs.parse(window.location.search.substr(1));\n  let referralAddress = parsedQueryString['ref'];\n  if (referralAddress && isValidAddress(referralAddress)) {\n    console.log(referralAddress);\n    // store the new referralAddress\n    Lockr.set(REFERRAL_ADDRESS_KEY, referralAddress);\n  } else if (!!storedReferralAddress) {\n    referralAddress = storedReferralAddress;\n  } else {\n    // empty, just return address(0)\n    referralAddress = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n  }\n  return referralAddress;\n};\n\nexport const parseGameRoute = () => {\n  return SCREEN_VAULT;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMain';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-05T12:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    // window.location.reload();\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalReferrals: 0,\n  totalWithdraws: 0,\n  totalInvestments: 0,\n  totalDonations: 0,\n  totalGrants: 0,\n  totalTxs: 0,\n  totalIntegrations: 0,\n  donationAmount: 1,\n  playerCode: null,\n  playerAddress: null,\n  referrerEarnings: 0,\n  availableReferrerEarnings: 0,\n  referrerCode: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  planCount: 0,\n  currentDividends: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint:null,\n  playerInvestments: [],\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    // const data = await tronMain.getDivsAllData();\n\n    // const playerCode = data.playerCode;\n    // const referrerEarnings = data.referrerEarnings;\n    \n    // const referrerCode = data.referrerCode;\n    // const level1RefCount = data.level1RefCount;\n    // const level2RefCount = data.level2RefCount;\n    // const level3RefCount = data.level3RefCount;\n    // const planCount = data.planCount;\n    // const currentDividends = data.currentDividends;\n    // const userAvailable = data.userAvailable;\n    // const userTotalDeposits = data.userTotalDeposits;\n    // const playerInvestments = data.playerInvestments;\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    // const totalReferrals = await tronMain.getTotalReferrals();\n    const totalInvestments = await tronMain.getTotalInvestments();\n    const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n\n    const playerAddress = tronMain.getCurrentAddress();\n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    // const totalDonations = await tronMain.getTotalDonations();\n    // const totalGrants = await tronMain.getTotalGrants();\n    // const totalIntegrations = await tronMain.getTotalIntegrations();\n    // const totalTxs = await tronMain.getTotalTxs();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      // totalReferrals,\n      totalInvestments,\n      totalWithdraws,\n      contractBalanceRate,\n      userPercentRate,\n      // totalDonations,\n      // totalGrants,\n      // totalTxs,\n      // totalIntegrations,\n      // playerCode,\n      // referrerEarnings,\n      availableReferrerEarnings,\n      // referrerCode,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      // planCount,\n      // currentDividends,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      // playerInvestments,\n      accountValidForReferral: userTotalDeposits > 0,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerCode,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalReferrals,\n      totalInvestments,\n      totalWithdraws,\n      totalDonations,\n      totalIntegrations,\n      totalTxs,\n      totalGrants,\n      referrerEarnings,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      currentDividends,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      playerInvestments,\n      donationAmount,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n    } = this.state;\n\n    const that = this;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    let investId = 0;\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                        <div className=\"card\">\n                          <div className=\"dd-card\">\n                            <Grid container spacing={0}>\n                              <Grid item xs={12}>\n                                <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                                  <div className=\"my-account middle-children\">\n                                    <img\n                                      src='images/misc/diamond.svg'\n                                      className=\"image-small\"\n                                      alt=\"tron\"\n                                    />\n                                    <span className=\"m-size dark plan-name\">\n                                      <Translate id=\"max.diamond\" />\n                                    </span>\n                                  </div>\n                                  <div className=\"space\" />\n                                  <div className=\"input-box\">\n                                    <TextField\n                                      label=\"\"\n                                      className=\"buy-token\"\n                                      autoComplete=\"off\"\n                                      value={depositAmounts}\n                                      onChange={this.handleDepositAmountChange}\n                                      InputProps={{\n                                        endAdornment: (\n                                          <img\n                                            src=\"images/misc/logo.svg\"\n                                            className=\"logo\"\n                                            alt=\"tron\"\n                                          />\n                                        ),\n                                      }}\n                                      margin=\"normal\"\n                                      variant=\"outlined\"\n                                    />\n                                  </div>\n                                  <Grid container spacing={24}>\n                                    <Grid item xs={12}>\n                                      <Button\n                                        id=\"invest-button\"\n                                        className=\"invest-button\"\n                                        variant=\"contained\"\n                                        disableRipple={true}\n                                        disabled={this.isDepositDisabled()}\n                                        onClick={() =>\n                                          this.deposit()\n                                        }\n                                      >\n                                        <Translate id=\"max.invest\" />\n                                      </Button>\n                                    </Grid>\n                                  </Grid>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </div>\n                      </Grid>\n\n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                      \n                    <Grid container spacing={24}>\n\n                    <div className=\"space\" />\n\n                      <Grid item xs={12} md={6}>\n\n                          \n                        <Grid container spacing={24}>\n\n\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n\n\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div>\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                        \n\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivs)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { SNACKBAR_ERROR } from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  weiToToken,\n} from './tronCommon';\nimport { toTruncateDown } from './math';\n\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// MAINNET\nconst CONTRACT_ADDRESS = '413f100fbdd26bff25982c35cdadc2f2e6837516cd';\n\n// TESTNET\n// const CONTRACT_ADDRESS = '413084e0c71893d69c2ec1e3fb7701a479da2c9c05';\n\nlet contract;\nlet tronWebState;\nlet tronWeb;\n\nexport default {\n  async initTronWeb(address) {\n    tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n    tronWeb.defaultAddress = {\n      hex: tronWeb.address.toHex(address),\n      base58: FOUNDATION_ADDRESS,\n    };\n\n    tronWebState = await injectTronWeb(tronWeb);\n    contract = await initContract(\n      TRON_WEB_STATE_LOCKED,\n      tronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n    return tronWebState;\n  },\n\n  async getPlayerData(address) {\n    if (!this.isValidAddress(address)) {\n      return null;\n    }\n\n    const myTokens = await contract.myTokens().call();\n    const myDividends = await contract.myDividends().call();\n    const myRoundStats = await contract\n      .getPlayerInfoCurrentRound(address)\n      .call();\n    const myReferrals = await contract.myReferrals().call();\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n      myReferrals: myReferrals\n        ? sunToTrx(new BigNumber(myReferrals).toNumber())\n        : 0,\n      myRoundBuy: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[0]).toNumber())\n        : 0,\n      myRoundSell: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[1]).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  isValidAddress(address) {\n    return address && tronWeb.isAddress(address);\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport TronAccountDetails from '../../utils/tronAccountDetails';\n\nimport Tracker from '../../utils/tracker';\nimport { SNACKBAR_ERROR } from '../Common/GameSnackbar';\n\nconst initialState = {\n  myTokens: null,\n  myDividends: null,\n  myRoundBuy: null,\n  myRoundSell: null,\n  myReferrals: null,\n  accountAddress: '',\n};\n\nclass AccountDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    Tracker.pageview('/accountDetails');\n  }\n\n  search = async () => {\n    const { showSnackbar } = this.props;\n    const { accountAddress } = this.state;\n    if (!accountAddress) {\n      showSnackbar('Address can not be empty!', SNACKBAR_ERROR);\n      return;\n    }\n    const tronWebState = await TronAccountDetails.initTronWeb(accountAddress);\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData(accountAddress);\n  };\n\n  loadData = async accountAddress => {\n    await this.getPlayerData(accountAddress);\n  };\n\n  getPlayerData = async address => {\n    const playerData = await TronAccountDetails.getPlayerData(address);\n    if (!playerData) {\n      return;\n    }\n    const myTokens = playerData.myTokens;\n    const myReferrals = playerData.myReferrals;\n    const myDividends = playerData.myDividends;\n    const myRoundBuy = playerData.myRoundBuy;\n    const myRoundSell = playerData.myRoundSell;\n    this.setState({\n      myTokens,\n      myDividends,\n      myReferrals,\n      myRoundBuy,\n      myRoundSell,\n    });\n  };\n\n  handleChange = async event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      myTokens,\n      myDividends,\n      myRoundBuy,\n      myRoundSell,\n      myReferrals,\n      accountAddress,\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <Card color=\"primary\" className=\"card\">\n            <Grid\n              container\n              spacing={24}\n              className=\"component-card account-card\"\n            >\n              <Grid item xs={12} md={6}>\n                <div className=\"buy-placeholder\">\n                  <Grid item xs={12}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"l-size\">\n                          <Translate id=\"account.searchAddress\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"input-box\">\n                        <TextField\n                          label=\"\"\n                          name=\"accountAddress\"\n                          className=\"buy-token\"\n                          autoComplete=\"off\"\n                          placeholder=\"address e.g. T*****\"\n                          value={accountAddress}\n                          onChange={this.handleChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <Button\n                            id=\"buy-button\"\n                            className=\"buy-button\"\n                            variant=\"contained\"\n                            onClick={this.search}\n                          >\n                            <Translate id=\"account.search\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.token\" /> {myTokens || 0}{' '}\n                        <span className=\"blue\">\n                          <Translate id=\"general.token\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.myReferrals\" />{' '}\n                        {myReferrals || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.claimableTrx\" />{' '}\n                        {myDividends || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundBuyTrx\" /> {myRoundBuy || 0}{' '}\n                        <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundSellTrx\" />{' '}\n                        {myRoundSell || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AccountDetails));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCREEN_VAULT, SCREEN_ACCOUNT_DETAILS } from '../../actions/app';\n\nimport DailyDivs from '../TronMax/DailyDivs';\nimport AccountDetails from '../TronMax/AccountDetails';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n    case SCREEN_VAULT:\n      return <DailyDivs />;\n    case SCREEN_ACCOUNT_DETAILS:\n      return <AccountDetails />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport customTheme from './customTheme';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"s-size aqua copy-right\">\n            {' '}\n            &copy; 2020 TronDEX - ROI Game on Tron\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(null)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize } from 'react-localize-redux';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen } from '../actions/app';\nimport customTheme from './Common/customTheme';\nimport AppBar from './Common/GameAppBar';\nimport Snackbar from './Common/GameSnackbar';\nimport RoutingScreen from './Common/RoutingScreen';\nimport Footer from './Common/Footer';\nimport './App.css';\nimport Tracker from '../utils/tracker';\nimport { parseGameRoute } from '../utils/parseQueryString';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initTracker();\n    this.initScreen();\n  }\n\n  initScreen = () => {\n    const { setScreen } = this.props;\n    const screen = parseGameRoute();\n    setScreen(screen);\n  };\n\n  initTracker = () => {\n    Tracker.initialize();\n    Tracker.pageview('/app');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"body\">\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}