{"version":3,"sources":["actions/app.js","components/Common/customTheme.js","components/Common/Transition.js","components/Common/GameAppBar.js","actions/constants.js","actions/snackbar.js","components/Common/GameSnackbar.js","utils/tronCommon.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","utils/tronMainSuper.js","store/index.js","utils/tracker.js","utils/parseQueryString.js","components/TronMax/Landing.js","utils/tronMain.js","components/TronMax/DailyDivs.js","components/TronMax/DailyDivsSuper.js","utils/tronMainLightning.js","components/TronMax/DailyDivsLightning.js","utils/tronAccountDetails.js","utils/math.js","components/TronMax/AccountDetails.js","utils/tronMainP3X.js","components/TronMax/GlobalStates.js","components/TronMax/P3X.js","components/Common/RoutingScreen.js","components/Common/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["SET_SCREEN","SCREEN_LANDING","SCREEN_VAULT","RELOAD_ACCOUNT","setScreen","screen","type","payload","reloadAccount","reloadAccountNonce","uuid","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","third","action","important","warning","slider","trackSize","handleSize","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","TT_URL","TG_URL","GameAppBar","_this","classCallCheck","this","_super","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getFlagUrl","concat","getLogoImage","navigateTo","home","handleDrawerToggle","state","openWechat","wechatOpen","closeWechat","languages","name","anchorEl","addTranslation","siteTranslations","activeLanguageCode","get","Dialog_default","open","onClose","TransitionComponent","AppBar_default","position","className","Toolbar_default","Tooltip_default","title","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","variant","react_localize_redux_es","id","_this2","_this$state","disableRipple","src","alt","aria-owns","undefined","map","lang","key","href","rel","target","_this3","Menu_default","Drawer_default","container","anchor","List_default","Divider_default","ListItem_default","button","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","SNACKBAR_WARNING","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","core_IconButton_default","close","hideSnackbar","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","indexOf","TRON_WEB_STATE_LOCKED","TRON_WEB_STATE_NOT_MAINNET","FOUNDATION_ADDRESS","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","defaultTronWeb","wrap","_context","prev","next","abrupt","Promise","resolve","tronWebState","tries","timer","setInterval","window","tronWeb","clearInterval","ready","stop","_x","apply","arguments","initContract","_ref2","_callee2","contractAddress","contract","_context2","at","sent","t0","console","_x2","_x3","_x4","trxToSun","trx","sunToTrx","sun","isNaN","weiToToken","wei","tokenToWei","token","getDateTimeLongFromUnix","unix","date","Date","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","initialState","currentAddress","airdropContract","reducers","app","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","tronMainSuper","initTronWeb","_initTronWeb","store","dispatch","on","needsToNotify","getCurrentAddress","currentAddressBalance","_currentAddressBalance","_callee3","balance","_context3","getBalance","_getBalance","_callee4","_context4","getContractBalance","BigNumber","toNumber","getPlayerCount","_getPlayerCount","_callee5","totalusers","playerCount","_context5","totalUsers","getTotalReferrals","_getTotalReferrals","_callee6","totalReferrals","_context6","getTotalInvestments","_getTotalInvestments","_callee7","totalInvestments","_context7","totalInvested","getTotalWithdraws","_getTotalWithdraws","_callee8","totalWithdraws","_context8","totalWithdrawn","getTotalTxs","_getTotalTxs","_callee9","totalTxs","_context9","getUserAvailable","_getUserAvailable","_callee10","userAvailable","_context10","getContractBalanceRate","_getContractBalanceRate","_callee11","contractBalanceRate","_context11","getUserPercentRate","_getUserPercentRate","_callee12","userPercentRate","_context12","getUserTotalDeposits","_getUserTotalDeposits","_callee13","userTotalDeposits","_context13","getUserTotalWithdrawn","_getUserTotalWithdrawn","_callee14","userTotalWithdrawn","_context14","getUserReferralBonus","_getUserReferralBonus","_callee15","referralBonus","_context15","getUserReferralCountByLevel","_getUserReferralCountByLevel","_callee16","level","referralCount","_context16","getUserCheckpoint","_getUserCheckpoint","_callee17","userCheckPoint","checkpoint","_context17","currentDivsAddressBalance","_currentDivsAddressBalance","_callee18","_context18","invest","_invest","_callee19","sendAmount","referrer","payAmount","data","_context19","send","feeLimit","callValue","shouldPollResponse","withdrawDivs","_withdrawDivs","_callee20","_context20","withdraw","getUserWithdrawnAirdrop","_getUserWithdrawnAirdrop","_callee21","withdrawnAirdrop","_context21","getUserWithdrawn","getUserAvailableWithdrawAirdrop","_getUserAvailableWithdrawAirdrop","_callee22","availableAirdrop","_context22","getUserAvailableWithdraw","getAirdropRate","_getAirdropRate","_callee23","airdropRate","_context23","getAirdrop","_getAirdrop","_callee24","_context24","fromHex","trim","e","tracker","initialize","pageview","rawPath","trackerNames","event","category","label","value","nonInteraction","transport","parseReferralAddress","storedReferralAddress","referralAddress","qs","parse","location","search","substr","log","parseGameRoute","loadDataInterval","gameStartTime","moment","utc","renderer","days","hours","minutes","seconds","completed","Grid_default","item","xs","depositAmounts","isLoading","accountValidForReferral","accountBalance","contractBalance","baseRate","playerAddress","availableReferrerEarnings","level1RefCount","level2RefCount","level3RefCount","userCheckpoint","Landing","tronMain","loadData","Tracker","prevProps","index_es","toDate","styles","customTheme","renderCountdownIfNeeded","md","Button_default","disabled","React","&:hover","MINIMUM_DEPOSIT_GAS_FEE","MINIMUM_WITHDRAW_GAS_FEE","DailyDivs","loadPlayerData","loadDivsData","getPlayerData","isDepositDisabled","withdrawableDivs","investmentDivs","gameStarted","isBefore","isWithdrawDisabled","_this$state2","isAirdropDisabled","_this$state3","formatAmount","amount","formattedAmount","replace","getPlanInfo","planId","planData","copyLink","myReferralLink","handleDepositAmountChange","_ref6","deposit","_ref7","_this$state4","_this$state5","_this$state6","processWithdrawText","userPercentRateDisplay","baseRateDisplay","userHoldOutRateDisplay","contractBalanceRateDisplay","toLocaleString","TextField_default","autoComplete","onChange","InputProps","endAdornment","margin","react_copy_to_clipboard_lib","text","onCopy","FileCopy_default","DailyDivsSuper","tronMainLightning","DailyDivsLightning","toTruncateDown","n","Math","pow","v","toString","split","f","tronAccountDetails","_getPlayerData","myTokens","myDividends","myRoundStats","myReferrals","isValidAddress","getPlayerInfoCurrentRound","myRoundBuy","myRoundSell","balanceOf","_balanceOf","isAddress","contract_max","accountAddress","AccountDetails","TronAccountDetails","_ref3","playerData","handleChange","_ref4","defineProperty","Card_default","placeholder","tronMainP3X","getGlobalDataMAX","_getGlobalDataMAX","totalSupply","buyPrice","sellPrice","globalDividends","buyPriceMAX","_buyPriceMAX","sellPriceMAX","_sellPriceMAX","buyReceiveMAX","_buyReceiveMAX","reject","tokens","calculateTokensReceived","sellReceiveMAX","_sellReceiveMAX","orcaes","calculateTronReceived","_x6","_x7","_x5","getPlayerDataMAX","_getPlayerDataMAX","_x8","balanceOfMAX","_balanceOfMAX","_x9","purchaseMAX","_purchaseMAX","buy","_x10","sellMAX","_sellMAX","sell","_x11","reinvestMAX","_reinvestMAX","reinvest","withdrawMAX","_withdrawMAX","GlobalStates","_props$globalStates","globalStates","Grid_Grid_default","buyAmount","sellAmount","buyReceiveTokens","sellReceiveTokens","globalReferrals","P3X","loadTokenData","getGlobalData","buyReceive","sellReceive","globalData","tron","_ref5","handleBuyAmountChange","_ref8","handleSellAmountChange","_ref9","dailydivs","isButtonDisabled","purchase","result","TronMax_Landing","TronMax_DailyDivsSuper","TronMax_DailyDivs","TronMax_DailyDivsLightning","TronMax_AccountDetails","TronMax_P3X","Footer","App","initScreen","initTracker","options","renderToStaticMarkup","MuiThemeProvider_default","Common_GameAppBar","Common_RoutingScreen","Common_Footer","Common_GameSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b5f94c8.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_LANDING = 'SCREEN_LANDING';\nconst SCREEN_VAULT = 'SCREEN_VAULT';\nconst SCREEN_VAULT_SUPER = 'SCREEN_VAULT_SUPER';\nconst SCREEN_VAULT_LIGHTNING = 'SCREEN_VAULT_LIGHTNING';\nconst SCREEN_ACCOUNT_DETAILS = 'SCREEN_ACCOUNT_DETAILS';\nconst SCREEN_P3X = 'SCREEN_P3X';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport { SET_SCREEN, SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER, SCREEN_VAULT_LIGHTNING, SCREEN_P3X, SCREEN_ACCOUNT_DETAILS, RELOAD_ACCOUNT };\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#12161c',\n      main: '#12161c',\n      dark: '#12161c',\n      contrastText: '#1DA1F2',\n    },\n    secondary: {\n      light: '#a3eeff',\n      main: '#a3eeff',\n      dark: '#a3eeff',\n      contrastText: '#ffffff',\n    },\n    third: {\n      light: '#7ce27c',\n      main: '#7ce27c',\n      dark: '#7ce27c',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = props => <Slide direction=\"up\" {...props} />;\nexport default Transition;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport Dialog from '@material-ui/core/Dialog/Dialog';\nimport Transition from './Transition';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../../translations/translate.json';\n\nimport { SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING, SCREEN_P3X, setScreen } from '../../actions/app';\n\nconst TT_URL = 'https://twitter.com/trondexorg';\nconst TG_URL = 'https://t.me/trondex';\n\nclass GameAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n      anchorEl: null,\n      wechatOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('language') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('language', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getFlagUrl = code => {\n    return `images/misc/${code}.svg`;\n  };\n\n  getLogoImage = () => {\n    return `images/misc/logo_white.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_LANDING);\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderWechat() {\n    const { wechatOpen } = this.state;\n\n    return (\n      <Dialog\n        open={wechatOpen}\n        onClose={this.closeWechat}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"static\" className=\"wechat-appbar\">\n          <Toolbar>\n            <Tooltip title=\"Close\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.closeWechat}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <Translate id=\"max.joinWechat\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n    );\n  }\n\n  openWechat = () => {\n    this.setState({ wechatOpen: true });\n  };\n\n  closeWechat = () => {\n    this.setState({ wechatOpen: false });\n  };\n\n  renderDesktop() {\n    const { languages, anchorEl } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"logo\"\n            disableRipple={true}\n            onClick={this.home}\n          >\n            <img\n              src={this.getLogoImage()}\n              className=\"logo-medium\"\n              alt=\"vault\"\n            />\n          </IconButton>\n        </div>\n\n        <div>\n          {/* <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.invest\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_invest\"\n          >\n            <span className=\"contracts-menu gold\">\n              <Translate id=\"max.invest\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.stats\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_stats\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.stats\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.myaccount\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_myaccount\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.myaccount\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.roadmap\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_faq\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.faq\" />\n            </span>\n          </IconButton> */}\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.bancor\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            onClick={() => this.navigateTo(SCREEN_P3X)}\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.bancor\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.regularroi\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            onClick={() => this.navigateTo(SCREEN_VAULT)}\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.regularroi\" />\n            </span>\n          </IconButton>\n\n          {languages.map(lang => (\n            <IconButton\n              id={lang.code}\n              key={lang.code}\n              color=\"inherit\"\n              disableRipple={true}\n              onClick={() => this.setActiveLanguage(lang.code)}\n            >\n              <img\n                src={this.getFlagUrl(lang.code)}\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          ))}\n\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TT_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/twitter.png\"\n                className=\"image-flag\"\n                alt=\"Twitter\"\n              />\n            </IconButton>\n          </span>\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TG_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/telegram.png\"\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          disableRipple={true}\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            disableRipple={true}\n            aria-label={<Translate id=\"max.tronmax\" />}\n            onClick={this.home}\n          >\n            <span>\n              <Translate id=\"max.tronmax\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <ListItem\n                    button\n                    key={lang.code}\n                    className=\"drawer-item\"\n                    disableRipple={true}\n                    onClick={() => this.setActiveLanguage(lang.code)}\n                  >\n                    <img\n                      src={this.getFlagUrl(lang.code)}\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </ListItem>\n                ))}\n                <span className=\"social\">\n                  <IconButton\n                    disableRipple={true}\n                    className=\"social-button\"\n                    href={TT_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/twitter.png\"\n                      className=\"image-flag\"\n                      alt=\"Twitter\"\n                    />\n                  </IconButton>\n                </span>\n                <span className=\"social\">\n                  <IconButton\n                    className=\"social-button\"\n                    href={TG_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/telegram.png\"\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </IconButton>\n                </span>\n              </ListItem><Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                <IconButton\n                  className=\"contract-menu-button\"\n                  color=\"inherit\"\n                  aria-label={<Translate id=\"max.bancor\" />}\n                  disableRipple={true}\n                  onClick={() => this.navigateTo(SCREEN_P3X)}\n                >\n                  <span className=\"contracts-menu\">\n                    <Translate id=\"max.bancor\" />\n                  </span>\n                </IconButton>\n              </ListItem>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                <IconButton\n                  className=\"contract-menu-button\"\n                  color=\"inherit\"\n                  aria-label={<Translate id=\"max.regularroi\" />}\n                  disableRipple={true}\n                  onClick={() => this.navigateTo(SCREEN_VAULT)}\n                >\n                  <span className=\"contracts-menu\">\n                    <Translate id=\"max.regularroi\" />\n                  </span>\n                </IconButton>\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GameAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: '#0000a5',\n  },\n  error: {\n    backgroundColor: '#cc0040',\n  },\n  info: {\n    backgroundColor: '#2993c4',\n  },\n  warning: {\n    backgroundColor: '#c04a42',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst GameSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(GameSnackbar));\n","export const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy';\nexport const FOUNDATION_CODE = 6666;\n\nexport const injectTronWeb = async defaultTronWeb => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nexport const initContract = async (\n  tronWebState,\n  defaultTronWeb,\n  contractAddress\n) => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(contractAddress);\n    } else {\n      contract = await defaultTronWeb.contract().at(contractAddress);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport const trxToSun = trx => {\n  return trx * 1e6;\n};\n\nexport const sunToTrx = sun => {\n  if (isNaN(sun)) {\n    return '';\n  }\n  return sun / 1e6;\n};\n\nexport const weiToToken = wei => {\n  if (isNaN(wei)) {\n    return '';\n  }\n  return wei / 1e18;\n};\n\nexport const tokenToWei = token => {\n  return token * 1e18;\n};\n\nexport const isValidCode = code => {\n  const n = Math.floor(Number(code));\n  return n !== Infinity && String(n) === code && n >= FOUNDATION_CODE;\n};\nexport const isValidAddress = addrs => {\n  return true;\n};\n\nexport const getDateTimeFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(unix * 1000);\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\nexport const getDateTimeLongFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  if (unix > 0) {\n    let date = new Date(unix * 1000);\n    let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear(),\n      hour = '' + d.getHours(),\n      minute = '' + d.getMinutes();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    let p1 = [year, month, day].join('-');\n    let p2 = [hour, minute].join(':');\n\n    return [p1, p2].join(' ');\n  } else {\n    return null;\n  }\n};\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_LANDING, SCREEN_VAULT_SUPER, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_LANDING,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '418b8320d000ef408cce909c5a9368aefc8ada0225';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","import ReactGA from 'react-ga';\n// import { isProductionEnvironment } from './environment';\nconst isProductionEnvironment = false;\n\nexport default {\n  initialize: () => {\n    isProductionEnvironment && ReactGA.initialize('UA-3373847473-1');\n  },\n  pageview: (rawPath, trackerNames, title) => {\n    isProductionEnvironment && ReactGA.pageview(rawPath, trackerNames, title);\n  },\n  event: (\n    { category, action, label, value, nonInteraction, transport, ...args } = {},\n    trackerNames\n  ) => {\n    isProductionEnvironment &&\n      ReactGA.event(\n        { category, action, label, value, nonInteraction, transport, ...args },\n        trackerNames\n      );\n  },\n};\n","import Lockr from 'lockr';\nimport qs from 'qs';\n\nimport { isValidAddress } from './tronCommon';\nimport { SCREEN_LANDING } from '../actions/app';\n\nconst REFERRAL_ADDRESS_KEY = 'TRONDEX_REFERRAL'; // there is a typo, but can't change now\n\nexport const parseReferralAddress = () => {\n  const storedReferralAddress = Lockr.get(REFERRAL_ADDRESS_KEY);\n  const parsedQueryString = qs.parse(window.location.search.substr(1));\n  let referralAddress = parsedQueryString['ref'];\n  if (referralAddress && isValidAddress(referralAddress)) {\n    console.log(referralAddress);\n    // store the new referralAddress\n    Lockr.set(REFERRAL_ADDRESS_KEY, referralAddress);\n  } else if (!!storedReferralAddress) {\n    referralAddress = storedReferralAddress;\n  } else {\n    // empty, just return address(0)\n    referralAddress = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n  }\n  return referralAddress;\n};\n\nexport const parseGameRoute = () => {\n  return SCREEN_LANDING;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport { SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING,SCREEN_P3X, setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainSuper';\n\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-11-04T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        {/* <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '} */}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    \n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n\n                      \n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"maxtoken.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"maxtoken.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size grey\">\n                          <Translate id=\"maxtoken.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size grey\">\n                          <Translate id=\"maxtoken.subtitle3\" />\n                        </div>\n                      </Grid>\n\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_invest\" />\n\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.bancor\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div>\n                              <img\n                                src=\"images/misc/loot.svg\"\n                                className=\"image-medium\"\n                                alt=\"tron\"\n                              />\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  onClick={() =>\n                                    this.navigateTo(SCREEN_P3X)\n                                  }\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.regularroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div>\n                              <img\n                                src=\"images/misc/treasure2.svg\"\n                                className=\"image-medium\"\n                                alt=\"tron\"\n                              />\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  onClick={() =>\n                                    this.navigateTo(SCREEN_VAULT)\n                                  }\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.fomo\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div>\n                              <img\n                                src=\"images/misc/key.svg\"\n                                className=\"image-medium\"\n                                alt=\"tron\"\n                              />\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"withdraw-button\"\n                                  className=\"withdraw-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={true}\n                                >\n                                  <Translate id=\"max.coming\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                \n\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.lightningroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div>\n                              <img\n                                src=\"images/misc/treasure1.svg\"\n                                className=\"image-medium\"\n                                alt=\"tron\"\n                              />\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"disabled-button\"\n                                  className=\"disabled-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={true}\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.superroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div>\n                              <img\n                                src=\"images/misc/treasure3.svg\"\n                                className=\"image-medium\"\n                                alt=\"tron\"\n                              />\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"disabled-button\"\n                                  className=\"disabled-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={true}\n                                >\n                                  <Translate id=\"max.ended\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(Landing)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS =  '41dda355f8246a8b5fb6c7c7515b93b16d62ed75c9';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMain';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-05T12:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    // window.location.reload();\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n               <Grid item xs={12}>\n                  <div className=\"announcement\">\n                    <p className=\"announcement-text\">\n                      <Translate id=\"max.announcement\" />\n                    </p>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={TRADE_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.tradetdx\" />\n                        </Button>\n                        <Button\n                          className=\"contract-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_airdrop\"\n                        >\n                          <Translate id=\"max.claimairdrop\" />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/diamond.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <div id=\"section_airdrop\" />\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={6}>\n                            <div className=\"space\" />\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/gold.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.availableAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"green balance-number\">\n                                {availableAirdrop || 0} TDX\n                              </div>\n                            </div>\n\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/platinum.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawnAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"balance-number\">\n                                {withdrawnAirdrop || 0} TDX\n                              </div>\n                            </div>\n                            \n                            <div className=\"s-size\">\n                              <Translate id=\"max.tdxMessage1\" /> \n                               {' '}{airdropRate}{' '}\n                              <Translate id=\"max.tdxMessage2\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <Button\n                              id=\"sell-button\"\n                              variant=\"contained\"\n                              className=\"invest-button\"\n                              disableRipple={true}\n                              disabled={this.isAirdropDisabled()}\n                              onClick={this.getAirdrop}\n                            >\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.getairdrop\" />\n                              </span>\n                            </Button>\n                            <div className=\"s-size grey\">\n                              <Translate id=\"max.feewarningairdrop\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivs)));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainSuper';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TNgt1fjg8hPryEiawHg4sz4iFPGQWydRB2/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-28T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        {/* <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '} */}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivsSuper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitlesuper\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1super\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2super\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3super\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/gold.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivsSuper)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '4122d80bb74711e712f3c9d504ac56b687af28331f';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainLightning';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TD9Snho6A9X3At5tM8g311ozz3VEocTA1m/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-30T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivsLightning extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitlelightning\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1lightning\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2lightning\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3lightning\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/platinum.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivsLightning)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { SNACKBAR_ERROR } from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  weiToToken,\n} from './tronCommon';\nimport { toTruncateDown } from './math';\n\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// MAINNET\nconst CONTRACT_ADDRESS = '413f100fbdd26bff25982c35cdadc2f2e6837516cd';\n\n// TESTNET\n// const CONTRACT_ADDRESS = '413084e0c71893d69c2ec1e3fb7701a479da2c9c05';\n\nlet contract;\nlet tronWebState;\nlet tronWeb;\n\nexport default {\n  async initTronWeb(address) {\n    tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n    tronWeb.defaultAddress = {\n      hex: tronWeb.address.toHex(address),\n      base58: FOUNDATION_ADDRESS,\n    };\n\n    tronWebState = await injectTronWeb(tronWeb);\n    contract = await initContract(\n      TRON_WEB_STATE_LOCKED,\n      tronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n    return tronWebState;\n  },\n\n  async getPlayerData(address) {\n    if (!this.isValidAddress(address)) {\n      return null;\n    }\n\n    const myTokens = await contract.myTokens().call();\n    const myDividends = await contract.myDividends().call();\n    const myRoundStats = await contract\n      .getPlayerInfoCurrentRound(address)\n      .call();\n    const myReferrals = await contract.myReferrals().call();\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n      myReferrals: myReferrals\n        ? sunToTrx(new BigNumber(myReferrals).toNumber())\n        : 0,\n      myRoundBuy: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[0]).toNumber())\n        : 0,\n      myRoundSell: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[1]).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  isValidAddress(address) {\n    return address && tronWeb.isAddress(address);\n  },\n};\n","export const toTruncateDown = (value, n) => {\n  if (value < Math.pow(0.1, n)) {\n    return 0;\n  }\n  const v = value.toString().split('.');\n  if (n <= 0) {\n    return v[0];\n  }\n\n  let f = v[1] || '';\n  if (f.length > n) {\n    const result = `${v[0]}.${f.substr(0, n)}`;\n    return result;\n  }\n  while (f.length < n) {\n    f += '0';\n  }\n  const result = `${v[0]}.${f}`;\n  return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport TronAccountDetails from '../../utils/tronAccountDetails';\n\nimport Tracker from '../../utils/tracker';\nimport { SNACKBAR_ERROR } from '../Common/GameSnackbar';\n\nconst initialState = {\n  myTokens: null,\n  myDividends: null,\n  myRoundBuy: null,\n  myRoundSell: null,\n  myReferrals: null,\n  accountAddress: '',\n};\n\nclass AccountDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    Tracker.pageview('/accountDetails');\n  }\n\n  search = async () => {\n    const { showSnackbar } = this.props;\n    const { accountAddress } = this.state;\n    if (!accountAddress) {\n      showSnackbar('Address can not be empty!', SNACKBAR_ERROR);\n      return;\n    }\n    const tronWebState = await TronAccountDetails.initTronWeb(accountAddress);\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData(accountAddress);\n  };\n\n  loadData = async accountAddress => {\n    await this.getPlayerData(accountAddress);\n  };\n\n  getPlayerData = async address => {\n    const playerData = await TronAccountDetails.getPlayerData(address);\n    if (!playerData) {\n      return;\n    }\n    const myTokens = playerData.myTokens;\n    const myReferrals = playerData.myReferrals;\n    const myDividends = playerData.myDividends;\n    const myRoundBuy = playerData.myRoundBuy;\n    const myRoundSell = playerData.myRoundSell;\n    this.setState({\n      myTokens,\n      myDividends,\n      myReferrals,\n      myRoundBuy,\n      myRoundSell,\n    });\n  };\n\n  handleChange = async event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      myTokens,\n      myDividends,\n      myRoundBuy,\n      myRoundSell,\n      myReferrals,\n      accountAddress,\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <Card color=\"primary\" className=\"card\">\n            <Grid\n              container\n              spacing={24}\n              className=\"component-card account-card\"\n            >\n              <Grid item xs={12} md={6}>\n                <div className=\"buy-placeholder\">\n                  <Grid item xs={12}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"l-size\">\n                          <Translate id=\"account.searchAddress\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"input-box\">\n                        <TextField\n                          label=\"\"\n                          name=\"accountAddress\"\n                          className=\"buy-token\"\n                          autoComplete=\"off\"\n                          placeholder=\"address e.g. T*****\"\n                          value={accountAddress}\n                          onChange={this.handleChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <Button\n                            id=\"buy-button\"\n                            className=\"buy-button\"\n                            variant=\"contained\"\n                            onClick={this.search}\n                          >\n                            <Translate id=\"account.search\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.token\" /> {myTokens || 0}{' '}\n                        <span className=\"blue\">\n                          <Translate id=\"general.token\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.myReferrals\" />{' '}\n                        {myReferrals || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.claimableTrx\" />{' '}\n                        {myDividends || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundBuyTrx\" /> {myRoundBuy || 0}{' '}\n                        <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundSellTrx\" />{' '}\n                        {myRoundSell || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AccountDetails));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  tokenToWei,\n  getDateTimeFromUnix,\n} from './tronCommon';\n\nimport { toTruncateDown } from './math';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_P3X_ADDRESS = '41f9baacfd17022667ae3cce1bf6193fd6b0e201ef';\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract_max;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract_max = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_P3X_ADDRESS\n      );\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract_max = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_P3X_ADDRESS\n      );\n    if (!contract_max) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  \n\n  //P3X Token\n\n  async getGlobalDataMAX() {\n    const totalSupply = await contract_max.totalSupply().call();\n    const buyPrice = await contract_max.buyPrice().call();\n    const sellPrice = await contract_max.sellPrice().call();\n    const globalDividends = await contract_max.globalDividends().call();\n    return {\n      totalSupply: totalSupply\n        ? toTruncateDown(\n            new BigNumber(weiToToken(new BigNumber(totalSupply).toNumber())),\n            6\n          )\n        : 0,\n      buyPrice: buyPrice ? sunToTrx(new BigNumber(buyPrice).toNumber()) : 0,\n      sellPrice: sellPrice ? sunToTrx(new BigNumber(sellPrice).toNumber()) : 0,\n      globalDividends: globalDividends\n        ? sunToTrx(new BigNumber(globalDividends).toNumber())\n        : 0,\n    };\n  },\n\n  async buyPriceMAX() {\n    const buyPrice = await contract_max.buyPrice().call();\n    return sunToTrx(new BigNumber(buyPrice).toNumber());\n  },\n\n  async sellPriceMAX() {\n    const sellPrice = await contract_max.buyPrice().call();\n    return sunToTrx(new BigNumber(sellPrice).toNumber());\n  },\n\n  async buyReceiveMAX(amount) {\n    return new Promise(async (resolve, reject) => {\n      const trx = new BigNumber(trxToSun(amount));\n      const hex = await window.tronWeb.toHex(trx.toNumber());\n      try {\n        const tokens = await contract_max.calculateTokensReceived(hex).call();\n        resolve(toTruncateDown(new BigNumber(weiToToken(tokens)), 6));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n\n  async sellReceiveMAX(amount) {\n    return new Promise(async (resolve, reject) => {\n      const orcaes = new BigNumber(tokenToWei(amount));\n      const hex = await window.tronWeb.toHex(orcaes.toNumber());\n      try {\n        const trx = await contract_max.calculateTronReceived(hex).call();\n        resolve(sunToTrx(new BigNumber(trx)));\n      } catch (e) {\n        console.log(e);\n        reject(e);\n      }\n    });\n  },\n\n  async getPlayerDataMAX(address) {\n    if (!address || address === FOUNDATION_ADDRESS) {\n      return {\n        myTokens: 0,\n        myDividends: 0,\n        myReferrals: 0,\n      };\n    }\n\n    const myTokens = await contract_max.myTokens().call();\n    const myDividends = await contract_max.myDividends().call();\n    // const myReferrals = await contract_max.myReferralReceived().call();\n\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOfMAX(address) {\n    const balance = await contract_max.balanceOf(address).call();\n    return balance;\n  },\n\n  async purchaseMAX(sendAmount) {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n    const data = await contract_max.buy().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async sellMAX(sendAmount) {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const orcaes = new BigNumber(tokenToWei(sendAmount));\n    const hex = await window.tronWeb.toHex(orcaes.toNumber());\n\n    const payAmount = 0;\n    const data = await contract_max.sell(hex).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async reinvestMAX() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract_max.reinvest().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawMAX() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract_max.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import Grid from '@material-ui/core/Grid/Grid';\nimport { Translate } from 'react-localize-redux';\nimport React from 'react';\n\nexport default props => {\n  const {\n    totalSupply,\n    buyPrice,\n    sellPrice,\n  } = props.globalStates;\n  return (\n    <div color=\"primary\" className=\"card home-card\">\n      <div className=\"container\">\n        <Grid container spacing={24} className=\"component-card\">\n          <Grid item xs={12} md={4}>\n            <span className=\"global-stats-item\">\n              <span className=\"gold balance-number\">{totalSupply} </span>\n              P3X\n            </span>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <span className=\"global-stats-item\">\n              <Translate id=\"max.buy\" />{' '}\n              <span className=\"green balance-number\">{buyPrice}</span>\n              TRX\n            </span>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <span className=\"global-stats-item\">\n              <Translate id=\"max.sell\" />{' '}\n              <span className=\"red balance-number\">{sellPrice} </span>\n              TRX\n            </span>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport {\n  setScreen,\n  SCREEN_VAULT,\n} from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport tron, { defaultTronWeb } from '../../utils/tronMainP3X';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_SUCCESS,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\nimport GlobalStates from './GlobalStates';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst shouldShowInvestor = true;\n\nconst WEB_SITE_URL = 'https://trondex.org';\nconst VERIFY_URL =\n  'https://www.tronscan.org/#/contract/TYjetHL6xGS8FMW2B6FdDhzGBgLNLU8j96/code';\n\nconst gameStartTime = moment.utc('2020-11-04T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        {/* <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '} */}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\n\n\nconst initialState = {\n  totalSupply: null,\n  buyPrice: null,\n  sellPrice: null,\n  buyAmount: '100',\n  sellAmount: '0',\n  buyReceiveTokens: '',\n  sellReceiveTokens: '0',\n  isLoading: false,\n  myTokens: null,\n  myDividends: null,\n  myReferrals: null,\n  accountValidForReferral: false,\n  globalDividends: null,\n  globalReferrals: null,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 3000; // 3 sec\n\nclass P3X extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const tronWebState = await tron.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/tvt');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadTokenData();\n  };\n\n  loadTokenData = async () => {\n    const { buyAmount, sellAmount } = this.state;\n    await this.getGlobalData();\n    await this.buyReceive(buyAmount);\n    await this.sellReceive(sellAmount);\n    await this.getPlayerData();\n  };\n\n  getGlobalData = async () => {\n    const globalData = await tron.getGlobalDataMAX();\n    if (globalData) {\n      this.setState({\n        totalSupply: globalData.totalSupply,\n        buyPrice: globalData.buyPrice,\n        sellPrice: globalData.sellPrice,\n        globalDividends: globalData.globalDividends,\n        globalReferrals: globalData.globalReferrals,\n      });\n    }\n  };\n\n  buyReceive = async amount => {\n    if (amount > 0) {\n      try {\n        const buyReceiveTokens = await tron.buyReceiveMAX(amount);\n        this.setState({ buyReceiveTokens });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      this.setState({ buyReceiveTokens: 0 });\n    }\n  };\n\n  sellReceive = async amount => {\n    if (amount > 0) {\n      try {\n        const sellReceiveTokens = await tron.sellReceiveMAX(amount);\n        this.setState({ sellReceiveTokens });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      this.setState({ sellReceiveTokens: 0 });\n    }\n  };\n\n  getPlayerData = async () => {\n    const address = tron.getCurrentAddress();\n    const accountBalance = await tron.currentAddressBalance();\n    this.setState({\n      accountValidForReferral: accountBalance > 0,\n      accountBalance,\n    });\n    const playerData = await tron.getPlayerDataMAX(address);\n    if (playerData) {\n      const myTokens = playerData.myTokens;\n      const myReferrals = playerData.myReferrals;\n      const myDividends = playerData.myDividends;\n      this.setState({\n        myTokens,\n        myDividends,\n        myReferrals,\n      });\n    }\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return 0;\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  handleBuyAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    this.setState({ buyAmount: formattedAmount });\n    await this.buyReceive(formattedAmount);\n  };\n\n  handleSellAmountChange = async event => {\n    let formattedAmount = this.formatAmount(event.target.value);\n    this.setState({ sellAmount: formattedAmount });\n    await this.sellReceive(formattedAmount);\n  };\n\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  dailydivs = () => {\n    this.navigateTo(SCREEN_VAULT);\n  };\n\n\n\n  isButtonDisabled = () => {\n    const { isLoading} = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading|| !gameStarted;\n  };\n\n  purchase = async () => {\n    const { buyAmount } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Token',\n      action: 'Buy MAX',\n    });\n    if (buyAmount <= 0) {\n      showSnackbar('message.buyNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n    this.setState({ isLoading: true });\n\n    try {\n      const result = await tron.purchaseMAX(buyAmount);\n      this.setState({ isLoading: false });\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.purchaseSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      this.setState({ isLoading: false });\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_WARNING);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.timout', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  sell = async () => {\n    const { sellAmount, myTokens } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Token',\n      action: 'Sell MAX',\n    });\n\n    if (sellAmount <= 0) {\n      showSnackbar('message.sellNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (sellAmount > myTokens) {\n      showSnackbar('message.sellMoreThanOwnedToken', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tron.sellMAX(sellAmount);\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.sellSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.log(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_WARNING);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.timout', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  reinvest = async () => {\n    const { myDividends } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Token',\n      action: 'Reinvest',\n    });\n\n    if (myDividends <= 0) {\n      showSnackbar('message.reinvestNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tron.reinvestMAX();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.purchaseSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.log(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_WARNING);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.timout', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { myDividends } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Token',\n      action: 'Withdraw',\n    });\n\n    if (myDividends <= 0) {\n      showSnackbar('message.withdrawNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tron.withdrawMAX();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.log(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_WARNING);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.timout', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      totalSupply,\n      buyPrice,\n      sellPrice,\n      globalDividends,\n      globalReferrals,\n      buyAmount,\n      sellAmount,\n      buyReceiveTokens,\n      sellReceiveTokens,\n      myTokens,\n      myDividends,\n      myReferrals,\n      accountValidForReferral,\n      accountBalance,\n    } = this.state;\n    const { classes } = this.props;\n    const globalStates = {\n      totalSupply,\n      buyPrice,\n      sellPrice,\n      globalDividends,\n      globalReferrals,\n    };\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <GlobalStates globalStates={globalStates} />\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <Grid container spacing={24} className=\"component-card\">\n              <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"maxtoken.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"maxtoken.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size grey\">\n                          <Translate id=\"maxtoken.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size grey\">\n                          <Translate id=\"maxtoken.subtitle3\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={VERIFY_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12} md={12}>\n                  <Grid container spacing={24} className=\"content-card\">\n                    <Grid item xs={12} md={6}>\n                      <div className=\"buy-placeholder\">\n                        <div id=\"token\" className=\"title-placeholder dark-bg\">\n                          <span className=\"m-size gold\">\n                            <Translate id=\"max.buy\" />\n                          </span>\n                        </div>\n                        <div className=\"space\" />\n                        <div className=\"input-box\">\n                          <TextField\n                            label=\"\"\n                            name=\"selectedAsset\"\n                            className=\"buy-token\"\n                            autoComplete=\"off\"\n                            value={buyAmount}\n                            onChange={this.handleBuyAmountChange}\n                            InputProps={{\n                              endAdornment: (\n                                <img\n                                  src=\"images/misc/logo.svg\"\n                                  className=\"logo\"\n                                  alt=\"tron\"\n                                />\n                              ),\n                            }}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                          />\n                        </div>\n\n                        <div>\n                          <span className=\"s-size\">\n                            <span className=\"equal-sign\">\n                              = \n                            </span>{' '}\n                            <span className=\"blue\">{buyReceiveTokens}</span>{' '}\n                            <span className=\"\">\n                              P3X\n                            </span>\n                          </span>\n                        </div>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12}>\n                            <Button\n                              id=\"buy-button\"\n                              className=\"invest-button\"\n                              variant=\"contained\"\n                              disableRipple={true}\n                              disabled={this.isButtonDisabled()}\n                              onClick={this.purchase}\n                            >\n                              <Translate id=\"max.buy\" /> P3X\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <div className=\"buy-placeholder\">\n                        <div className=\"title-placeholder dark-bg\">\n                          <span className=\"m-size gold\">\n                            <Translate id=\"max.sell\" />\n                          </span>\n                        </div>\n                        <div className=\"space\" />\n                        <div className=\"input-box\">\n                          <TextField\n                            label=\"\"\n                            name=\"selectedAsset\"\n                            className=\"sell-token\"\n                            autoComplete=\"off\"\n                            value={sellAmount}\n                            onChange={this.handleSellAmountChange}\n                            InputProps={{\n                              endAdornment: (\n                                <img\n                                  src=\"images/misc/logo.svg\"\n                                  className=\"logo\"\n                                  alt=\"token\"\n                                />\n                              ),\n                            }}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                          />\n                        </div>\n                        <div>\n                          <span className=\"s-size\">\n                            <span className=\"equal-sign\">\n                              =\n                            </span>{' '}\n                            <span className=\"green\">{sellReceiveTokens}</span>{' '}\n                            <span>TRX</span>\n                          </span>\n                        </div>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12}>\n                            <Button\n                              id=\"sell-button\"\n                              variant=\"contained\"\n                              className=\"withdraw-button\"\n                              disableRipple={true}\n                              disabled={this.isButtonDisabled()}\n                              onClick={this.sell}\n                            >\n                              <Translate id=\"max.sell\" /> P3X\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </div>\n                    </Grid>\n                    <div className=\"space\" />\n                    <Grid\n                      container\n                      spacing={0}\n                      className=\"component-card dd-card\"\n                    >\n                      <Grid item xs={12} md={12}>\n                        <div className=\"buy-placeholder\">\n                          <div className=\"my-account title-placeholder dark-bg\">\n                            <span className=\"m-size gold\">\n                              My Account\n                            </span>\n                          </div>\n                          <div className=\"space\" />\n                          <Grid container spacing={24}>\n                            <Grid item xs={6}>\n                              <div>\n                                <div className=\"middle-children gold\">\n                                  P3X <Translate id=\"max.token\" />\n                                </div>\n                                <div className=\"space\" />\n                                <div>\n                                  <span className=\"blue\">{myTokens || 0}</span> P3X\n                                </div>\n                              </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                              <div>\n                                <div className=\"middle-children\">\n                                  <img\n                                    src=\"images/misc/logo.svg\"\n                                    className=\"logo\"\n                                    alt=\"logo\"\n                                  />{' '} <Translate id=\"max.withdrawableTrx\" />\n                                </div> \n                                <div className=\"space\" />\n                                <div>\n                                  <span className=\"green\">{myDividends || 0}</span> TRX\n                                </div>\n                              </div>\n                            </Grid>\n                          </Grid>\n                          <Grid container spacing={0}>\n                            <Grid item xs={12} md={6}>\n                              <Grid container spacing={24}>\n                                <Grid item xs={12}>\n                                  <Button\n                                    id=\"reinvest-button\"\n                                    variant=\"contained\"\n                                    className=\"invest-button\"\n                                    disableRipple={true}\n                                    disabled={this.isButtonDisabled()}\n                                    onClick={this.reinvest}\n                                  >\n                                    <Translate id=\"max.reinvest\" />\n                                  </Button>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                              <Grid container spacing={24}>\n                                <Grid item xs={12}>\n                                  <Button\n                                    id=\"withdraw-button\"\n                                    variant=\"contained\"\n                                    className=\"withdraw-button\"\n                                    disableRipple={true}\n                                    disabled={this.isButtonDisabled()}\n                                    onClick={this.withdraw}\n                                  >\n                                    <Translate id=\"max.withdraw\" />\n                                  </Button>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n\n                          </Grid>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n              <Grid item xs={12} md={12}>\n                  <div className=\"buy-placeholder faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"maxtoken.about\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"faq-placeholder\">\n                      <div className=\"answer\">\n                         <Translate id=\"maxtoken.description\" />\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n\n              <div className=\"space\" />\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(P3X)));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING,SCREEN_P3X, SCREEN_ACCOUNT_DETAILS } from '../../actions/app';\n\nimport Landing from '../TronMax/Landing';\nimport DailyDivs from '../TronMax/DailyDivs';\nimport DailyDivsSuper from '../TronMax/DailyDivsSuper';\nimport DailyDivsLightning from '../TronMax/DailyDivsLightning';\nimport AccountDetails from '../TronMax/AccountDetails';\nimport P3X from '../TronMax/P3X';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n  \tcase SCREEN_LANDING:\n      return <Landing />;\n    case SCREEN_VAULT_SUPER:\n      return <DailyDivsSuper />;\n    case SCREEN_VAULT:\n      return <DailyDivs />;\n    case SCREEN_VAULT_LIGHTNING:\n      return <DailyDivsLightning />;\n    case SCREEN_ACCOUNT_DETAILS:\n      return <AccountDetails />;\n    case SCREEN_P3X:\n      return <P3X />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport customTheme from './customTheme';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"s-size aqua copy-right\">\n            {' '}\n            &copy; 2020 TronDEX - Decentralized Game on Tron\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(null)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize } from 'react-localize-redux';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen } from '../actions/app';\nimport customTheme from './Common/customTheme';\nimport AppBar from './Common/GameAppBar';\nimport Snackbar from './Common/GameSnackbar';\nimport RoutingScreen from './Common/RoutingScreen';\nimport Footer from './Common/Footer';\nimport './App.css';\nimport Tracker from '../utils/tracker';\nimport { parseGameRoute } from '../utils/parseQueryString';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initTracker();\n    this.initScreen();\n  }\n\n  initScreen = () => {\n    const { setScreen } = this.props;\n    const screen = parseGameRoute();\n    setScreen(screen);\n  };\n\n  initTracker = () => {\n    Tracker.initialize();\n    Tracker.pageview('/app');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"body\">\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}