{"version":3,"sources":["actions/app.js","components/Common/customTheme.js","components/Common/Transition.js","components/Common/GameAppBar.js","actions/constants.js","actions/snackbar.js","components/Common/GameSnackbar.js","utils/tronCommon.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","utils/tronMainSuper.js","store/index.js","utils/tracker.js","utils/parseQueryString.js","components/TronMax/Landing.js","utils/tronMain.js","components/TronMax/DailyDivs.js","components/TronMax/DailyDivsSuper.js","utils/tronMainLightning.js","components/TronMax/DailyDivsLightning.js","utils/tronAccountDetails.js","utils/math.js","components/TronMax/AccountDetails.js","components/Common/RoutingScreen.js","components/Common/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["SET_SCREEN","SCREEN_LANDING","RELOAD_ACCOUNT","setScreen","screen","type","payload","reloadAccount","reloadAccountNonce","uuid","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","third","action","important","warning","slider","trackSize","handleSize","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","TT_URL","TG_URL","GameAppBar","_this","classCallCheck","this","_super","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getFlagUrl","concat","getLogoImage","navigateTo","home","handleDrawerToggle","state","openWechat","wechatOpen","closeWechat","languages","name","anchorEl","addTranslation","siteTranslations","activeLanguageCode","get","Dialog_default","open","onClose","TransitionComponent","AppBar_default","position","className","Toolbar_default","Tooltip_default","title","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","variant","react_localize_redux_es","id","_this2","_this$state","disableRipple","src","alt","aria-owns","undefined","map","lang","key","href","rel","target","_this3","Menu_default","Drawer_default","container","anchor","List_default","Divider_default","ListItem_default","button","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","SNACKBAR_WARNING","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","core_IconButton_default","close","hideSnackbar","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","indexOf","TRON_WEB_STATE_NOT_MAINNET","FOUNDATION_ADDRESS","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","defaultTronWeb","wrap","_context","prev","next","abrupt","Promise","resolve","tronWebState","tries","timer","setInterval","window","tronWeb","clearInterval","ready","stop","_x","apply","arguments","initContract","_ref2","_callee2","contractAddress","contract","_context2","at","sent","t0","console","_x2","_x3","_x4","trxToSun","trx","sunToTrx","sun","isNaN","weiToToken","wei","getDateTimeLongFromUnix","unix","date","Date","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","initialState","currentAddress","airdropContract","reducers","app","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","tronMainSuper","initTronWeb","_initTronWeb","store","dispatch","on","needsToNotify","getCurrentAddress","currentAddressBalance","_currentAddressBalance","_callee3","balance","_context3","getBalance","_getBalance","_callee4","_context4","getContractBalance","BigNumber","toNumber","getPlayerCount","_getPlayerCount","_callee5","totalusers","playerCount","_context5","totalUsers","getTotalReferrals","_getTotalReferrals","_callee6","totalReferrals","_context6","getTotalInvestments","_getTotalInvestments","_callee7","totalInvestments","_context7","totalInvested","getTotalWithdraws","_getTotalWithdraws","_callee8","totalWithdraws","_context8","totalWithdrawn","getTotalTxs","_getTotalTxs","_callee9","totalTxs","_context9","getUserAvailable","_getUserAvailable","_callee10","userAvailable","_context10","getContractBalanceRate","_getContractBalanceRate","_callee11","contractBalanceRate","_context11","getUserPercentRate","_getUserPercentRate","_callee12","userPercentRate","_context12","getUserTotalDeposits","_getUserTotalDeposits","_callee13","userTotalDeposits","_context13","getUserTotalWithdrawn","_getUserTotalWithdrawn","_callee14","userTotalWithdrawn","_context14","getUserReferralBonus","_getUserReferralBonus","_callee15","referralBonus","_context15","getUserReferralCountByLevel","_getUserReferralCountByLevel","_callee16","level","referralCount","_context16","getUserCheckpoint","_getUserCheckpoint","_callee17","userCheckPoint","checkpoint","_context17","currentDivsAddressBalance","_currentDivsAddressBalance","_callee18","_context18","invest","_invest","_callee19","sendAmount","referrer","payAmount","data","_context19","send","feeLimit","callValue","shouldPollResponse","withdrawDivs","_withdrawDivs","_callee20","_context20","withdraw","getUserWithdrawnAirdrop","_getUserWithdrawnAirdrop","_callee21","withdrawnAirdrop","_context21","getUserWithdrawn","getUserAvailableWithdrawAirdrop","_getUserAvailableWithdrawAirdrop","_callee22","availableAirdrop","_context22","getUserAvailableWithdraw","getAirdropRate","_getAirdropRate","_callee23","airdropRate","_context23","getAirdrop","_getAirdrop","_callee24","_context24","fromHex","trim","e","tracker","initialize","pageview","rawPath","trackerNames","event","category","label","value","nonInteraction","transport","parseReferralAddress","storedReferralAddress","referralAddress","qs","parse","location","search","substr","log","parseGameRoute","loadDataInterval","gameStartTime","moment","utc","renderer","days","hours","minutes","seconds","completed","Grid_default","item","xs","depositAmounts","isLoading","accountValidForReferral","accountBalance","contractBalance","baseRate","playerAddress","availableReferrerEarnings","level1RefCount","level2RefCount","level3RefCount","userCheckpoint","Landing","tronMain","loadData","Tracker","prevProps","index_es","toDate","styles","customTheme","renderCountdownIfNeeded","md","Button_default","React","&:hover","MINIMUM_DEPOSIT_GAS_FEE","MINIMUM_WITHDRAW_GAS_FEE","DailyDivs","loadPlayerData","loadDivsData","getPlayerData","isDepositDisabled","withdrawableDivs","investmentDivs","gameStarted","isBefore","isWithdrawDisabled","_this$state2","isAirdropDisabled","_this$state3","formatAmount","amount","formattedAmount","replace","getPlanInfo","planId","planData","copyLink","myReferralLink","handleDepositAmountChange","_ref6","deposit","_ref7","_this$state4","_this$state5","_this$state6","processWithdrawText","userPercentRateDisplay","baseRateDisplay","userHoldOutRateDisplay","contractBalanceRateDisplay","toLocaleString","TextField_default","autoComplete","onChange","InputProps","endAdornment","margin","disabled","react_copy_to_clipboard_lib","text","onCopy","FileCopy_default","DailyDivsSuper","tronMainLightning","DailyDivsLightning","toTruncateDown","n","Math","pow","v","toString","split","f","tronAccountDetails","_getPlayerData","myTokens","myDividends","myRoundStats","myReferrals","isValidAddress","getPlayerInfoCurrentRound","myRoundBuy","myRoundSell","balanceOf","_balanceOf","isAddress","accountAddress","AccountDetails","TronAccountDetails","_ref3","playerData","handleChange","_ref4","defineProperty","Card_default","placeholder","TronMax_Landing","TronMax_DailyDivsSuper","TronMax_DailyDivs","TronMax_DailyDivsLightning","TronMax_AccountDetails","Footer","App","initScreen","initTracker","options","renderToStaticMarkup","MuiThemeProvider_default","Common_GameAppBar","Common_RoutingScreen","Common_Footer","Common_GameSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.e269f77f.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_LANDING = 'SCREEN_LANDING';\nconst SCREEN_VAULT = 'SCREEN_VAULT';\nconst SCREEN_VAULT_SUPER = 'SCREEN_VAULT_SUPER';\nconst SCREEN_VAULT_LIGHTNING = 'SCREEN_VAULT_LIGHTNING';\nconst SCREEN_ACCOUNT_DETAILS = 'SCREEN_ACCOUNT_DETAILS';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport { SET_SCREEN, SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER, SCREEN_VAULT_LIGHTNING, SCREEN_ACCOUNT_DETAILS, RELOAD_ACCOUNT };\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#12161c',\n      main: '#12161c',\n      dark: '#12161c',\n      contrastText: '#1DA1F2',\n    },\n    secondary: {\n      light: '#a3eeff',\n      main: '#a3eeff',\n      dark: '#a3eeff',\n      contrastText: '#ffffff',\n    },\n    third: {\n      light: '#7ce27c',\n      main: '#7ce27c',\n      dark: '#7ce27c',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = props => <Slide direction=\"up\" {...props} />;\nexport default Transition;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport Dialog from '@material-ui/core/Dialog/Dialog';\nimport Transition from './Transition';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../../translations/translate.json';\n\nimport { SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING, setScreen } from '../../actions/app';\n\nconst TT_URL = 'https://twitter.com/trondexorg';\nconst TG_URL = 'https://t.me/trondex';\n\nclass GameAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n      anchorEl: null,\n      wechatOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('language') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('language', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getFlagUrl = code => {\n    return `images/misc/${code}.svg`;\n  };\n\n  getLogoImage = () => {\n    return `images/misc/logo_white.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_LANDING);\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderWechat() {\n    const { wechatOpen } = this.state;\n\n    return (\n      <Dialog\n        open={wechatOpen}\n        onClose={this.closeWechat}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"static\" className=\"wechat-appbar\">\n          <Toolbar>\n            <Tooltip title=\"Close\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.closeWechat}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <Translate id=\"max.joinWechat\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n    );\n  }\n\n  openWechat = () => {\n    this.setState({ wechatOpen: true });\n  };\n\n  closeWechat = () => {\n    this.setState({ wechatOpen: false });\n  };\n\n  renderDesktop() {\n    const { languages, anchorEl } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"logo\"\n            disableRipple={true}\n            onClick={this.home}\n          >\n            <img\n              src={this.getLogoImage()}\n              className=\"logo-medium\"\n              alt=\"vault\"\n            />\n          </IconButton>\n        </div>\n\n        <div>\n          {/* <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.invest\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_invest\"\n          >\n            <span className=\"contracts-menu gold\">\n              <Translate id=\"max.invest\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.stats\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_stats\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.stats\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.myaccount\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_myaccount\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.myaccount\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.roadmap\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_faq\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.faq\" />\n            </span>\n          </IconButton> */}\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.lightningroi\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            onClick={() => this.navigateTo(SCREEN_VAULT_LIGHTNING)}\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.lightningroi\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.regularroi\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            onClick={() => this.navigateTo(SCREEN_VAULT)}\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.regularroi\" />\n            </span>\n          </IconButton>\n\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.superroi\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            onClick={() => this.navigateTo(SCREEN_VAULT_SUPER)}\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.superroi\" />\n            </span>\n          </IconButton>\n\n          {languages.map(lang => (\n            <IconButton\n              id={lang.code}\n              key={lang.code}\n              color=\"inherit\"\n              disableRipple={true}\n              onClick={() => this.setActiveLanguage(lang.code)}\n            >\n              <img\n                src={this.getFlagUrl(lang.code)}\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          ))}\n\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TT_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/twitter.png\"\n                className=\"image-flag\"\n                alt=\"Twitter\"\n              />\n            </IconButton>\n          </span>\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TG_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/telegram.png\"\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          disableRipple={true}\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            disableRipple={true}\n            aria-label={<Translate id=\"max.tronmax\" />}\n            onClick={this.home}\n          >\n            <span>\n              <Translate id=\"max.tronmax\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <ListItem\n                    button\n                    key={lang.code}\n                    className=\"drawer-item\"\n                    disableRipple={true}\n                    onClick={() => this.setActiveLanguage(lang.code)}\n                  >\n                    <img\n                      src={this.getFlagUrl(lang.code)}\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </ListItem>\n                ))}\n                <span className=\"social\">\n                  <IconButton\n                    disableRipple={true}\n                    className=\"social-button\"\n                    href={TT_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/twitter.png\"\n                      className=\"image-flag\"\n                      alt=\"Twitter\"\n                    />\n                  </IconButton>\n                </span>\n                <span className=\"social\">\n                  <IconButton\n                    className=\"social-button\"\n                    href={TG_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/telegram.png\"\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </IconButton>\n                </span>\n              </ListItem><Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                <IconButton\n                  className=\"contract-menu-button\"\n                  color=\"inherit\"\n                  aria-label={<Translate id=\"max.lightningroi\" />}\n                  disableRipple={true}\n                  onClick={() => this.navigateTo(SCREEN_VAULT_LIGHTNING)}\n                >\n                  <span className=\"contracts-menu\">\n                    <Translate id=\"max.lightningroi\" />\n                  </span>\n                </IconButton>\n              </ListItem>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                <IconButton\n                  className=\"contract-menu-button\"\n                  color=\"inherit\"\n                  aria-label={<Translate id=\"max.regularroi\" />}\n                  disableRipple={true}\n                  onClick={() => this.navigateTo(SCREEN_VAULT)}\n                >\n                  <span className=\"contracts-menu\">\n                    <Translate id=\"max.regularroi\" />\n                  </span>\n                </IconButton>\n              </ListItem>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                <IconButton\n                  className=\"contract-menu-button\"\n                  color=\"inherit\"\n                  aria-label={<Translate id=\"max.superroi\" />}\n                  disableRipple={true}\n                  onClick={() => this.navigateTo(SCREEN_VAULT_SUPER)}\n                >\n                  <span className=\"contracts-menu\">\n                    <Translate id=\"max.superroi\" />\n                  </span>\n                </IconButton>\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GameAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: '#0000a5',\n  },\n  error: {\n    backgroundColor: '#cc0040',\n  },\n  info: {\n    backgroundColor: '#2993c4',\n  },\n  warning: {\n    backgroundColor: '#c04a42',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst GameSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(GameSnackbar));\n","export const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy';\nexport const FOUNDATION_CODE = 6666;\n\nexport const injectTronWeb = async defaultTronWeb => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nexport const initContract = async (\n  tronWebState,\n  defaultTronWeb,\n  contractAddress\n) => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(contractAddress);\n    } else {\n      contract = await defaultTronWeb.contract().at(contractAddress);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport const trxToSun = trx => {\n  return trx * 1e6;\n};\n\nexport const sunToTrx = sun => {\n  if (isNaN(sun)) {\n    return '';\n  }\n  return sun / 1e6;\n};\n\nexport const weiToToken = wei => {\n  if (isNaN(wei)) {\n    return '';\n  }\n  return wei / 1e18;\n};\n\nexport const tokenToWei = token => {\n  return token * 1e18;\n};\n\nexport const isValidCode = code => {\n  const n = Math.floor(Number(code));\n  return n !== Infinity && String(n) === code && n >= FOUNDATION_CODE;\n};\nexport const isValidAddress = addrs => {\n  return true;\n};\n\nexport const getDateTimeFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(unix * 1000);\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\nexport const getDateTimeLongFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  if (unix > 0) {\n    let date = new Date(unix * 1000);\n    let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear(),\n      hour = '' + d.getHours(),\n      minute = '' + d.getMinutes();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    let p1 = [year, month, day].join('-');\n    let p2 = [hour, minute].join(':');\n\n    return [p1, p2].join(' ');\n  } else {\n    return null;\n  }\n};\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_LANDING, SCREEN_VAULT_SUPER, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_LANDING,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '418b8320d000ef408cce909c5a9368aefc8ada0225';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","import ReactGA from 'react-ga';\n// import { isProductionEnvironment } from './environment';\nconst isProductionEnvironment = false;\n\nexport default {\n  initialize: () => {\n    isProductionEnvironment && ReactGA.initialize('UA-3373847473-1');\n  },\n  pageview: (rawPath, trackerNames, title) => {\n    isProductionEnvironment && ReactGA.pageview(rawPath, trackerNames, title);\n  },\n  event: (\n    { category, action, label, value, nonInteraction, transport, ...args } = {},\n    trackerNames\n  ) => {\n    isProductionEnvironment &&\n      ReactGA.event(\n        { category, action, label, value, nonInteraction, transport, ...args },\n        trackerNames\n      );\n  },\n};\n","import Lockr from 'lockr';\nimport qs from 'qs';\n\nimport { isValidAddress } from './tronCommon';\nimport { SCREEN_LANDING } from '../actions/app';\n\nconst REFERRAL_ADDRESS_KEY = 'TRONDEX_REFERRAL'; // there is a typo, but can't change now\n\nexport const parseReferralAddress = () => {\n  const storedReferralAddress = Lockr.get(REFERRAL_ADDRESS_KEY);\n  const parsedQueryString = qs.parse(window.location.search.substr(1));\n  let referralAddress = parsedQueryString['ref'];\n  if (referralAddress && isValidAddress(referralAddress)) {\n    console.log(referralAddress);\n    // store the new referralAddress\n    Lockr.set(REFERRAL_ADDRESS_KEY, referralAddress);\n  } else if (!!storedReferralAddress) {\n    referralAddress = storedReferralAddress;\n  } else {\n    // empty, just return address(0)\n    referralAddress = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n  }\n  return referralAddress;\n};\n\nexport const parseGameRoute = () => {\n  return SCREEN_LANDING;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport { SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING, setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainSuper';\n\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-30T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    \n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitlelightning\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1lightning\" />\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/platinum.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.lightningroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  onClick={() =>\n                                    this.navigateTo(SCREEN_VAULT_LIGHTNING)\n                                  }\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                \n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/diamond.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.regularroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  onClick={() =>\n                                    this.navigateTo(SCREEN_VAULT)\n                                  }\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/gold.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.superroi\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  onClick={() =>\n                                    this.navigateTo(SCREEN_VAULT_SUPER)\n                                  }\n                                >\n                                  <Translate id=\"max.enter\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(Landing)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS =  '41dda355f8246a8b5fb6c7c7515b93b16d62ed75c9';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMain';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-05T12:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    // window.location.reload();\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n               <Grid item xs={12}>\n                  <div className=\"announcement\">\n                    <p className=\"announcement-text\">\n                      <Translate id=\"max.announcement\" />\n                    </p>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={TRADE_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.tradetdx\" />\n                        </Button>\n                        <Button\n                          className=\"contract-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_airdrop\"\n                        >\n                          <Translate id=\"max.claimairdrop\" />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/diamond.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <div id=\"section_airdrop\" />\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={6}>\n                            <div className=\"space\" />\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/gold.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.availableAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"green balance-number\">\n                                {availableAirdrop || 0} TDX\n                              </div>\n                            </div>\n\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/platinum.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawnAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"balance-number\">\n                                {withdrawnAirdrop || 0} TDX\n                              </div>\n                            </div>\n                            \n                            <div className=\"s-size\">\n                              <Translate id=\"max.tdxMessage1\" /> \n                               {' '}{airdropRate}{' '}\n                              <Translate id=\"max.tdxMessage2\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <Button\n                              id=\"sell-button\"\n                              variant=\"contained\"\n                              className=\"invest-button\"\n                              disableRipple={true}\n                              disabled={this.isAirdropDisabled()}\n                              onClick={this.getAirdrop}\n                            >\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.getairdrop\" />\n                              </span>\n                            </Button>\n                            <div className=\"s-size grey\">\n                              <Translate id=\"max.feewarningairdrop\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivs)));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainSuper';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TNgt1fjg8hPryEiawHg4sz4iFPGQWydRB2/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-28T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        {/* <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '} */}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivsSuper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitlesuper\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1super\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2super\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3super\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/gold.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivsSuper)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '4122d80bb74711e712f3c9d504ac56b687af28331f';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMainLightning';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TD9Snho6A9X3At5tM8g311ozz3VEocTA1m/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-30T11:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{days}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.days\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivsLightning extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitlelightning\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1lightning\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2lightning\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3lightning\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/platinum.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivsLightning)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { SNACKBAR_ERROR } from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  weiToToken,\n} from './tronCommon';\nimport { toTruncateDown } from './math';\n\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// MAINNET\nconst CONTRACT_ADDRESS = '413f100fbdd26bff25982c35cdadc2f2e6837516cd';\n\n// TESTNET\n// const CONTRACT_ADDRESS = '413084e0c71893d69c2ec1e3fb7701a479da2c9c05';\n\nlet contract;\nlet tronWebState;\nlet tronWeb;\n\nexport default {\n  async initTronWeb(address) {\n    tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n    tronWeb.defaultAddress = {\n      hex: tronWeb.address.toHex(address),\n      base58: FOUNDATION_ADDRESS,\n    };\n\n    tronWebState = await injectTronWeb(tronWeb);\n    contract = await initContract(\n      TRON_WEB_STATE_LOCKED,\n      tronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n    return tronWebState;\n  },\n\n  async getPlayerData(address) {\n    if (!this.isValidAddress(address)) {\n      return null;\n    }\n\n    const myTokens = await contract.myTokens().call();\n    const myDividends = await contract.myDividends().call();\n    const myRoundStats = await contract\n      .getPlayerInfoCurrentRound(address)\n      .call();\n    const myReferrals = await contract.myReferrals().call();\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n      myReferrals: myReferrals\n        ? sunToTrx(new BigNumber(myReferrals).toNumber())\n        : 0,\n      myRoundBuy: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[0]).toNumber())\n        : 0,\n      myRoundSell: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[1]).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  isValidAddress(address) {\n    return address && tronWeb.isAddress(address);\n  },\n};\n","export const toTruncateDown = (value, n) => {\n  if (value < Math.pow(0.1, n)) {\n    return 0;\n  }\n  const v = value.toString().split('.');\n  if (n <= 0) {\n    return v[0];\n  }\n\n  let f = v[1] || '';\n  if (f.length > n) {\n    const result = `${v[0]}.${f.substr(0, n)}`;\n    return result;\n  }\n  while (f.length < n) {\n    f += '0';\n  }\n  const result = `${v[0]}.${f}`;\n  return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport TronAccountDetails from '../../utils/tronAccountDetails';\n\nimport Tracker from '../../utils/tracker';\nimport { SNACKBAR_ERROR } from '../Common/GameSnackbar';\n\nconst initialState = {\n  myTokens: null,\n  myDividends: null,\n  myRoundBuy: null,\n  myRoundSell: null,\n  myReferrals: null,\n  accountAddress: '',\n};\n\nclass AccountDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    Tracker.pageview('/accountDetails');\n  }\n\n  search = async () => {\n    const { showSnackbar } = this.props;\n    const { accountAddress } = this.state;\n    if (!accountAddress) {\n      showSnackbar('Address can not be empty!', SNACKBAR_ERROR);\n      return;\n    }\n    const tronWebState = await TronAccountDetails.initTronWeb(accountAddress);\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData(accountAddress);\n  };\n\n  loadData = async accountAddress => {\n    await this.getPlayerData(accountAddress);\n  };\n\n  getPlayerData = async address => {\n    const playerData = await TronAccountDetails.getPlayerData(address);\n    if (!playerData) {\n      return;\n    }\n    const myTokens = playerData.myTokens;\n    const myReferrals = playerData.myReferrals;\n    const myDividends = playerData.myDividends;\n    const myRoundBuy = playerData.myRoundBuy;\n    const myRoundSell = playerData.myRoundSell;\n    this.setState({\n      myTokens,\n      myDividends,\n      myReferrals,\n      myRoundBuy,\n      myRoundSell,\n    });\n  };\n\n  handleChange = async event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      myTokens,\n      myDividends,\n      myRoundBuy,\n      myRoundSell,\n      myReferrals,\n      accountAddress,\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <Card color=\"primary\" className=\"card\">\n            <Grid\n              container\n              spacing={24}\n              className=\"component-card account-card\"\n            >\n              <Grid item xs={12} md={6}>\n                <div className=\"buy-placeholder\">\n                  <Grid item xs={12}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"l-size\">\n                          <Translate id=\"account.searchAddress\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"input-box\">\n                        <TextField\n                          label=\"\"\n                          name=\"accountAddress\"\n                          className=\"buy-token\"\n                          autoComplete=\"off\"\n                          placeholder=\"address e.g. T*****\"\n                          value={accountAddress}\n                          onChange={this.handleChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <Button\n                            id=\"buy-button\"\n                            className=\"buy-button\"\n                            variant=\"contained\"\n                            onClick={this.search}\n                          >\n                            <Translate id=\"account.search\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.token\" /> {myTokens || 0}{' '}\n                        <span className=\"blue\">\n                          <Translate id=\"general.token\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.myReferrals\" />{' '}\n                        {myReferrals || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.claimableTrx\" />{' '}\n                        {myDividends || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundBuyTrx\" /> {myRoundBuy || 0}{' '}\n                        <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundSellTrx\" />{' '}\n                        {myRoundSell || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AccountDetails));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCREEN_LANDING, SCREEN_VAULT, SCREEN_VAULT_SUPER,SCREEN_VAULT_LIGHTNING, SCREEN_ACCOUNT_DETAILS } from '../../actions/app';\n\nimport Landing from '../TronMax/Landing';\nimport DailyDivs from '../TronMax/DailyDivs';\nimport DailyDivsSuper from '../TronMax/DailyDivsSuper';\nimport DailyDivsLightning from '../TronMax/DailyDivsLightning';\nimport AccountDetails from '../TronMax/AccountDetails';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n  \tcase SCREEN_LANDING:\n      return <Landing />;\n    case SCREEN_VAULT_SUPER:\n      return <DailyDivsSuper />;\n    case SCREEN_VAULT:\n      return <DailyDivs />;\n    case SCREEN_VAULT_LIGHTNING:\n      return <DailyDivsLightning />;\n    case SCREEN_ACCOUNT_DETAILS:\n      return <AccountDetails />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport customTheme from './customTheme';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"s-size aqua copy-right\">\n            {' '}\n            &copy; 2020 TronDEX - ROI Game on Tron\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(null)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize } from 'react-localize-redux';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen } from '../actions/app';\nimport customTheme from './Common/customTheme';\nimport AppBar from './Common/GameAppBar';\nimport Snackbar from './Common/GameSnackbar';\nimport RoutingScreen from './Common/RoutingScreen';\nimport Footer from './Common/Footer';\nimport './App.css';\nimport Tracker from '../utils/tracker';\nimport { parseGameRoute } from '../utils/parseQueryString';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initTracker();\n    this.initScreen();\n  }\n\n  initScreen = () => {\n    const { setScreen } = this.props;\n    const screen = parseGameRoute();\n    setScreen(screen);\n  };\n\n  initTracker = () => {\n    Tracker.initialize();\n    Tracker.pageview('/app');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"body\">\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}