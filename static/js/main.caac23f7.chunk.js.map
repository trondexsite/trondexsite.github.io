{"version":3,"sources":["actions/app.js","components/Common/customTheme.js","components/Common/Transition.js","components/Common/GameAppBar.js","actions/constants.js","actions/snackbar.js","components/Common/GameSnackbar.js","utils/tronCommon.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","utils/tronMain.js","store/index.js","utils/tracker.js","utils/parseQueryString.js","components/TronMax/DailyDivs.js","utils/tronAccountDetails.js","utils/math.js","components/TronMax/AccountDetails.js","components/Common/RoutingScreen.js","components/Common/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["SET_SCREEN","SCREEN_VAULT","RELOAD_ACCOUNT","setScreen","screen","type","payload","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","third","action","important","warning","slider","trackSize","handleSize","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","TT_URL","TG_URL","GameAppBar","_this","classCallCheck","this","_super","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getFlagUrl","concat","getLogoImage","navigateTo","home","handleDrawerToggle","state","openWechat","wechatOpen","closeWechat","languages","name","anchorEl","addTranslation","siteTranslations","activeLanguageCode","get","Dialog_default","open","onClose","TransitionComponent","AppBar_default","position","className","Toolbar_default","Tooltip_default","title","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","variant","react_localize_redux_es","id","_this2","_this$state","disableRipple","src","alt","aria-owns","undefined","href","map","lang","key","rel","target","_this3","Menu_default","Drawer_default","container","anchor","List_default","Divider_default","ListItem_default","button","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","SNACKBAR_WARNING","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","core_IconButton_default","close","hideSnackbar","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","indexOf","TRON_WEB_STATE_NOT_MAINNET","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","defaultTronWeb","wrap","_context","prev","next","abrupt","Promise","resolve","tronWebState","tries","timer","setInterval","window","tronWeb","clearInterval","ready","stop","_x","apply","arguments","initContract","_ref2","_callee2","contractAddress","contract","_context2","at","sent","t0","console","_x2","_x3","_x4","trxToSun","trx","sunToTrx","sun","isNaN","weiToToken","wei","getDateTimeLongFromUnix","unix","date","Date","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","initialState","currentAddress","airdropContract","reducers","app","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","tronMain","initTronWeb","_initTronWeb","store","dispatch","on","needsToNotify","reloadAccountNonce","uuid","getCurrentAddress","currentAddressBalance","_currentAddressBalance","_callee3","balance","_context3","getBalance","_getBalance","_callee4","_context4","getContractBalance","BigNumber","toNumber","getPlayerCount","_getPlayerCount","_callee5","totalusers","playerCount","_context5","totalUsers","getTotalReferrals","_getTotalReferrals","_callee6","totalReferrals","_context6","getTotalInvestments","_getTotalInvestments","_callee7","totalInvestments","_context7","totalInvested","getTotalWithdraws","_getTotalWithdraws","_callee8","totalWithdraws","_context8","totalWithdrawn","getTotalTxs","_getTotalTxs","_callee9","totalTxs","_context9","getUserAvailable","_getUserAvailable","_callee10","userAvailable","_context10","getContractBalanceRate","_getContractBalanceRate","_callee11","contractBalanceRate","_context11","getUserPercentRate","_getUserPercentRate","_callee12","userPercentRate","_context12","getUserTotalDeposits","_getUserTotalDeposits","_callee13","userTotalDeposits","_context13","getUserTotalWithdrawn","_getUserTotalWithdrawn","_callee14","userTotalWithdrawn","_context14","getUserReferralBonus","_getUserReferralBonus","_callee15","referralBonus","_context15","getUserReferralCountByLevel","_getUserReferralCountByLevel","_callee16","level","referralCount","_context16","getUserCheckpoint","_getUserCheckpoint","_callee17","userCheckPoint","checkpoint","_context17","currentDivsAddressBalance","_currentDivsAddressBalance","_callee18","_context18","invest","_invest","_callee19","sendAmount","referrer","payAmount","data","_context19","send","feeLimit","callValue","shouldPollResponse","withdrawDivs","_withdrawDivs","_callee20","_context20","withdraw","getUserWithdrawnAirdrop","_getUserWithdrawnAirdrop","_callee21","withdrawnAirdrop","_context21","getUserWithdrawn","getUserAvailableWithdrawAirdrop","_getUserAvailableWithdrawAirdrop","_callee22","availableAirdrop","_context22","getUserAvailableWithdraw","getAirdropRate","_getAirdropRate","_callee23","airdropRate","_context23","getAirdrop","_getAirdrop","_callee24","_context24","fromHex","trim","e","tracker","initialize","pageview","rawPath","trackerNames","event","category","label","value","nonInteraction","transport","parseReferralAddress","storedReferralAddress","referralAddress","qs","parse","location","search","substr","log","parseGameRoute","loadDataInterval","gameStartTime","moment","utc","renderer","days","hours","minutes","seconds","completed","Grid_default","item","xs","depositAmounts","isLoading","accountValidForReferral","accountBalance","contractBalance","baseRate","playerAddress","availableReferrerEarnings","level1RefCount","level2RefCount","level3RefCount","userCheckpoint","MINIMUM_DEPOSIT_GAS_FEE","MINIMUM_WITHDRAW_GAS_FEE","DailyDivs","loadData","loadPlayerData","loadDivsData","getPlayerData","isDepositDisabled","withdrawableDivs","investmentDivs","gameStarted","isBefore","isWithdrawDisabled","_this$state2","isAirdropDisabled","_this$state3","formatAmount","amount","formattedAmount","replace","getPlanInfo","planId","planData","copyLink","myReferralLink","Tracker","handleDepositAmountChange","_ref6","deposit","_ref7","_this$state4","_this$state5","prevProps","index_es","toDate","_this$state6","processWithdrawText","userPercentRateDisplay","baseRateDisplay","userHoldOutRateDisplay","contractBalanceRateDisplay","styles","customTheme","Button_default","renderCountdownIfNeeded","md","toLocaleString","TextField_default","autoComplete","onChange","InputProps","endAdornment","margin","disabled","lib","text","onCopy","FileCopy_default","React","&:hover","toTruncateDown","n","Math","pow","v","toString","split","f","tronAccountDetails","_getPlayerData","myTokens","myDividends","myRoundStats","myReferrals","isValidAddress","getPlayerInfoCurrentRound","myRoundBuy","myRoundSell","balanceOf","_balanceOf","isAddress","accountAddress","AccountDetails","TronAccountDetails","_ref3","playerData","handleChange","_ref4","defineProperty","Card_default","placeholder","TronMax_DailyDivs","TronMax_AccountDetails","Footer","App","initScreen","initTracker","options","renderToStaticMarkup","MuiThemeProvider_default","Common_GameAppBar","Common_RoutingScreen","Common_Footer","Common_GameSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"mtBAEMA,EAAa,aAEbC,EAAe,eAEfC,EAAiB,iBAIVC,EAAY,SAAAC,GAAM,MAAK,CAClCC,KAAML,EACNM,QAAS,CACPF,oBCXWG,2BAAe,CAC5BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBE,MAAO,CACLL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBG,OAAQ,CACNN,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBI,UAAW,CACTP,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBK,QAAS,CACPR,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBM,OAAQ,CAAEC,UAAW,GAAIC,WAAY,gNCtC1BC,EADI,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAOC,UAAU,MAASP,yhBCoBtD,IAAMQ,GAAS,iCACTC,GAAS,uBAETC,4CACJ,SAAAA,EAAYV,GAAO,IAAAW,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAH,IACjBC,EAAAG,EAAAC,KAAAF,KAAMb,IAqBRgB,kBAAoB,SAAAC,GAClBN,EAAKX,MAAMgB,kBAAkBC,GAC7BC,KAAMC,IAAI,WAAYF,GACtBN,EAAKS,SAAS,CAAEC,YAAY,KAzBXV,EA4BnBW,WAAa,SAAAL,GACX,qBAAAM,OAAsBN,EAAtB,SA7BiBN,EAgCnBa,aAAe,WACb,oCAjCiBb,EAoCnBc,WAAa,SAAA9C,GAAU,IACbD,EAAciC,EAAKX,MAAnBtB,UACRiC,EAAKS,SAAS,CAAEC,YAAY,IAC5B3C,EAAUC,IAvCOgC,EA0CnBe,KAAO,WACLf,EAAKc,WAAWjD,IA3CCmC,EA8CnBgB,mBAAqB,WACnBhB,EAAKS,SAAS,SAAAQ,GAAK,MAAK,CAAEP,YAAaO,EAAMP,eA/C5BV,EA+EnBkB,WAAa,WACXlB,EAAKS,SAAS,CAAEU,YAAY,KAhFXnB,EAmFnBoB,YAAc,WACZpB,EAAKS,SAAS,CAAEU,YAAY,KApFX,OAOjBnB,EAAKiB,MAAQ,CACXI,UALgB,CAChB,CAAEC,KAAM,UAAWhB,KAAM,MACzB,CAAEgB,KAAM,eAAMhB,KAAM,OAIpBI,YAAY,EACZa,SAAU,KACVJ,YAAY,GAGdnB,EAAKX,MAAMmC,eAAeC,IAdTzB,gLAkBX0B,EAAqBnB,KAAMoB,IAAI,aAAe,KACpDzB,KAAKb,MAAMgB,kBAAkBqB,4IA+BhB,IACLP,EAAejB,KAAKe,MAApBE,WAER,OACE7B,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CACEsC,KAAMV,EACNW,QAAS5B,KAAKkB,YACdW,oBAAqB3C,GAErBE,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAQ0C,SAAS,SAASC,UAAU,iBAClC5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAS8C,MAAM,SACb/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,MAAM,UACNC,QAAStC,KAAKkB,YACdqB,aAAW,SAEXnD,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,QAGJD,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAYqD,QAAQ,KAAKL,MAAM,WAC7BjD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,+DAgBV,IAAAC,EAAA7C,KAAA8C,EACkB9C,KAAKe,MAA7BI,EADM2B,EACN3B,UAAWE,EADLyB,EACKzB,SACnB,OACEjC,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,4BACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,kBACb5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,MAAM,UACNE,aAAW,OACXQ,eAAe,EACfT,QAAStC,KAAKa,MAEdzB,EAAAC,EAAAC,cAAA,OACE0D,IAAKhD,KAAKW,eACVqB,UAAU,cACViB,IAAI,YAKV7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,uBACVK,MAAM,UACNE,aAAYnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,eAC1BG,eAAe,EACfG,YAAW7B,EAAW,sBAAmB8B,EACzCC,KAAK,mBAELhE,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,uBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,iBAIlBxD,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,uBACVK,MAAM,UACNE,aAAYnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,cAC1BG,eAAe,EACfG,YAAW7B,EAAW,sBAAmB8B,EACzCC,KAAK,kBAELhE,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,kBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,gBAIlBxD,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,uBACVK,MAAM,UACNE,aAAYnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBAC1BG,eAAe,EACfG,YAAW7B,EAAW,sBAAmB8B,EACzCC,KAAK,sBAELhE,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,kBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,oBAIlBxD,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,uBACVK,MAAM,UACNE,aAAYnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,gBAC1BG,eAAe,EACfG,YAAW7B,EAAW,sBAAmB8B,EACzCC,KAAK,gBAELhE,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,kBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,cAIjBzB,EAAUkC,IAAI,SAAAC,GAAI,OACjBlE,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEuD,GAAIU,EAAKlD,KACTmD,IAAKD,EAAKlD,KACViC,MAAM,UACNU,eAAe,EACfT,QAAS,kBAAMO,EAAK1C,kBAAkBmD,EAAKlD,QAE3ChB,EAAAC,EAAAC,cAAA,OACE0D,IAAKH,EAAKpC,WAAW6C,EAAKlD,MAC1B4B,UAAU,aACViB,IAAI,gBAKV7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,gBACVoB,KAAMzD,GACNoD,eAAe,EACfS,IAAI,sBACJC,OAAO,UAEPrE,EAAAC,EAAAC,cAAA,OACE0D,IAAI,4BACJhB,UAAU,aACViB,IAAI,cAIV7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,gBACVoB,KAAMxD,GACNmD,eAAe,EACfS,IAAI,sBACJC,OAAO,UAEPrE,EAAAC,EAAAC,cAAA,OACE0D,IAAI,6BACJhB,UAAU,aACViB,IAAI,wDASH,IAAAS,EAAA1D,KACLmB,EAAcnB,KAAKe,MAAnBI,UACR,OACE/B,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,2BACb5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,MAAM,UACNE,aAAW,cACXQ,eAAe,EACfT,QAAStC,KAAKc,oBAEd1B,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,OAEFD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,kBACb5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,MAAM,UACNU,eAAe,EACfR,aAAYnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,gBAC1BN,QAAStC,KAAKa,MAEdzB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAIpBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,yBACf5C,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACEwE,UAAW7D,KAAKb,MAAM0E,UACtBnB,QAAQ,YACRoB,OAAO,OACPnC,KAAM3B,KAAKe,MAAMP,WACjBoB,QAAS5B,KAAKc,mBACdkB,UAAU,UAEV5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACED,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,MACAD,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAU6E,QAAM,EAACX,IAAI,SAASvB,UAAU,eACrCb,EAAUkC,IAAI,SAAAC,GAAI,OACjBlE,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CACE6E,QAAM,EACNX,IAAKD,EAAKlD,KACV4B,UAAU,cACVe,eAAe,EACfT,QAAS,kBAAMoB,EAAKvD,kBAAkBmD,EAAKlD,QAE3ChB,EAAAC,EAAAC,cAAA,OACE0D,IAAKU,EAAKjD,WAAW6C,EAAKlD,MAC1B4B,UAAU,aACViB,IAAI,gBAIV7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE0D,eAAe,EACff,UAAU,gBACVoB,KAAMzD,GACN6D,IAAI,sBACJC,OAAO,UAEPrE,EAAAC,EAAAC,cAAA,OACE0D,IAAI,4BACJhB,UAAU,aACViB,IAAI,cAIV7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACE2C,UAAU,gBACVoB,KAAMxD,GACN4D,IAAI,sBACJC,OAAO,UAEPrE,EAAAC,EAAAC,cAAA,OACE0D,IAAI,6BACJhB,UAAU,aACViB,IAAI,gBAKZ7D,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,2CASV,OACED,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAQ0C,SAAS,UACf3C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACGW,KAAKmE,gBACLnE,KAAKoE,wBAlTSC,aAyTnBC,GAAqB,CACzBzG,aAGa0G,eACb,KACAD,GAFaC,CAGbC,YAAa3E,wMC3VF4E,GAAc,cCEdC,GAAgB,gBAChBC,GAAgB,gBAEhBC,GAAe,SAACC,EAASnC,EAASoC,GAAnB,MAAiC,CAC3D/G,KAAM2G,GACN1G,QAAS,CACP+G,cAAc,EACdC,gBAAiBH,EACjBI,gBAAiBvC,EACjBwC,iBAAkBJ,KCQTK,GAAmB,UACnBC,GAAiB,QACjBC,GAAgB,OAEvBC,GAAc,CAClBC,QAASC,KACT1G,QAAS2G,KACTC,MAAOC,KACPC,KAAMC,MA0DR,IAAMC,GAA2BC,KAvDlB,SAAAC,GAAK,MAAK,CACvBT,QAAS,CACPU,gBAAiB,WAEnBP,MAAO,CACLO,gBAAiB,WAEnBL,KAAM,CACJK,gBAAiB,WAEnBnH,QAAS,CACPmH,gBAAiB,WAEnBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaN,EAAMO,QAAQC,MAE7B3B,QAAS,CACP4B,QAAS,OACTC,WAAY,YAiCiBX,CA7BjC,SAA2B5G,GAAO,IACxBwH,EAA4DxH,EAA5DwH,QAAS3E,EAAmD7C,EAAnD6C,UAAW6C,EAAwC1F,EAAxC0F,QAASjD,EAA+BzC,EAA/ByC,QAASc,EAAsBvD,EAAtBuD,QAAYkE,EAD1BpH,OAAAqH,GAAA,EAAArH,CACoCL,EADpC,uDAE1B2H,EAAOxB,GAAY5C,GAEzB,OACEtD,EAAAC,EAAAC,cAACyH,GAAA1H,EAADG,OAAAC,OAAA,CACEuC,UAAWgF,KAAWL,EAAQjE,GAAUV,GACxC6C,QACEzF,EAAAC,EAAAC,cAAA,QAAMsD,GAAG,kBAAkBZ,UAAW2E,EAAQ9B,SAC5CzF,EAAAC,EAAAC,cAACwH,EAAD,CAAM9E,UAAWgF,KAAWL,EAAQT,KAAMS,EAAQP,eACjDvB,GAGLjG,OAAQ,CACNQ,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACEkE,IAAI,QACJhB,aAAW,QACXF,MAAM,UACNL,UAAW2E,EAAQO,MACnB5E,QAASV,GAETxC,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAW2C,UAAW2E,EAAQT,UAG9BU,MAkDJtC,GAAqB,CACzB6C,aDpH0B,iBAAO,CACjCpJ,KAAM4G,GACN3G,QAAS,CACP+G,cAAc,EACdC,gBAAiB,OCmHNT,eAXS,SAAAxD,GAAK,MAAK,CAChCY,KAAMZ,EAAMqG,SAASrC,aACrBF,QAAS9D,EAAMqG,SAASpC,gBACxBC,gBAAiBlE,EAAMqG,SAASnC,iBAAmBI,GACnDH,iBAAkBnE,EAAMqG,SAASlC,kBAAoB,MASrDZ,GAFaC,CAGbC,YAlDmB,SAAA6C,GAAA,IACnB1F,EADmB0F,EACnB1F,KACAkD,EAFmBwC,EAEnBxC,QACAI,EAHmBoC,EAGnBpC,gBACAC,EAJmBmC,EAInBnC,iBACAiC,EALmBE,EAKnBF,aALmB,OAOnB/H,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,CACEkI,aAAc,CACZC,SAAU,SACVC,WAAY,UAEd9F,KAAMA,EACNuD,iBAAkBA,EAClBtD,QAASuF,GAET/H,EAAAC,EAAAC,cAACwG,GAAD,CACEpD,QAASuC,EACTJ,QACEA,EACkC,IAAhCA,EAAQ6C,QAAQ,YACdtI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAIiC,KAGjBA,EAGF,GAGJjD,QAASuF,2ICnHFQ,GAA6B,6BAK7BC,GAAa,eAAAP,EAAA7H,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAG,SAAAC,EAAMC,GAAN,OAAAH,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACpB,IAAIC,QAAQ,SAAAC,GACjB,IAAIC,EAVoC,+BAapCC,EAAQ,EACNC,EAAQC,YAAY,WACxB,OAAIF,GAAS,IACNG,OAAOC,UACVD,OAAOC,QAAUb,GAEnBc,cAAcJ,GACPH,EAAQC,IAGXI,OAAOC,SAAWD,OAAOC,UAAYb,IACzCQ,EAvB6B,wBAyBzBI,OAAOC,QAAQE,QACjBP,EAzB6B,0BA4B7BM,cAAcJ,GACPH,EAAQC,SAInBC,KACC,QA5BsB,wBAAAP,EAAAc,SAAAjB,MAAH,gBAAAkB,GAAA,OAAA7B,EAAA8B,MAAAnJ,KAAAoJ,YAAA,GAgCbC,GAAY,eAAAC,EAAA9J,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAG,SAAAwB,EAC1Bd,EACAR,EACAuB,GAH0B,IAAAC,EAAA,OAAA3B,EAAAzI,EAAA6I,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,UAAAqB,EAAAtB,KAAA,EAvCS,0BA8C7BK,EAPoB,CAAAiB,EAAArB,KAAA,eAAAqB,EAAArB,KAAA,EAQLQ,OAAOC,QAAQW,WAAWE,GAAGH,GARxB,OAQtBC,EARsBC,EAAAE,KAAAF,EAAArB,KAAA,uBAAAqB,EAAArB,KAAA,EAULJ,EAAewB,WAAWE,GAAGH,GAVxB,OAUtBC,EAVsBC,EAAAE,KAAA,QAAAF,EAAArB,KAAA,wBAAAqB,EAAAtB,KAAA,GAAAsB,EAAAG,GAAAH,EAAA,SAaxBI,QAAQpE,MAARgE,EAAAG,IAbwBH,EAAApB,OAAA,SAcjB,MAdiB,eAAAoB,EAAApB,OAAA,SAiBnBmB,GAjBmB,yBAAAC,EAAAT,SAAAM,EAAA,kBAAH,gBAAAQ,EAAAC,EAAAC,GAAA,OAAAX,EAAAH,MAAAnJ,KAAAoJ,YAAA,GAoBZc,GAAW,SAAAC,GACtB,OAAa,IAANA,GAGIC,GAAW,SAAAC,GACtB,OAAIC,MAAMD,GACD,GAEFA,EAAM,KAGFE,GAAa,SAAAC,GACxB,OAAIF,MAAME,GACD,GAEFA,EAAM,MA8BFC,GAA0B,SAAAC,GAGrC,GAAIA,EAAO,EAAG,CACZ,IAAIC,EAAO,IAAIC,KAAY,IAAPF,GAChBG,EAAI,IAAID,KAAKD,GACfG,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cACTC,EAAO,GAAKP,EAAEQ,WACdC,EAAS,GAAKT,EAAEU,aAQlB,OANIT,EAAMU,OAAS,IAAGV,EAAQ,IAAMA,GAChCE,EAAIQ,OAAS,IAAGR,EAAM,IAAMA,GAKzB,CAHE,CAACE,EAAMJ,EAAOE,GAAKS,KAAK,KACxB,CAACL,EAAME,GAAQG,KAAK,MAEbA,KAAK,KAErB,OAAO,gEC1HLC,GAAe,CACnB5N,OAAQH,GCDV,IAAM+N,GAAe,CACnB3G,cAAc,EACdC,gBAAiB,ICFJ,IC6CX2G,GACAlC,GACAmC,GACAnD,GDhDWoD,GAAA,CACbC,IFGK,WAAkD,IAA9B/K,EAA8BqI,UAAAoC,OAAA,QAAArI,IAAAiG,UAAA,GAAAA,UAAA,GAAtBsC,GAAc9M,EAAQwK,UAAAoC,OAAA,EAAApC,UAAA,QAAAjG,EACvD,OAAQvE,EAAOb,MACb,KAAKL,EACL,KAAKE,EACH,OAAO4B,OAAAuM,GAAA,EAAAvM,CAAA,GACFuB,EACAnC,EAAOZ,SAGd,KAAKyG,GACH,OAAOiH,GACT,QACE,OAAO3K,IEdXqG,SDGK,WAAuD,IAA9BrG,EAA8BqI,UAAAoC,OAAA,QAAArI,IAAAiG,UAAA,GAAAA,UAAA,GAAtBsC,GAAc9M,EAAQwK,UAAAoC,OAAA,EAAApC,UAAA,QAAAjG,EAC5D,OAAQvE,EAAOb,MACb,KAAK2G,GACL,KAAKC,GACH,OAAOnF,OAAAuM,GAAA,EAAAvM,CAAA,GACFuB,EACAnC,EAAOZ,SAGd,KAAKyG,GACH,OAAOiH,GACT,QACE,OAAO3K,KGVEiL,GAPDC,aACZC,aAAgB1M,OAAAuM,GAAA,EAAAvM,CAAA,GACXqM,KAELhD,OAAOsD,8BAAgCtD,OAAOsD,gCDuCnClE,GAdc,WACzB,IAAMA,EAAiB,IAAImE,KAJR,+EAcnB,OALAnE,EAAeoE,eAAiB,CAC9BC,IAAKrE,EAAesE,QAAQC,MJlCE,sCImC9BC,OJnC8B,sCIsCzBxE,EAGqByE,GAgCfC,GAAA,CACPC,YADO,eAAAC,EAAArN,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAwB,IAAA,OAAAzB,EAAAzI,EAAA6I,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAEUT,GAAcK,IAFxB,cAEXQ,GAFWiB,EAAAE,KAAAF,EAAArB,KAAA,EAGMgB,GACfZ,GACAR,GAxDmB,8CAmDV,cAGXwB,GAHWC,EAAAE,KAAAF,EAAArB,KAAA,EASagB,GACtBZ,GACAR,GA7D2B,8CAkDlB,cASX2D,GATWlC,EAAAE,KAcNH,IAAamC,KAChBnD,GAAed,GACfmF,GAAMC,SACJnI,GAAa,8BAA+BQ,MA1ClDyD,OAAOC,QAAQkE,GAAG,iBAAlB,eAAA3F,EAAA7H,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAoC,SAAAC,EAAMuE,GAAN,IAAAU,EAAA,OAAAnF,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC9BsD,KAAmBY,EAAQE,OADG,CAAAtE,EAAAE,KAAA,gBAE1B4E,IAAkBtB,GACxBA,GAAiBY,EAAQE,OAHOtE,EAAAE,KAAA,EAKXT,GAAcK,IALH,cAKhCQ,GALgCN,EAAAyB,KAAAzB,EAAAE,KAAA,EAMfgB,GACfZ,GACAR,GAlCiB,8CA0Ba,cAMhCwB,GANgCtB,EAAAyB,KAAAzB,EAAAE,KAAA,GAWRgB,GACtBZ,GACAR,GAtCyB,8CAyBK,QAWhC2D,GAXgCzD,EAAAyB,KAiB5BqD,IACFH,GAAMC,SAASnI,GAAa,yBAA0BS,KACtDyH,GAAMC,SXvDsB,CAClChP,KAAMH,EACNI,QAAS,CACPkP,mBAAoBC,UWiCc,yBAAAhF,EAAAc,SAAAjB,MAApC,gBAAAkB,GAAA,OAAA7B,EAAA8B,MAAAnJ,KAAAoJ,YAAA,IJrD0C,iCIqGpCX,GACFqE,GAAMC,SAASnI,GAAa,yBAA0BS,KJrGvB,0BIsGtBoD,IACTqE,GAAMC,SAASnI,GAAa,uBAAwBS,KA1B3CqE,EAAApB,OAAA,SA4BJG,IA5BI,yBAAAiB,EAAAT,SAAAM,MAAA,yBAAAsD,EAAA1D,MAAAnJ,KAAAoJ,YAAA,GA+BbgE,kBA/Ba,WAgCX,OAAOvE,OAAOC,QAAQuD,eAAeI,QAIjCY,sBApCO,eAAAC,EAAA9N,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAwF,IAAA,IAAAC,EAAA,OAAA1F,EAAAzI,EAAA6I,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,UJ7EsB,0BIkH7BI,GArCO,CAAAgF,EAAApF,KAAA,eAAAoF,EAAAnF,OAAA,SAsCF,GAtCE,cAAAmF,EAAApF,KAAA,EAwCWQ,OAAOC,QAAQqB,IAAIuD,aAxC9B,cAwCLF,EAxCKC,EAAA7D,KAAA6D,EAAAnF,OAAA,SAyCJkF,GAzCI,wBAAAC,EAAAxE,SAAAsE,MAAA,yBAAAD,EAAAnE,MAAAnJ,KAAAoJ,YAAA,GA4CPsE,WA5CO,eAAAC,EAAAnO,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA6F,IAAA,IAAAJ,EAAA,OAAA1F,EAAAzI,EAAA6I,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cAAAwF,EAAAxF,KAAA,EA6CWoB,GAASqE,qBAAqB5N,OA7CzC,cA6CLsN,EA7CKK,EAAAjE,KAAAiE,EAAAvF,OAAA,SA8CJ8B,GAAS,IAAI2D,KAAUP,GAASQ,aA9C5B,wBAAAH,EAAA5E,SAAA2E,MAAA,yBAAAD,EAAAxE,MAAAnJ,KAAAoJ,YAAA,GAiDP6E,eAjDO,eAAAC,EAAA1O,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAoG,IAAA,IAAAC,EAAAC,EAAA,OAAAvG,EAAAzI,EAAA6I,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EAkDcoB,GAAS8E,aAAarO,OAlDpC,cAkDLkO,EAlDKE,EAAA1E,KAoDLyE,EAAcD,EAAa,IAAIL,KAAUK,GAAYJ,WAAa,EApD7DM,EAAAhG,OAAA,SAsDJ+F,GAtDI,wBAAAC,EAAArF,SAAAkF,MAAA,yBAAAD,EAAA/E,MAAAnJ,KAAAoJ,YAAA,GAyDPoF,kBAzDO,eAAAC,EAAAjP,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA2G,IAAA,IAAAC,EAAA,OAAA7G,EAAAzI,EAAA6I,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EA0DkBoB,GAAS+E,oBAAoBtO,OA1D/C,cA0DLyO,EA1DKC,EAAAhF,KAAAgF,EAAAtG,OAAA,SA2DJqG,EACHvE,GAAS,IAAI2D,KAAUY,GAAgBX,YACvC,GA7DO,wBAAAY,EAAA3F,SAAAyF,MAAA,yBAAAD,EAAAtF,MAAAnJ,KAAAoJ,YAAA,GAgEPyF,oBAhEO,eAAAC,EAAAtP,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAgH,IAAA,IAAAC,EAAA,OAAAlH,EAAAzI,EAAA6I,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAAA4G,EAAA5G,KAAA,EAiEoBoB,GAASyF,gBAAgBhP,OAjE7C,cAiEL8O,EAjEKC,EAAArF,KAAAqF,EAAA3G,OAAA,SAkEJ0G,EACH5E,GAAS,IAAI2D,KAAUiB,GAAkBhB,YACzC,GApEO,wBAAAiB,EAAAhG,SAAA8F,MAAA,yBAAAD,EAAA3F,MAAAnJ,KAAAoJ,YAAA,GAuEP+F,kBAvEO,eAAAC,EAAA5P,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAsH,IAAA,IAAAC,EAAA,OAAAxH,EAAAzI,EAAA6I,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAAkH,EAAAlH,KAAA,EAwEkBoB,GAAS+F,iBAAiBtP,OAxE5C,cAwELoP,EAxEKC,EAAA3F,KAAA2F,EAAAjH,OAAA,SAyEJgH,EACHlF,GAAS,IAAI2D,KAAUuB,GAAgBtB,YACvC,GA3EO,wBAAAuB,EAAAtG,SAAAoG,MAAA,yBAAAD,EAAAjG,MAAAnJ,KAAAoJ,YAAA,GA8EPqG,YA9EO,eAAAC,EAAAlQ,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA4H,IAAA,IAAAC,EAAA,OAAA9H,EAAAzI,EAAA6I,KAAA,SAAA2H,GAAA,cAAAA,EAAAzH,KAAAyH,EAAAxH,MAAA,cAAAwH,EAAAxH,KAAA,EA+EYoB,GAASgG,cAAcvP,OA/EnC,cA+EL0P,EA/EKC,EAAAjG,KAAAiG,EAAAvH,OAAA,SAgFJsH,EAAW,IAAI7B,KAAU6B,GAAU5B,WAAa,GAhF5C,wBAAA6B,EAAA5G,SAAA0G,MAAA,yBAAAD,EAAAvG,MAAAnJ,KAAAoJ,YAAA,GAmFP0G,iBAnFO,eAAAC,EAAAvQ,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAiI,IAAA,IAAArE,EAAAsE,EAAA,OAAAnI,EAAAzI,EAAA6I,KAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,UAoFLsD,EAAiB3L,KAAKoN,oBApFjB,CAAA8C,EAAA7H,KAAA,eAAA6H,EAAA5H,OAAA,SAsFF,GAtFE,cAAA4H,EAAA7H,KAAA,EAwFiBoB,GAASqG,iBAAiBnE,GAAgBzL,OAxF3D,cAwFL+P,EAxFKC,EAAAtG,KAAAsG,EAAA5H,OAAA,SAyFJ2H,EAAgB7F,GAAS,IAAI2D,KAAUkC,GAAejC,YAAc,GAzFhE,wBAAAkC,EAAAjH,SAAA+G,EAAAhQ,SAAA,yBAAA+P,EAAA5G,MAAAnJ,KAAAoJ,YAAA,GA4FP+G,uBA5FO,eAAAC,EAAA5Q,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAsI,IAAA,IAAAC,EAAA,OAAAxI,EAAAzI,EAAA6I,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,cAAAkI,EAAAlI,KAAA,EA6FuBoB,GAAS0G,yBAAyBjQ,OA7FzD,cA6FLoQ,EA7FKC,EAAA3G,KAAA2G,EAAAjI,OAAA,SA8FH,IAAIyF,KAAUuC,GAAqBtC,YA9FhC,wBAAAuC,EAAAtH,SAAAoH,MAAA,yBAAAD,EAAAjH,MAAAnJ,KAAAoJ,YAAA,GAiGPoH,mBAjGO,eAAAC,EAAAjR,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA2I,IAAA,IAAA/E,EAAAgF,EAAA,OAAA7I,EAAAzI,EAAA6I,KAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,UAkGLsD,EAAiB3L,KAAKoN,oBAlGjB,CAAAwD,EAAAvI,KAAA,eAAAuI,EAAAtI,OAAA,SAoGF,GApGE,cAAAsI,EAAAvI,KAAA,EAsGmBoB,GAAS+G,mBAAmB7E,GAAgBzL,OAtG/D,cAsGLyQ,EAtGKC,EAAAhH,KAAAgH,EAAAtI,OAAA,SAuGH,IAAIyF,KAAU4C,GAAiB3C,YAvG5B,wBAAA4C,EAAA3H,SAAAyH,EAAA1Q,SAAA,yBAAAyQ,EAAAtH,MAAAnJ,KAAAoJ,YAAA,GA0GPyH,qBA1GO,eAAAC,EAAAtR,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAgJ,IAAA,IAAApF,EAAAqF,EAAA,OAAAlJ,EAAAzI,EAAA6I,KAAA,SAAA+I,GAAA,cAAAA,EAAA7I,KAAA6I,EAAA5I,MAAA,UA2GLsD,EAAiB3L,KAAKoN,oBA3GjB,CAAA6D,EAAA5I,KAAA,eAAA4I,EAAA3I,OAAA,SA6GF,GA7GE,cAAA2I,EAAA5I,KAAA,EA+GqBoB,GAASoH,qBAAqBlF,GAAgBzL,OA/GnE,cA+GL8Q,EA/GKC,EAAArH,KAAAqH,EAAA3I,OAAA,SAgHJ0I,EAAoB5G,GAAS,IAAI2D,KAAUiD,GAAmBhD,YAAc,GAhHxE,wBAAAiD,EAAAhI,SAAA8H,EAAA/Q,SAAA,yBAAA8Q,EAAA3H,MAAAnJ,KAAAoJ,YAAA,GAmHP8H,sBAnHO,eAAAC,EAAA3R,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAqJ,IAAA,IAAAzF,EAAA0F,EAAA,OAAAvJ,EAAAzI,EAAA6I,KAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,UAoHLsD,EAAiB3L,KAAKoN,oBApHjB,CAAAkE,EAAAjJ,KAAA,eAAAiJ,EAAAhJ,OAAA,SAsHF,GAtHE,cAAAgJ,EAAAjJ,KAAA,EAwHsBoB,GAASyH,sBAAsBvF,GAAgBzL,OAxHrE,cAwHLmR,EAxHKC,EAAA1H,KAAA0H,EAAAhJ,OAAA,SAyHJ+I,EAAqBjH,GAAS,IAAI2D,KAAUsD,GAAoBrD,YAAc,GAzH1E,wBAAAsD,EAAArI,SAAAmI,EAAApR,SAAA,yBAAAmR,EAAAhI,MAAAnJ,KAAAoJ,YAAA,GA4HPmI,qBA5HO,eAAAC,EAAAhS,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA0J,IAAA,IAAA9F,EAAA+F,EAAA,OAAA5J,EAAAzI,EAAA6I,KAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,UA6HLsD,EAAiB3L,KAAKoN,oBA7HjB,CAAAuE,EAAAtJ,KAAA,eAAAsJ,EAAArJ,OAAA,SA+HF,GA/HE,cAAAqJ,EAAAtJ,KAAA,EAiIiBoB,GAAS8H,qBAAqB5F,GAAgBzL,OAjI/D,cAiILwR,EAjIKC,EAAA/H,KAAA+H,EAAArJ,OAAA,SAkIJoJ,EAAgBtH,GAAS,IAAI2D,KAAU2D,GAAe1D,YAAc,GAlIhE,wBAAA2D,EAAA1I,SAAAwI,EAAAzR,SAAA,yBAAAwR,EAAArI,MAAAnJ,KAAAoJ,YAAA,GAqIPwI,4BArIO,eAAAC,EAAArS,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA+J,EAqIqBC,GArIrB,IAAApG,EAAAqG,EAAA,OAAAlK,EAAAzI,EAAA6I,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,UAsILsD,EAAiB3L,KAAKoN,oBAtIjB,CAAA6E,EAAA5J,KAAA,eAAA4J,EAAA3J,OAAA,SAwIF,GAxIE,cAAA2J,EAAA5J,KAAA,EA0IiBoB,GAASmI,4BAA4BjG,EAAgBoG,GAAO7R,OA1I7E,cA0IL8R,EA1IKC,EAAArI,KAAAqI,EAAA3J,OAAA,SA2IJ0J,EAAgB,IAAIjE,KAAUiE,GAAehE,WAAa,GA3ItD,wBAAAiE,EAAAhJ,SAAA6I,EAAA9R,SAAA,gBAAA+J,GAAA,OAAA8H,EAAA1I,MAAAnJ,KAAAoJ,YAAA,GA8IP8I,kBA9IO,eAAAC,EAAA3S,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAqK,IAAA,IAAAzG,EAAA0G,EAAAC,EAAA,OAAAxK,EAAAzI,EAAA6I,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,UA+ILsD,EAAiB3L,KAAKoN,oBA/IjB,CAAAmF,EAAAlK,KAAA,eAAAkK,EAAAjK,OAAA,SAiJF,GAjJE,cAAAiK,EAAAlK,KAAA,EAmJkBoB,GAASyI,kBAAkBvG,GAAgBzL,OAnJ7D,cAmJLmS,EAnJKE,EAAA3I,KAqJL0I,EAAa7H,GACf,IAAIsD,KAAUsE,GAAgBrE,YAtJvBuE,EAAAjK,OAAA,SAwJJgK,GAxJI,wBAAAC,EAAAtJ,SAAAmJ,EAAApS,SAAA,yBAAAmS,EAAAhJ,MAAAnJ,KAAAoJ,YAAA,GA2JPoJ,0BA3JO,eAAAC,EAAAjT,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA2K,IAAA,IAAAlF,EAAA,OAAA1F,EAAAzI,EAAA6I,KAAA,SAAAyK,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,cAAAsK,EAAAtK,KAAA,EA4JWQ,OAAOC,QAAQqB,IAAIuD,aA5J9B,cA4JLF,EA5JKmF,EAAA/I,KAAA+I,EAAArK,OAAA,SA6JJkF,GA7JI,wBAAAmF,EAAA1J,SAAAyJ,MAAA,yBAAAD,EAAAtJ,MAAAnJ,KAAAoJ,YAAA,GAgKPwJ,OAhKO,eAAAC,EAAArT,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA+K,EAgKAC,EAAYC,GAhKZ,IAAAC,EAAAC,EAAA,OAAApL,EAAAzI,EAAA6I,KAAA,SAAAiL,GAAA,cAAAA,EAAA/K,KAAA+K,EAAA9K,MAAA,UJ9E6B,iCIgPpCI,GAlKO,CAAA0K,EAAA9K,KAAA,eAmKTyE,GAAMC,SAASnI,GAAa,yBAA0BQ,KAnK7C+N,EAAA7K,OAAA,UAoKF,GApKE,UJ7EsB,0BIkPtBG,GArKA,CAAA0K,EAAA9K,KAAA,eAsKTyE,GAAMC,SAASnI,GAAa,uBAAwBQ,KAtK3C+N,EAAA7K,OAAA,UAuKF,GAvKE,cAyKL2K,EAAY/I,GAAS6I,GAzKhBI,EAAA9K,KAAA,GA2KQoB,GAASmJ,OAAOI,GAAUI,KAAK,CAChDC,SAlOW,IAmOXC,UAAWL,EACXM,oBAAoB,IA9KX,eA2KLL,EA3KKC,EAAAvJ,KAAAuJ,EAAA7K,OAAA,SAgLJ4K,GAhLI,yBAAAC,EAAAlK,SAAA6J,MAAA,gBAAA9I,EAAAC,GAAA,OAAA4I,EAAA1J,MAAAnJ,KAAAoJ,YAAA,GAmLPoK,aAnLO,eAAAC,EAAAjU,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA2L,IAAA,IAAAR,EAAA,OAAApL,EAAAzI,EAAA6I,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UJ9E6B,iCIkQpCI,GApLO,CAAAkL,EAAAtL,KAAA,eAqLTyE,GAAMC,SAASnI,GAAa,yBAA0BQ,KArL7CuO,EAAArL,OAAA,UAsLF,GAtLE,UJ7EsB,0BIoQtBG,GAvLA,CAAAkL,EAAAtL,KAAA,eAwLTyE,GAAMC,SAASnI,GAAa,uBAAwBQ,KAxL3CuO,EAAArL,OAAA,UAyLF,GAzLE,cA2LO,EA3LPqL,EAAAtL,KAAA,GA4LQoB,GAASmK,WAAWR,KAAK,CAC1CC,SAnPW,IAoPXC,UAHgB,EAIhBC,oBAAoB,IA/LX,eA4LLL,EA5LKS,EAAA/J,KAAA+J,EAAArL,OAAA,SAiMJ4K,GAjMI,yBAAAS,EAAA1K,SAAAyK,MAAA,yBAAAD,EAAAtK,MAAAnJ,KAAAoJ,YAAA,GAqMPyK,wBArMO,eAAAC,EAAAtU,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAgM,IAAA,IAAApI,EAAAqI,EAAA,OAAAlM,EAAAzI,EAAA6I,KAAA,SAAA+L,GAAA,cAAAA,EAAA7L,KAAA6L,EAAA5L,MAAA,UAsMLsD,EAAiB3L,KAAKoN,oBAtMjB,CAAA6G,EAAA5L,KAAA,eAAA4L,EAAA3L,OAAA,SAwMF,GAxME,cAAA2L,EAAA5L,KAAA,EA0MoBuD,GAAgBsI,iBAAiBvI,GAAgBzL,OA1MrE,cA0ML8T,EA1MKC,EAAArK,KAAAqK,EAAA3L,OAAA,SA2MJ0L,EAAmBzJ,GAAW,IAAIwD,KAAUiG,GAAkBhG,YAAc,GA3MxE,wBAAAiG,EAAAhL,SAAA8K,EAAA/T,SAAA,yBAAA8T,EAAA3K,MAAAnJ,KAAAoJ,YAAA,GA8MP+K,gCA9MO,eAAAC,EAAA5U,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAsM,IAAA,IAAA1I,EAAA2I,EAAA,OAAAxM,EAAAzI,EAAA6I,KAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,UA+MLsD,EAAiB3L,KAAKoN,oBA/MjB,CAAAmH,EAAAlM,KAAA,eAAAkM,EAAAjM,OAAA,SAiNF,GAjNE,cAAAiM,EAAAlM,KAAA,EAmNoBuD,GAAgB4I,yBAAyB7I,GAAgBzL,OAnN7E,cAmNLoU,EAnNKC,EAAA3K,KAAA2K,EAAAjM,OAAA,SAoNJgM,EAAmB/J,GAAW,IAAIwD,KAAUuG,GAAkBtG,YAAc,GApNxE,wBAAAuG,EAAAtL,SAAAoL,EAAArU,SAAA,yBAAAoU,EAAAjL,MAAAnJ,KAAAoJ,YAAA,GAuNPqL,eAvNO,eAAAC,EAAAlV,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAA4M,IAAA,IAAAC,EAAA,OAAA9M,EAAAzI,EAAA6I,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,cAAAwM,EAAAxM,KAAA,EAwNeuD,GAAgB6I,iBAAiBvU,OAxNhD,cAwNL0U,EAxNKC,EAAAjL,KAAAiL,EAAAvM,OAAA,SAyNJsM,EAAc,IAAI7G,KAAU6G,GAAa5G,WAAa,GAzNlD,wBAAA6G,EAAA5L,SAAA0L,MAAA,yBAAAD,EAAAvL,MAAAnJ,KAAAoJ,YAAA,GA4NP0L,WA5NO,eAAAC,EAAAvV,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAiN,IAAA,IAAA9B,EAAA,OAAApL,EAAAzI,EAAA6I,KAAA,SAAA+M,GAAA,cAAAA,EAAA7M,KAAA6M,EAAA5M,MAAA,UJ9E6B,iCI2SpCI,GA7NO,CAAAwM,EAAA5M,KAAA,eA8NTyE,GAAMC,SAASnI,GAAa,yBAA0BQ,KA9N7C6P,EAAA3M,OAAA,UA+NF,GA/NE,UJ7EsB,0BI6StBG,GAhOA,CAAAwM,EAAA5M,KAAA,eAiOTyE,GAAMC,SAASnI,GAAa,uBAAwBQ,KAjO3C6P,EAAA3M,OAAA,UAkOF,GAlOE,cAoOO,EApOP2M,EAAA5M,KAAA,GAqOQuD,GAAgBgI,WAAWR,KAAK,CACjDC,SA5RW,IA6RXC,UAHgB,EAIhBC,oBAAoB,IAxOX,eAqOLL,EArOK+B,EAAArL,KAAAqL,EAAA3M,OAAA,SA0OJ4K,GA1OI,yBAAA+B,EAAAhM,SAAA+L,MAAA,yBAAAD,EAAA5L,MAAAnJ,KAAAoJ,YAAA,GA8Ob8L,QA9Oa,SA8OL5I,GACN,GAAY,+CAARA,EACF,MAAO,GAEP,IAEE,OADerE,GAAesE,QAAQ2I,QAAQ5I,EAAI6I,QAElD,MAAOC,GAGP,OAFAtL,QAAQpE,MAAM4G,GACdxC,QAAQpE,MAAM0P,GACP9I,KElUA+I,UAAA,CACbC,WAAY,aAGZC,SAAU,SAACC,EAASC,EAActT,KAGlCuT,MAAO,WAGF,IAAArO,EAAA+B,UAAAoC,OAAA,QAAArI,IAAAiG,UAAA,GAAAA,UAAA,GAFsE,GAEtEA,UAAAoC,OAAA,GAAApC,UAAA,GAAA/B,EAFDsO,SAECtO,EAFSzI,OAETyI,EAFiBuO,MAEjBvO,EAFwBwO,MAExBxO,EAF+ByO,eAE/BzO,EAF+C0O,UAE/CvW,OAAAqH,GAAA,EAAArH,CAAA6H,EAAA,4FCNM2O,GAAuB,WAClC,IAAMC,EAAwB5V,KAAMoB,IAHT,oBAKvByU,EADsBC,KAAGC,MAAMvN,OAAOwN,SAASC,OAAOC,OAAO,IAC1B,IAWvC,OAVIL,GACFpM,QAAQ0M,IAAIN,GAEZ7V,KAAMC,IATmB,mBASO4V,IAEhCA,EADWD,GAIO,qCAEbC,GAGIO,GAAiB,WAC5B,OAAO9Y,ocCaT,IAoEI+Y,GClFAjN,GACAhB,GACAK,GD0BE6N,GAAgBC,KAAOC,IAAI,uBAE3BC,GAAW,SAAAzP,GAAkDA,EAA/C0P,KAA+C,IAAzCC,EAAyC3P,EAAzC2P,MAAOC,EAAkC5P,EAAlC4P,QAASC,EAAyB7P,EAAzB6P,QACxC,OADiE7P,EAAhB8P,UAIxC,KAIL/X,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,eAAc5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAC5CxD,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,yBAAyBgV,GAAc,IACvD5X,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,eACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,cAAe,KACvB,IACRxD,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,yBAAyBiV,GAAgB,IACzD7X,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,eACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,gBAAiB,KACzB,IACRxD,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,yBAAyBkV,GAAgB,IACzD9X,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,eACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,iBACR,MAMV8I,GAAe,CACnB6L,eAAgB,IAChBC,WAAW,EACXC,yBAAyB,EACzBC,eAAgB,EAChBC,gBAAiB,EACjBrH,oBAAqB,EACrBK,gBAAiB,EACjBiH,SAAS,GACTvJ,YAAa,EACbW,iBAAkB,EAClB6I,cAAe,KACfC,0BAA2B,EAC3BC,eAAgB,EAChBC,eAAgB,EAChBC,eAAgB,EAChBhI,cAAe,EACfe,kBAAmB,EACnBK,mBAAoB,EACpB6G,eAAgB,KAChB5D,iBAAkB,EAClBN,iBAAkB,EAClBY,YAAa,KAMTuD,GAA0BjO,GAAS,GACnCkO,GAA2BlO,GAAS,GAEpCmO,4CACJ,SAAAA,EAAYlZ,GAAO,IAAAW,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAqY,IACjBvY,EAAAG,EAAAC,KAAAF,KAAMb,IAwCRmZ,SAzCmB9Y,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAyCR,SAAAC,IAAA,OAAAF,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHvI,EAAKyY,iBADF,cAAApQ,EAAAE,KAAA,EAEHvI,EAAK0Y,eAFF,wBAAArQ,EAAAc,SAAAjB,MAzCQlI,EA8CnByY,eA9CmB/Y,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA8CF,SAAAwB,IAAA,OAAAzB,EAAAzI,EAAA6I,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACTvI,EAAK2Y,gBADI,wBAAA/O,EAAAT,SAAAM,MA9CEzJ,EAkDnB0Y,aAlDmBhZ,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAkDJ,SAAAwF,IAAA,IAAAsK,EAAAF,EAAAtJ,EAAAW,EAAAiB,EAAAK,EAAAK,EAAAK,EAAAK,EAAAyG,EAAAI,EAAAH,EAAAC,EAAAC,EAAA3D,EAAAN,EAAAY,EAAA,OAAA9M,EAAAzI,EAAA6I,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cACPwP,EAAgBlL,GAASS,oBADlBK,EAAApF,KAAA,EAGiBsE,GAASe,aAH1B,cAGPiK,EAHOlK,EAAA7D,KAAA6D,EAAApF,KAAA,EAIasE,GAASsB,iBAJtB,cAIPI,EAJOZ,EAAA7D,KAAA6D,EAAApF,KAAA,EAMkBsE,GAASkC,sBAN3B,cAMPG,EANOvB,EAAA7D,KAAA6D,EAAApF,KAAA,GASesE,GAASmD,mBATxB,eASPG,EATOxC,EAAA7D,KAAA6D,EAAApF,KAAA,GAUqBsE,GAASwD,yBAV9B,eAUPG,EAVO7C,EAAA7D,KAAA6D,EAAApF,KAAA,GAWiBsE,GAAS6D,qBAX1B,eAWPG,EAXOlD,EAAA7D,KAAA6D,EAAApF,KAAA,GAYmBsE,GAASkE,uBAZ5B,eAYPG,EAZOvD,EAAA7D,KAAA6D,EAAApF,KAAA,GAaoBsE,GAASuE,wBAb7B,eAaPG,EAbO5D,EAAA7D,KAAA6D,EAAApF,KAAA,GAe2BsE,GAAS4E,uBAfpC,eAePuG,EAfOrK,EAAA7D,KAAA6D,EAAApF,KAAA,GAgBgBsE,GAASuF,oBAhBzB,eAgBPgG,EAhBOzK,EAAA7D,KAAA6D,EAAApF,KAAA,GAkBgBsE,GAASiF,4BAA4B,GAlBrD,eAkBPmG,EAlBOtK,EAAA7D,KAAA6D,EAAApF,KAAA,GAmBgBsE,GAASiF,4BAA4B,GAnBrD,eAmBPoG,EAnBOvK,EAAA7D,KAAA6D,EAAApF,KAAA,GAoBgBsE,GAASiF,4BAA4B,GApBrD,eAoBPqG,EApBOxK,EAAA7D,KAAA6D,EAAApF,KAAA,GAsBkBsE,GAASwH,kCAtB3B,eAsBPG,EAtBO7G,EAAA7D,KAAA6D,EAAApF,KAAA,GAuBkBsE,GAASkH,0BAvB3B,eAuBPG,EAvBOvG,EAAA7D,KAAA6D,EAAApF,KAAA,GAwBasE,GAAS8H,iBAxBtB,QAwBPG,EAxBOnH,EAAA7D,KA0Bb9J,EAAKS,SAAS,CACZoX,kBACAtJ,cACAwJ,gBACA7I,mBACAsB,sBACAK,kBACAmH,4BACAC,iBACAC,iBACAC,iBACAhI,gBACAe,oBACAK,qBACA6G,iBACAT,wBAAyBzG,EAAoB,EAC7CsD,mBACAN,mBACAY,gBA5CW,yBAAAnH,EAAAxE,SAAAsE,MAlDIzN,EAkGnB2Y,cAlGmBjZ,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAkGH,SAAA6F,IAAA,IAAA8J,EAAA,OAAA5P,EAAAzI,EAAA6I,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,cAAAwF,EAAAxF,KAAA,EACesE,GAASU,wBADxB,OACRqK,EADQ7J,EAAAjE,KAEd9J,EAAKS,SAAS,CACZmX,mBAHY,wBAAA7J,EAAA5E,SAAA2E,MAlGG9N,EAyGnB4Y,kBAAoB,WAAM,IAAA5V,EACgChD,EAAKiB,MAArDyW,EADgB1U,EAChB0U,UAAWmB,EADK7V,EACL6V,iBAAkBC,EADb9V,EACa8V,eAC/BC,EAAclC,GAAcmC,SAAS,IAAIlO,MAC/C,QAAS4M,GAAmC,IAArBmB,GAA0BC,EAAiB,IAAOC,GA5GxD/Y,EA+GnBiZ,mBAAqB,WAAM,IAAAC,EACelZ,EAAKiB,MAArCyW,EADiBwB,EACjBxB,UAAWmB,EADMK,EACNL,iBACbE,EAAclC,GAAcmC,SAAS,IAAIlO,MAC/C,QAAS4M,GAAkC,IAArBmB,IAA2BE,GAlHhC/Y,EAqHnBmZ,kBAAoB,WAAM,IAAAC,EACgBpZ,EAAKiB,MAArCyW,EADgB0B,EAChB1B,UAAWlD,EADK4E,EACL5E,iBACnB,QAASkD,GAAkC,IAArBlD,GAvHLxU,EA0HnBqZ,aAAe,SAAAC,GACb,IAAMC,EAAkBD,EACrBE,QAAQ,cAAe,IACvBA,QAAQ,aAAc,IACtBA,QAAQ,2BAA4B,MACvC,MAA+B,KAA3BD,EAAgBlE,OACX,GAEAkE,GAlIQvZ,EAsInByZ,YAAc,SAAAC,GAEZ,OADaC,GAASD,IAvIL1Z,EA2InB4Z,SAAW,WAAM,IACP9U,EAAiB9E,EAAKX,MAAtByF,aACA+U,EAAmB7Z,EAAKiB,MAAxB4Y,eAER/U,EAAa,8BACbgV,GAAQlE,MAAM,CACZC,SAAU,MACV/W,OAAQ,YACRgX,MAAO+D,KAnJQ7Z,EAuJnB+Z,0BAvJmB,eAAAC,EAAAta,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAuJS,SAAAoG,EAAMuH,GAAN,IAAA2D,EAAA9B,EAAA,OAAAzP,EAAAzI,EAAA6I,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,OACpBgR,EAAkBvZ,EAAKqZ,aAAazD,EAAMjS,OAAOoS,OAC9B/V,EAAKiB,MAAxBwW,eAENA,EAAiB8B,EACjBvZ,EAAKS,SAAS,CAAEgX,eAAgBA,IALN,wBAAAjJ,EAAArF,SAAAkF,MAvJT,gBAAAjF,GAAA,OAAA4Q,EAAA3Q,MAAAnJ,KAAAoJ,YAAA,GAAAtJ,EA+JnBia,QA/JmB,eAAAC,EAAAxa,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA+JT,SAAA2G,EAAM8K,GAAN,IAAAS,EAAA/D,EAAAwB,EAAAH,EAAA3S,EAAA,OAAAkD,EAAAzI,EAAA6I,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,UAAA4R,EACoCna,EAAKiB,MAAzCmV,EADA+D,EACA/D,gBAAiBwB,EADjBuC,EACiBvC,eACnBH,EAAmBzX,EAAKiB,MAAxBwW,eACE3S,EAAiB9E,EAAKX,MAAtByF,aACRgV,GAAQlE,MAAM,CACZC,SAAU,MACV/W,OAAQ,mBAGN2Y,EAAiB,KATb,CAAA3I,EAAAvG,KAAA,eAUNzD,EAAa,sCAAuCO,IAV9CyJ,EAAAtG,OAAA,oBAeNiP,EACAnN,GAASsN,EAAiBS,MAG1BZ,EAAiBnN,GACfsN,EAAiBS,OAIjBZ,GAAkB,GAxBd,CAAA3I,EAAAvG,KAAA,gBAyBNzD,EAAa,6BAA8BO,IAzBrCyJ,EAAAtG,OAAA,yBAAAsG,EAAAxG,KAAA,GAAAwG,EAAAvG,KAAA,GA8BesE,GAASiG,OAC5B2E,EACArB,EACAsD,GAjCI,WAAA5K,EAAAhF,KAAA,CAAAgF,EAAAvG,KAAA,gBAAAuG,EAAAtG,OAAA,yBAsCN1D,EAAa,yBAA0BS,IAtCjCuJ,EAAAvG,KAAA,GAuCAvI,EAAKwY,WAvCL,QAAA1J,EAAAvG,KAAA,iBAAAuG,EAAAxG,KAAA,GAAAwG,EAAA/E,GAAA+E,EAAA,UAyCN9E,QAAQpE,MAARkJ,EAAA/E,IACU,kCAAN+E,EAAA/E,GACFjF,EAAa,uBAAwBS,IAEjCuJ,EAAA/E,GAAEnE,QACY,4BAAZkJ,EAAA/E,GAAEnE,MACAkJ,EAAA/E,GAAEhF,QAAQ6C,QAAQ,6BAA+B,GACnD9C,EAAa,wBAAyBQ,IAEnB,wCAAZwJ,EAAA/E,GAAEnE,MAEXd,EAAa,yBAA0BS,IAEvCT,EAAagK,EAAA/E,GAAEnE,MAAON,KAtDtB,yBAAAwJ,EAAA3F,SAAAyF,EAAA,mBA/JS,gBAAA3E,GAAA,OAAAiQ,EAAA7Q,MAAAnJ,KAAAoJ,YAAA,GAAAtJ,EA4NnB8T,SA5NmBpU,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA4NR,SAAAgH,IAAA,IAAAnK,EAAAsV,EAAAvB,EAAAjB,EAAA,OAAA5P,EAAAzI,EAAA6I,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,UACDzD,EAAiB9E,EAAKX,MAAtByF,aADCsV,EAEoCpa,EAAKiB,MAA1C4X,EAFCuB,EAEDvB,iBAAkBjB,EAFjBwC,EAEiBxC,eAC1BkC,GAAQlE,MAAM,CACZC,SAAU,MACV/W,OAAQ,oBAGN+Z,GAAoB,GARf,CAAA1J,EAAA5G,KAAA,eASPzD,EACE,2CACAO,IAXK8J,EAAA3G,OAAA,sBAgBLoP,EAAiBU,IAhBZ,CAAAnJ,EAAA5G,KAAA,eAiBPzD,EAAa,8BAA+BO,IAjBrC8J,EAAA3G,OAAA,wBAAA2G,EAAA7G,KAAA,EAAA6G,EAAA5G,KAAA,GAsBcsE,GAAS6G,eAtBvB,WAAAvE,EAAArF,KAAA,CAAAqF,EAAA5G,KAAA,gBAAA4G,EAAA3G,OAAA,yBA0BP1D,EAAa,0BAA2BS,IA1BjC4J,EAAA5G,KAAA,GA2BDvI,EAAKwY,WA3BJ,QAAArJ,EAAA5G,KAAA,iBAAA4G,EAAA7G,KAAA,GAAA6G,EAAApF,GAAAoF,EAAA,SA6BPnF,QAAQpE,MAARuJ,EAAApF,IACU,kCAANoF,EAAApF,GACFjF,EAAa,uBAAwBS,IAEjC4J,EAAApF,GAAEnE,QACY,4BAAZuJ,EAAApF,GAAEnE,MACAuJ,EAAApF,GAAEhF,QAAQ6C,QAAQ,6BAA+B,GACnD9C,EAAa,wBAAyBQ,IAEnB,wCAAZ6J,EAAApF,GAAEnE,MACXd,EAAa,0BAA2BS,IAExCT,EAAaqK,EAAApF,GAAEnE,MAAON,KAzCrB,yBAAA6J,EAAAhG,SAAA8F,EAAA,kBA5NQjP,EA4QnBgV,WA5QmBtV,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA4QN,SAAAsH,IAAA,IAAAzK,EAAA8S,EAAA,OAAA5P,EAAAzI,EAAA6I,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,UACHzD,EAAiB9E,EAAKX,MAAtByF,aACA8S,EAAmB5X,EAAKiB,MAAxB2W,eACRkC,GAAQlE,MAAM,CACZC,SAAU,MACV/W,OAAQ,kBAGN8Y,EAAiBU,IARV,CAAA7I,EAAAlH,KAAA,eASTzD,EAAa,gCAAiCO,IATrCoK,EAAAjH,OAAA,wBAAAiH,EAAAnH,KAAA,EAAAmH,EAAAlH,KAAA,EAcYsE,GAASmI,aAdrB,UAAAvF,EAAA3F,KAAA,CAAA2F,EAAAlH,KAAA,gBAAAkH,EAAAjH,OAAA,yBAkBT1D,EAAa,4BAA6BS,IAlBjCkK,EAAAlH,KAAA,GAmBHvI,EAAKwY,WAnBF,QAAA/I,EAAAlH,KAAA,iBAAAkH,EAAAnH,KAAA,GAAAmH,EAAA1F,GAAA0F,EAAA,SAqBTzF,QAAQpE,MAAR6J,EAAA1F,IACU,kCAAN0F,EAAA1F,GACFjF,EAAa,uBAAwBS,IAEjCkK,EAAA1F,GAAEnE,QACY,4BAAZ6J,EAAA1F,GAAEnE,MACA6J,EAAA1F,GAAEhF,QAAQ6C,QAAQ,6BAA+B,GACnD9C,EAAa,wBAAyBQ,IAEnB,wCAAZmK,EAAA1F,GAAEnE,MACXd,EAAa,4BAA6BS,IAE1CT,EAAa2K,EAAA1F,GAAEnE,MAAON,KAjCnB,yBAAAmK,EAAAtG,SAAAoG,EAAA,kBAzQXvP,EAAKiB,MAAQ2K,GACb5L,EAAKX,MAAMmC,eAAeC,IAJTzB,8LAQXoW,EAAkBF,KACxBhW,KAAKO,SAAS,CAAE2V,6BAEWvJ,GAASC,iCACfjF,oEAIf3H,KAAKsY,kBACXvP,cAAc2N,IACdA,GAAmB9N,YAAWpJ,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAC,SAAA4H,IAAA,OAAA7H,EAAAzI,EAAA6I,KAAA,SAAA2H,GAAA,cAAAA,EAAAzH,KAAAyH,EAAAxH,MAAA,cAAAwH,EAAAzH,KAAA,EAAAyH,EAAAxH,KAAA,EAErBxF,EAAKyV,WAFgB,OAAAzI,EAAAxH,KAAA,eAAAwH,EAAAzH,KAAA,EAAAyH,EAAAhG,GAAAgG,EAAA,SAI3B/F,QAAQpE,MAARmK,EAAAhG,IACAd,cAAc2N,IALa,wBAAA7G,EAAA5G,SAAA0G,EAAA,iBAxBlB,KAiCbiK,GAAQrE,SAAS,0JAIjBxM,cAAc2N,uFAGSyD,sEACnBna,KAAKb,MAAM+N,qBAAuBiN,EAAUjN,0CAC9ClN,KAAKO,SAASmL,aACR1L,KAAKsY,gKAiRb,OACElZ,EAAAC,EAAAC,cAAC8a,GAAA,EAAD,CAAWzP,KAAMgM,GAAc0D,SAAUvD,SAAUA,sCAI9C,IAAApT,EAAA1D,KAAAsa,EAwBHta,KAAKe,MAtBPwW,EAFK+C,EAEL/C,eACAE,EAHK6C,EAGL7C,wBACAD,EAJK8C,EAIL9C,UACAK,EALKyC,EAKLzC,cACAF,EANK2C,EAML3C,gBACAtJ,EAPKiM,EAOLjM,YACAW,EARKsL,EAQLtL,iBACA8I,EATKwC,EASLxC,0BACAC,EAVKuC,EAULvC,eACAC,EAXKsC,EAWLtC,eACAC,EAZKqC,EAYLrC,eACAhI,EAbKqK,EAaLrK,cACAyH,EAdK4C,EAcL5C,eACA1G,EAfKsJ,EAeLtJ,kBACAK,EAhBKiJ,EAgBLjJ,mBACA6G,EAjBKoC,EAiBLpC,eACAN,EAlBK0C,EAkBL1C,SACAjH,EAnBK2J,EAmBL3J,gBACAL,EApBKgK,EAoBLhK,oBACAgE,EArBKgG,EAqBLhG,iBACAN,EAtBKsG,EAsBLtG,iBACAY,EAvBK0F,EAuBL1F,YAGMjO,EAAY3G,KAAKb,MAAjBwH,QACFgT,EACJ9Q,OAAOC,SAAW+O,EAAlB,GAAAnX,OAtZe,sBAsZf,SAAAA,OAAyDmX,GAAzD,GACI0C,EAAsB/C,EACxB,iBACA,uBAEEgD,EAAyB7J,EAAgB,GACzC8J,EAAkB7C,EAAS,GAC3B8C,GAA0B/J,EAAkBL,GAAqB,GACjEqK,EAA6BrK,EAAoBsH,GAAW,GAAItH,EAAoBsH,GAAU,GAAG,EAEvG,OACExY,EAAAC,EAAAC,cAACsb,EAAA,iBAAD,CAAkB5U,MAAO6U,GACvBzb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,SACb5C,EAAAC,EAAAC,cAAA,OAAK+C,MAAM,UAAUL,UAAU,kBAC7B5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,GAAIvE,UAAU,kBACtC5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACZlY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,gBACb5C,EAAAC,EAAAC,cAAA,KAAG0C,UAAU,qBACX5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,wBAIpBxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,kBACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iBACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAGhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UAEf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iBACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAGhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iBACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,oBAGlBxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACE2C,UAAU,aACVU,QAAQ,YACRK,eAAe,EACfK,KAndxB,8EAodwBK,OAAO,UAEPrE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,eAAgB,IAC9BxD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBAEhBxD,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACE2C,UAAU,oBACVU,QAAQ,YACRK,eAAe,EACfK,KAAK,mBAELhE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,mBAAoB,KAEpCxD,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACE2C,UAAU,oBACVU,QAAQ,YACRK,eAAe,EACfK,KApeR,0FAqeQK,OAAO,UAEPrE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBAEhBxD,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACE2C,UAAU,kBACVU,QAAQ,YACRK,eAAe,EACfK,KAAK,oBAELhE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAMvB5C,KAAK+a,0BACN3b,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,uBACJhB,UAAU,cACViB,IAAI,WAIV7D,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,kBACRxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,IACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE0D,IAAI,0BACJhB,UAAU,eACViB,IAAI,UAGR7D,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,yBAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,yCACZ2V,EAAgBsD,kBAEnB7b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCAAf,QAIF5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE0D,IAAI,wBACJhB,UAAU,eACViB,IAAI,UAGR7D,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,eAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,yCACZqM,GAEHjP,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,sBAGlBxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE0D,IAAI,6BACJhB,UAAU,eACViB,IAAI,UAGR7D,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,yCACZgN,EAAiBiM,kBAEpB7b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCAAf,YAUV5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,uBACJhB,UAAU,cACViB,IAAI,WAKV7D,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,mBACRxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,WACb5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,GACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,kEACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,8BACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,0BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,yBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC4b,GAAA7b,EAAD,CACEuW,MAAM,GACN5T,UAAU,YACVmZ,aAAa,MACbtF,MAAO0B,EACP6D,SAAUpb,KAAK6Z,0BACfwB,WAAY,CACVC,aACElc,EAAAC,EAAAC,cAAA,OACE0D,IAAI,uBACJhB,UAAU,OACViB,IAAI,UAIVsY,OAAO,SACP7Y,QAAQ,cAGZtD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACEuD,GAAG,gBACHZ,UAAU,gBACVU,QAAQ,YACRK,eAAe,EACfyY,SAAUxb,KAAK0Y,oBACfpW,QAAS,kBACPoB,EAAKqW,YAGP3a,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,gBAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,4BAWhCxD,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,sBACRxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,WACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mEACf5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACzBnH,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,6BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,qBAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,4BACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,uBACZgP,GAAqB,EADxB,UAKJ5R,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,yBACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,iBAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,4BACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,uBACZqP,GAAsB,EADzB,UAKJjS,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,4BACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,wBACZiO,GAAiB,EADpB,YAOR7Q,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,GACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAGlBxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,uBAAuB,IACnCwY,GAA0B,EAD7B,OAKJpb,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,iBAAkB,IAC9B6X,GAAmB,EAAG,IAF1B,KAKArb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,sBAAuB,IACpC+X,GAA8B,EAFjC,KAKAvb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBAAmB,IAC/B8X,GAA0B,EAF9B,KAKAtb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,uBAAwB,IACpCsV,MAKV9Y,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACXlY,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACEuD,GAAG,cACHF,QAAQ,YACRV,UAAU,kBACVe,eAAe,EACfyY,SAAUxb,KAAK+Y,qBACfzW,QAAStC,KAAK4T,UAEdxU,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAI2X,MAGnBnb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAS1BxD,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,oBACRxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,uCACf5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,GACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,uBACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,2BAGlBxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,wBACZsS,GAAoB,EADvB,SAKFlV,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,2BAGlBxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,kBACZgS,GAAoB,EADvB,SAKF5U,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,oBACZ,IAAKgS,EAAa,IACpBxV,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,qBAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,WAEjB5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACEuD,GAAG,cACHF,QAAQ,YACRV,UAAU,gBACVe,eAAe,EACfyY,SAAUxb,KAAKiZ,oBACf3W,QAAStC,KAAK8U,YAEd1V,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,qBAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,2BAEhBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,iBAS3B5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,uCACf5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,IACrB5b,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,GACtBkR,EACCrY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,oBACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,oCAGlBxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,wBACZ8V,GAA6B,EADhC,SAIF1Y,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC4b,GAAA7b,EAAD,CACE2C,UAAU,yBACV6T,MAAO8D,EACP4B,OAAO,SACPlZ,MAAM,YACNK,QAAQ,cAGZtD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,oBACb5C,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,yBACdxD,EAAAC,EAAAC,cAACmc,GAAA,gBAAD,CACEC,KAAM/B,EACN5W,eAAe,EACf4Y,OAAQ,WACNjY,EAAKgW,aAGPta,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAY2C,UAAW2E,EAAQzC,QAC7B9E,EAAAC,EAAAC,cAACsc,GAAAvc,EAAD,WAMW,IAAnBqY,EACFtY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,YACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,8BAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,WAGjB5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,OACE0D,IAAI,2BACJhB,UAAU,cACViB,IAAI,SAEN7D,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,YACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,0BAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,WAGnB5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,uBADhB,cAESmV,GAET3Y,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,uBADhB,cAESoV,GAET5Y,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mCACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,uBADhB,gBAEWqV,UASvB7Y,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,gBACRxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,oBACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,sBACb5C,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,eACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,cAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,gBACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,6BACb5C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAGhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAGhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAGhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,eACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,YAEhBxD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,uBACZ5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,4BAUhCxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBA76BD6Z,IAAMxX,WAw7BxBC,GAAqB,CACzBM,gBACA/G,aAGa0G,eATS,SAAAxD,GAAK,MAAK,CAChCmM,mBAAoBnM,EAAM+K,IAAIoB,qBAU9B5I,GAFaC,CAGbC,YAAauB,qBAtgCA,SAAAC,GAAK,MAAK,CACvB9B,OAAQ,CACN4X,UAAW,CACT7V,gBAAiB,kBAmgCRF,CAAmBsS,oCEjjCrB0D,GAAiB,SAAClG,EAAOmG,GACpC,GAAInG,EAAQoG,KAAKC,IAAI,GAAKF,GACxB,OAAO,EAET,IAAMG,EAAItG,EAAMuG,WAAWC,MAAM,KACjC,GAAIL,GAAK,EACP,OAAOG,EAAE,GAGX,IAAIG,EAAIH,EAAE,IAAM,GAChB,GAAIG,EAAE9Q,OAASwQ,EAEb,MADY,GAAAtb,OAAMyb,EAAE,GAAR,KAAAzb,OAAc4b,EAAE/F,OAAO,EAAGyF,IAGxC,KAAOM,EAAE9Q,OAASwQ,GAChBM,GAAK,IAGP,MADY,GAAA5b,OAAMyb,EAAE,GAAR,KAAAzb,OAAc4b,IDYbC,GAAA,CACP3P,YADO,eAAAC,EAAArN,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAC,EACKuE,GADL,OAAAzE,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEXS,GAAU,IAAIsD,KAdG,gFAeTC,eAAiB,CACvBC,IAAKxD,GAAQyD,QAAQC,MAAMD,GAC3BE,OT7B4B,sCSwBnBtE,EAAAE,KAAA,EAQUT,GAAckB,IARxB,cAQXL,GARWN,EAAAyB,KAAAzB,EAAAE,KAAA,EASMgB,GTrCgB,wBSuC/BP,GApBmB,8CASV,cASXW,GATWtB,EAAAyB,QAeTnB,GAAed,GACfmF,GAAMC,SACJnI,GAAa,8BAA+BQ,MAjBrC+C,EAAAG,OAAA,SAoBJG,IApBI,yBAAAN,EAAAc,SAAAjB,MAAA,gBAAAkB,GAAA,OAAA2D,EAAA1D,MAAAnJ,KAAAoJ,YAAA,GAuBPqP,cAvBO,eAAA+D,EAAAhd,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAwB,EAuBOgD,GAvBP,IAAAkQ,EAAAC,EAAAC,EAAAC,EAAA,OAAA9U,EAAAzI,EAAA6I,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,UAwBNrI,KAAK6c,eAAetQ,GAxBd,CAAA7C,EAAArB,KAAA,eAAAqB,EAAApB,OAAA,SAyBF,MAzBE,cAAAoB,EAAArB,KAAA,EA4BYoB,GAASgT,WAAWvc,OA5BhC,cA4BLuc,EA5BK/S,EAAAE,KAAAF,EAAArB,KAAA,EA6BeoB,GAASiT,cAAcxc,OA7BtC,cA6BLwc,EA7BKhT,EAAAE,KAAAF,EAAArB,KAAA,GA8BgBoB,GACxBqT,0BAA0BvQ,GAC1BrM,OAhCQ,eA8BLyc,EA9BKjT,EAAAE,KAAAF,EAAArB,KAAA,GAiCeoB,GAASmT,cAAc1c,OAjCtC,eAiCL0c,EAjCKlT,EAAAE,KAAAF,EAAApB,OAAA,SAkCJ,CACLmU,SAAUA,EACNV,GAAexR,GAAW,IAAIwD,KAAU0O,GAAUzO,YAAa,GAC/D,EACJ0O,YAAaA,EACTtS,GAAS,IAAI2D,KAAU2O,GAAa1O,YACpC,EACJ4O,YAAaA,EACTxS,GAAS,IAAI2D,KAAU6O,GAAa5O,YACpC,EACJ+O,WAAYJ,EACRvS,GAAS,IAAI2D,KAAU4O,EAAa,IAAI3O,YACxC,EACJgP,YAAaL,EACTvS,GAAS,IAAI2D,KAAU4O,EAAa,IAAI3O,YACxC,IAjDK,yBAAAtE,EAAAT,SAAAM,EAAAvJ,SAAA,gBAAA+J,GAAA,OAAAyS,EAAArT,MAAAnJ,KAAAoJ,YAAA,GAqDP6T,UArDO,eAAAC,EAAA1d,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAAA,SAAAwF,EAqDGhB,GArDH,IAAAiB,EAAA,OAAA1F,EAAAzI,EAAA6I,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAsDWoB,GAASwT,UAAU1Q,GAASrM,OAtDvC,cAsDLsN,EAtDKC,EAAA7D,KAAA6D,EAAAnF,OAAA,SAuDJkF,GAvDI,wBAAAC,EAAAxE,SAAAsE,MAAA,gBAAAvD,GAAA,OAAAkT,EAAA/T,MAAAnJ,KAAAoJ,YAAA,GA0DbyT,eA1Da,SA0DEtQ,GACb,OAAOA,GAAWzD,GAAQqU,UAAU5Q,scEjExC,IAAMb,GAAe,CACnB+Q,SAAU,KACVC,YAAa,KACbK,WAAY,KACZC,YAAa,KACbJ,YAAa,KACbQ,eAAgB,IAGZC,4CACJ,SAAAA,EAAYle,GAAO,IAAAW,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAqd,IACjBvd,EAAAG,EAAAC,KAAAF,KAAMb,IAURmX,OAXmB9W,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAWV,SAAAC,IAAA,IAAApD,EAAAwY,EAAA,OAAAtV,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACCzD,EAAiB9E,EAAKX,MAAtByF,aACAwY,EAAmBtd,EAAKiB,MAAxBqc,eAFD,CAAAjV,EAAAE,KAAA,eAILzD,EAAa,4BAA6BQ,IAJrC+C,EAAAG,OAAA,wBAAAH,EAAAE,KAAA,EAOoBiV,GAAmB1Q,YAAYwQ,GAPnD,UAAAjV,EAAAyB,OAQcjC,GARd,CAAAQ,EAAAE,KAAA,gBAAAF,EAAAG,OAAA,yBAAAH,EAAAE,KAAA,GAYDvI,EAAKwY,SAAS8E,GAZb,yBAAAjV,EAAAc,SAAAjB,MAXUlI,EA0BnBwY,SA1BmB,eAAAhP,EAAA9J,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA0BR,SAAAwB,EAAM6T,GAAN,OAAAtV,EAAAzI,EAAA6I,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACHvI,EAAK2Y,cAAc2E,GADhB,wBAAA1T,EAAAT,SAAAM,MA1BQ,gBAAAL,GAAA,OAAAI,EAAAH,MAAAnJ,KAAAoJ,YAAA,GAAAtJ,EA8BnB2Y,cA9BmB,eAAA8E,EAAA/d,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KA8BH,SAAAwF,EAAMhB,GAAN,IAAAiR,EAAAf,EAAAG,EAAAF,EAAAK,EAAAC,EAAA,OAAAlV,EAAAzI,EAAA6I,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EACWiV,GAAmB7E,cAAclM,GAD5C,UACRiR,EADQ/P,EAAA7D,KAAA,CAAA6D,EAAApF,KAAA,eAAAoF,EAAAnF,OAAA,iBAKRmU,EAAWe,EAAWf,SACtBG,EAAcY,EAAWZ,YACzBF,EAAcc,EAAWd,YACzBK,EAAaS,EAAWT,WACxBC,EAAcQ,EAAWR,YAC/Bld,EAAKS,SAAS,CACZkc,WACAC,cACAE,cACAG,aACAC,gBAfY,yBAAAvP,EAAAxE,SAAAsE,MA9BG,gBAAAxD,GAAA,OAAAwT,EAAApU,MAAAnJ,KAAAoJ,YAAA,GAAAtJ,EAiDnB2d,aAjDmB,eAAAC,EAAAle,OAAAqI,EAAA,EAAArI,CAAAsI,EAAAzI,EAAA0I,KAiDJ,SAAA6F,EAAM8H,GAAN,OAAA5N,EAAAzI,EAAA6I,KAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,OACbvI,EAAKS,SAALf,OAAAme,GAAA,EAAAne,CAAA,GAAiBkW,EAAMjS,OAAOrC,KAAOsU,EAAMjS,OAAOoS,QADrC,wBAAAhI,EAAA5E,SAAA2E,MAjDI,gBAAA5D,GAAA,OAAA0T,EAAAvU,MAAAnJ,KAAAoJ,YAAA,GAGjBtJ,EAAKiB,MAAQ2K,GACb5L,EAAKX,MAAMmC,eAAeC,IAJTzB,0KAQjB8Z,GAAQrE,SAAS,iJA6CV,IAAAzS,EAQH9C,KAAKe,MANP0b,EAFK3Z,EAEL2Z,SACAC,EAHK5Z,EAGL4Z,YACAK,EAJKja,EAILia,WACAC,EALKla,EAKLka,YACAJ,EANK9Z,EAML8Z,YACAQ,EAPKta,EAOLsa,eAGF,OACEhe,EAAAC,EAAAC,cAACsb,EAAA,iBAAD,CAAkB5U,MAAO6U,GACvBzb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,SACb5C,EAAAC,EAAAC,cAACse,GAAAve,EAAD,CAAMgD,MAAM,UAAUL,UAAU,QAC9B5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CACEwE,WAAS,EACT0C,QAAS,GACTvE,UAAU,+BAEV5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,GAAI0D,GAAI,GACrB5b,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,mBACb5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,UACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,4BAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC4b,GAAA7b,EAAD,CACEuW,MAAM,GACNxU,KAAK,iBACLY,UAAU,YACVmZ,aAAa,MACb0C,YAAY,sBACZhI,MAAOuH,EACPhC,SAAUpb,KAAKyd,aACflC,OAAO,SACP7Y,QAAQ,cAIZtD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAACwb,GAAAzb,EAAD,CACEuD,GAAG,aACHZ,UAAU,aACVU,QAAQ,YACRJ,QAAStC,KAAKsW,QAEdlX,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,wBAMxBxD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMwE,WAAS,EAAC0C,QAAS,IACvBnH,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,kBADhB,IACoC6Z,GAAY,EAAG,IACjDrd,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,QACd5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,oBAGlBxD,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,wBAAyB,IACtCga,GAAe,EAFlB,IAEqBxd,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,QAAhB,QAErB5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,yBAA0B,IACvC8Z,GAAe,EAFlB,IAEqBtd,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,QAAhB,SAGvB5C,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAMgY,MAAI,EAACC,GAAI,IACblY,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,wBADhB,IAC0Cma,GAAc,EAAG,IACzD3d,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,QAAhB,QAEF5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACf5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAWC,GAAG,yBAA0B,IACvCoa,GAAe,EAFlB,IAEqB5d,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,QAAhB,uBA5Id6Z,IAAMxX,WA0J7BC,GAAqB,CACzBM,iBAGaL,eACb,KACAD,GAFaC,CAGbC,YAAa6Y,KC1KA9Y,eAJS,SAAAxD,GAAK,MAAK,CAChCjD,OAAQiD,EAAM+K,IAAIhO,SAGLyG,CAfO,SAAA8C,GACpB,OADoCA,EAAbvJ,QAErB,KAAKH,EACH,OAAOyB,EAAAC,EAAAC,cAACwe,GAAD,MACT,InBP2B,yBmBQzB,OAAO1e,EAAAC,EAAAC,cAACye,GAAD,MACT,QACE,OAAO,6cCNPC,iKAEF,OACE5e,EAAAC,EAAAC,cAACsb,EAAA,iBAAD,CAAkB5U,MAAO6U,GACvBzb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,UACb5C,EAAAC,EAAAC,cAAA,QAAM0C,UAAU,0BACb,IADH,iDALW6Z,IAAMxX,WAeZE,eAAQ,KAARA,CAAcC,YAAawZ,idCPpCC,4CACJ,SAAAA,EAAY9e,GAAO,IAAAW,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAie,IACjBne,EAAAG,EAAAC,KAAAF,KAAMb,IAgBR+e,WAAa,YAGXrgB,EAFsBiC,EAAKX,MAAnBtB,WACO4Y,OAnBE3W,EAuBnBqe,YAAc,WACZvE,GAAQtE,aACRsE,GAAQrE,SAAS,SAtBjBzV,EAAKX,MAAMmW,WAAW,CACpBnU,UAAW,CACT,CAAEC,KAAM,UAAWhB,KAAM,MACzB,CAAEgB,KAAM,UAAWhB,KAAM,OAE3Bge,QAAS,CAAEC,+CARIve,kEAajBE,KAAKme,cACLne,KAAKke,8CAeL,OACE9e,EAAAC,EAAAC,cAACgf,EAAAjf,EAAD,CAAkB2G,MAAO6U,GACvBzb,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,OACb5C,EAAAC,EAAAC,cAACif,GAAD,MACAnf,EAAAC,EAAAC,cAAA,OAAKsD,GAAG,QACNxD,EAAAC,EAAAC,cAACkf,GAAD,OAEFpf,EAAAC,EAAAC,cAACmf,GAAD,MACArf,EAAAC,EAAAC,cAACof,GAAD,eAtCQra,aA6CZC,GAAqB,CACzBzG,aAGa0G,eACb,KACAD,GAFaC,CAGbC,YAAayZ,KC3DKU,QACW,cAA7B9V,OAAOwN,SAASuI,UAEe,UAA7B/V,OAAOwN,SAASuI,UAEhB/V,OAAOwN,SAASuI,SAASC,MACvB,2DCNNC,IAASC,OACP3f,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAC0f,EAAA,EAAD,CAAUlS,MAAOA,IACf1N,EAAAC,EAAAC,cAAC2f,GAAD,QAGJC,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcrW,MAAMsW,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.caac23f7.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_VAULT = 'SCREEN_VAULT';\nconst SCREEN_ACCOUNT_DETAILS = 'SCREEN_ACCOUNT_DETAILS';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport { SET_SCREEN, SCREEN_VAULT, SCREEN_ACCOUNT_DETAILS, RELOAD_ACCOUNT };\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#12161c',\n      main: '#12161c',\n      dark: '#12161c',\n      contrastText: '#1DA1F2',\n    },\n    secondary: {\n      light: '#a3eeff',\n      main: '#a3eeff',\n      dark: '#a3eeff',\n      contrastText: '#ffffff',\n    },\n    third: {\n      light: '#7ce27c',\n      main: '#7ce27c',\n      dark: '#7ce27c',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = props => <Slide direction=\"up\" {...props} />;\nexport default Transition;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport Dialog from '@material-ui/core/Dialog/Dialog';\nimport Transition from './Transition';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../../translations/translate.json';\n\nimport { SCREEN_VAULT, setScreen } from '../../actions/app';\n\nconst TT_URL = 'https://twitter.com/trondexorg';\nconst TG_URL = 'https://t.me/trondex';\n\nclass GameAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n      anchorEl: null,\n      wechatOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('language') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('language', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getFlagUrl = code => {\n    return `images/misc/${code}.svg`;\n  };\n\n  getLogoImage = () => {\n    return `images/misc/logo_white.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_VAULT);\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderWechat() {\n    const { wechatOpen } = this.state;\n\n    return (\n      <Dialog\n        open={wechatOpen}\n        onClose={this.closeWechat}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"static\" className=\"wechat-appbar\">\n          <Toolbar>\n            <Tooltip title=\"Close\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.closeWechat}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <Translate id=\"max.joinWechat\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n    );\n  }\n\n  openWechat = () => {\n    this.setState({ wechatOpen: true });\n  };\n\n  closeWechat = () => {\n    this.setState({ wechatOpen: false });\n  };\n\n  renderDesktop() {\n    const { languages, anchorEl } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"logo\"\n            disableRipple={true}\n            onClick={this.home}\n          >\n            <img\n              src={this.getLogoImage()}\n              className=\"logo-medium\"\n              alt=\"vault\"\n            />\n          </IconButton>\n        </div>\n\n        <div>\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.invest\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_invest\"\n          >\n            <span className=\"contracts-menu gold\">\n              <Translate id=\"max.invest\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.stats\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_stats\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.stats\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.myaccount\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_myaccount\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.myaccount\" />\n            </span>\n          </IconButton>\n\n          <IconButton\n            className=\"contract-menu-button\"\n            color=\"inherit\"\n            aria-label={<Translate id=\"max.roadmap\" />}\n            disableRipple={true}\n            aria-owns={anchorEl ? 'contracts-menu' : undefined}\n            href=\"#section_faq\"\n          >\n            <span className=\"contracts-menu\">\n              <Translate id=\"max.faq\" />\n            </span>\n          </IconButton>\n\n          {languages.map(lang => (\n            <IconButton\n              id={lang.code}\n              key={lang.code}\n              color=\"inherit\"\n              disableRipple={true}\n              onClick={() => this.setActiveLanguage(lang.code)}\n            >\n              <img\n                src={this.getFlagUrl(lang.code)}\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          ))}\n\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TT_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/twitter.png\"\n                className=\"image-flag\"\n                alt=\"Twitter\"\n              />\n            </IconButton>\n          </span>\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TG_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/telegram.png\"\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          disableRipple={true}\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            disableRipple={true}\n            aria-label={<Translate id=\"max.tronmax\" />}\n            onClick={this.home}\n          >\n            <span>\n              <Translate id=\"max.tronmax\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <ListItem\n                    button\n                    key={lang.code}\n                    className=\"drawer-item\"\n                    disableRipple={true}\n                    onClick={() => this.setActiveLanguage(lang.code)}\n                  >\n                    <img\n                      src={this.getFlagUrl(lang.code)}\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </ListItem>\n                ))}\n                <span className=\"social\">\n                  <IconButton\n                    disableRipple={true}\n                    className=\"social-button\"\n                    href={TT_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/twitter.png\"\n                      className=\"image-flag\"\n                      alt=\"Twitter\"\n                    />\n                  </IconButton>\n                </span>\n                <span className=\"social\">\n                  <IconButton\n                    className=\"social-button\"\n                    href={TG_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/telegram.png\"\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </IconButton>\n                </span>\n              </ListItem>\n              <Divider />\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GameAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: '#0000a5',\n  },\n  error: {\n    backgroundColor: '#cc0040',\n  },\n  info: {\n    backgroundColor: '#2993c4',\n  },\n  warning: {\n    backgroundColor: '#c04a42',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst GameSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(GameSnackbar));\n","export const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy';\nexport const FOUNDATION_CODE = 6666;\n\nexport const injectTronWeb = async defaultTronWeb => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nexport const initContract = async (\n  tronWebState,\n  defaultTronWeb,\n  contractAddress\n) => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(contractAddress);\n    } else {\n      contract = await defaultTronWeb.contract().at(contractAddress);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport const trxToSun = trx => {\n  return trx * 1e6;\n};\n\nexport const sunToTrx = sun => {\n  if (isNaN(sun)) {\n    return '';\n  }\n  return sun / 1e6;\n};\n\nexport const weiToToken = wei => {\n  if (isNaN(wei)) {\n    return '';\n  }\n  return wei / 1e18;\n};\n\nexport const tokenToWei = token => {\n  return token * 1e18;\n};\n\nexport const isValidCode = code => {\n  const n = Math.floor(Number(code));\n  return n !== Infinity && String(n) === code && n >= FOUNDATION_CODE;\n};\nexport const isValidAddress = addrs => {\n  return true;\n};\n\nexport const getDateTimeFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(unix * 1000);\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\nexport const getDateTimeLongFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  if (unix > 0) {\n    let date = new Date(unix * 1000);\n    let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear(),\n      hour = '' + d.getHours(),\n      minute = '' + d.getMinutes();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    let p1 = [year, month, day].join('-');\n    let p2 = [hour, minute].join(':');\n\n    return [p1, p2].join(' ');\n  } else {\n    return null;\n  }\n};\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_VAULT, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_VAULT,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  weiToToken,\n  getDateTimeLongFromUnix,\n\n} from './tronCommon';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET\nconst CONTRACT_ADDRESS = '41dda355f8246a8b5fb6c7c7515b93b16d62ed75c9';\nconst AIRDROP_CONTRACT_ADDRESS = '4128937030d781d0efa1e86e993bc59efcb225032b'; \nconst TRONGRID_API = 'https://api.trongrid.io';\n\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet airdropContract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      airdropContract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        AIRDROP_CONTRACT_ADDRESS\n      );\n\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n\n    airdropContract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      AIRDROP_CONTRACT_ADDRESS\n    );\n    if (!contract || !airdropContract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getContractBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const totalusers = await contract.totalUsers().call();\n\n    const playerCount = totalusers ? new BigNumber(totalusers).toNumber() : 0;    \n\n    return playerCount;\n  },\n\n  async getTotalReferrals() {\n    const totalReferrals = await contract.getTotalReferrals().call();\n    return totalReferrals\n      ? sunToTrx(new BigNumber(totalReferrals).toNumber())\n      : 0;\n  },\n\n  async getTotalInvestments() {\n    const totalInvestments = await contract.totalInvested().call();\n    return totalInvestments\n      ? sunToTrx(new BigNumber(totalInvestments).toNumber())\n      : 0;\n  },\n\n  async getTotalWithdraws() {\n    const totalWithdraws = await contract.totalWithdrawn().call();\n    return totalWithdraws\n      ? sunToTrx(new BigNumber(totalWithdraws).toNumber())\n      : 0;\n  },\n\n  async getTotalTxs() {\n    const totalTxs = await contract.getTotalTxs().call();\n    return totalTxs ? new BigNumber(totalTxs).toNumber() : 0;\n  },\n  \n  async getUserAvailable() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userAvailable = await contract.getUserAvailable(currentAddress).call();\n    return userAvailable ? sunToTrx(new BigNumber(userAvailable).toNumber()) : 0;\n  },\n\n  async getContractBalanceRate() {\n    const contractBalanceRate = await contract.getContractBalanceRate().call();\n    return (new BigNumber(contractBalanceRate).toNumber());\n  },\n\n  async getUserPercentRate() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userPercentRate = await contract.getUserPercentRate(currentAddress).call();\n    return (new BigNumber(userPercentRate).toNumber());\n  },\n\n  async getUserTotalDeposits() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalDeposits = await contract.getUserTotalDeposits(currentAddress).call();\n    return userTotalDeposits ? sunToTrx(new BigNumber(userTotalDeposits).toNumber()) : 0;\n  },\n\n  async getUserTotalWithdrawn() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userTotalWithdrawn = await contract.getUserTotalWithdrawn(currentAddress).call();\n    return userTotalWithdrawn ? sunToTrx(new BigNumber(userTotalWithdrawn).toNumber()) : 0;\n  },\n\n  async getUserReferralBonus() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralBonus = await contract.getUserReferralBonus(currentAddress).call();\n    return referralBonus ? sunToTrx(new BigNumber(referralBonus).toNumber()) : 0;\n  },\n\n  async getUserReferralCountByLevel(level) {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const referralCount = await contract.getUserReferralCountByLevel(currentAddress, level).call();\n    return referralCount ? new BigNumber(referralCount).toNumber() : 0;\n  },\n\n  async getUserCheckpoint() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const userCheckPoint = await contract.getUserCheckpoint(currentAddress).call();\n    \n    const checkpoint = getDateTimeLongFromUnix(\n        new BigNumber(userCheckPoint).toNumber()\n      );\n    return checkpoint;\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    // console.log(sendAmount, referrer);\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Airdrop functions\n  async getUserWithdrawnAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const withdrawnAirdrop = await airdropContract.getUserWithdrawn(currentAddress).call();\n    return withdrawnAirdrop ? weiToToken(new BigNumber(withdrawnAirdrop).toNumber()) : 0;\n  },\n\n  async getUserAvailableWithdrawAirdrop() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress) {\n      return 0;\n    }\n    const availableAirdrop = await airdropContract.getUserAvailableWithdraw(currentAddress).call();\n    return availableAirdrop ? weiToToken(new BigNumber(availableAirdrop).toNumber()) : 0;\n  },\n\n  async getAirdropRate() {\n    const airdropRate = await airdropContract.getAirdropRate().call();\n    return airdropRate ? new BigNumber(airdropRate).toNumber() : 0;\n  },\n\n  async getAirdrop() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await airdropContract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  // Util functions\n  fromHex(hex) {\n    if (hex === '0x0000000000000000000000000000000000000000') {\n      return '';\n    } else {\n      try {\n        const base58 = defaultTronWeb.address.fromHex(hex.trim());\n        return base58;\n      } catch (e) {\n        console.error(hex);\n        console.error(e);\n        return hex;\n      }\n    }\n  },\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","import ReactGA from 'react-ga';\n// import { isProductionEnvironment } from './environment';\nconst isProductionEnvironment = false;\n\nexport default {\n  initialize: () => {\n    isProductionEnvironment && ReactGA.initialize('UA-3373847473-1');\n  },\n  pageview: (rawPath, trackerNames, title) => {\n    isProductionEnvironment && ReactGA.pageview(rawPath, trackerNames, title);\n  },\n  event: (\n    { category, action, label, value, nonInteraction, transport, ...args } = {},\n    trackerNames\n  ) => {\n    isProductionEnvironment &&\n      ReactGA.event(\n        { category, action, label, value, nonInteraction, transport, ...args },\n        trackerNames\n      );\n  },\n};\n","import Lockr from 'lockr';\nimport qs from 'qs';\n\nimport { isValidAddress } from './tronCommon';\nimport { SCREEN_VAULT } from '../actions/app';\n\nconst REFERRAL_ADDRESS_KEY = 'TRONDEX_REFERRAL'; // there is a typo, but can't change now\n\nexport const parseReferralAddress = () => {\n  const storedReferralAddress = Lockr.get(REFERRAL_ADDRESS_KEY);\n  const parsedQueryString = qs.parse(window.location.search.substr(1));\n  let referralAddress = parsedQueryString['ref'];\n  if (referralAddress && isValidAddress(referralAddress)) {\n    console.log(referralAddress);\n    // store the new referralAddress\n    Lockr.set(REFERRAL_ADDRESS_KEY, referralAddress);\n  } else if (!!storedReferralAddress) {\n    referralAddress = storedReferralAddress;\n  } else {\n    // empty, just return address(0)\n    referralAddress = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n  }\n  return referralAddress;\n};\n\nexport const parseGameRoute = () => {\n  return SCREEN_VAULT;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Countdown from 'react-countdown-now';\nimport moment from 'moment';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMain';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst CONTRACT_URL =\n  'https://www.tronscan.org/#/contract/TWB81E1ShsaqLpbQsbKTgEy3LxQK8iBhXa/code';\nconst TRADE_URL = 'https://www.justswap.io/?lang=en-US#/scan/detail/trx/TV2EWPPhFj3q9KCuXjD6pHsLHvgNAmwLtF';\n\nconst styles = theme => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://trondex.org';\n\nconst gameStartTime = moment.utc('2020-10-05T12:00:00');\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    // window.location.reload();\n    return null;\n  } else {\n    // Render a countdown\n    return (\n      <Grid item xs={12}>\n        <span className=\"medium-text\"><Translate id=\"max.gamestart\" /></span>\n        <span className=\"xxl-text glowing-pink\">{hours}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.hours\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{minutes}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.minutes\" />{' '}\n        </span>{' '}\n        <span className=\"xxl-text glowing-pink\">{seconds}</span>{' '}\n        <span className=\"medium-text\">\n          <Translate id=\"max.seconds\" />\n        </span>{' '}\n      </Grid>\n    );\n  }\n};\n\nconst initialState = {\n  depositAmounts: 100,\n  isLoading: false,\n  accountValidForReferral: false,\n  accountBalance: 0,\n  contractBalance: 0,\n  contractBalanceRate: 0,\n  userPercentRate: 0,\n  baseRate:10,\n  playerCount: 0,\n  totalInvestments: 0,\n  playerAddress: null,\n  availableReferrerEarnings: 0,\n  level1RefCount: 0,\n  level2RefCount: 0,\n  level3RefCount: 0,\n  userAvailable: 0,\n  userTotalDeposits: 0,\n  userTotalWithdrawn: 0,\n  userCheckpoint: null,\n  availableAirdrop: 0,\n  withdrawnAirdrop: 0,\n  airdropRate: 1000,\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\n\nclass DailyDivs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    await this.getPlayerData();\n  };\n\n  loadDivsData = async () => {\n    const playerAddress = tronMain.getCurrentAddress();\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    const totalInvestments = await tronMain.getTotalInvestments();\n    // const totalWithdraws = await tronMain.getTotalWithdraws();\n\n    const userAvailable = await tronMain.getUserAvailable();\n    const contractBalanceRate = await tronMain.getContractBalanceRate();\n    const userPercentRate = await tronMain.getUserPercentRate();\n    const userTotalDeposits = await tronMain.getUserTotalDeposits();\n    const userTotalWithdrawn = await tronMain.getUserTotalWithdrawn();\n\n    const availableReferrerEarnings = await tronMain.getUserReferralBonus();\n    const userCheckpoint = await tronMain.getUserCheckpoint();\n    \n    const level1RefCount = await tronMain.getUserReferralCountByLevel(1);\n    const level2RefCount = await tronMain.getUserReferralCountByLevel(2);\n    const level3RefCount = await tronMain.getUserReferralCountByLevel(3);\n\n    const availableAirdrop = await tronMain.getUserAvailableWithdrawAirdrop();\n    const withdrawnAirdrop = await tronMain.getUserWithdrawnAirdrop();\n    const airdropRate = await tronMain.getAirdropRate();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerAddress,\n      totalInvestments,\n      contractBalanceRate,\n      userPercentRate,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      accountValidForReferral: userTotalDeposits > 0,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isLoading, withdrawableDivs, investmentDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || (withdrawableDivs === 0 && investmentDivs > 0) || !gameStarted;\n  };\n\n  isWithdrawDisabled = () => {\n    const { isLoading, withdrawableDivs } = this.state;\n    const gameStarted = gameStartTime.isBefore(new Date());\n    return !!isLoading || withdrawableDivs === 0 || !gameStarted;\n  };\n\n  isAirdropDisabled = () => {\n    const { isLoading, availableAirdrop } = this.state;\n    return !!isLoading || availableAirdrop === 0;\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Max',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    let { depositAmounts } = this.state;\n\n    depositAmounts = formattedAmount;\n    this.setState({ depositAmounts: depositAmounts });\n  };\n\n  deposit = async planId => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmounts } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Max',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmounts < 100) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (\n      depositAmounts >\n      sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)\n    ) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmounts = sunToTrx(\n        accountBalance - MINIMUM_DEPOSIT_GAS_FEE\n      );\n    }\n\n    if (depositAmounts <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(\n        depositAmounts,\n        referralAddress,\n        planId\n      );\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { withdrawableDivs, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Withdraw Fund',\n    });\n\n    if (withdrawableDivs <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  getAirdrop = async () => {\n    const { showSnackbar } = this.props;\n    const { accountBalance } = this.state;\n    Tracker.event({\n      category: 'Max',\n      action: 'Get Airdrop',\n    });\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.getAirdropNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.getAirdrop();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.getAirdropSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  \n  renderCountdownIfNeeded() {\n    // const { loaded } = this.state;\n    return (\n      <Countdown date={gameStartTime.toDate()} renderer={renderer} />\n    );\n  }\n\n  render() {\n    const {\n      depositAmounts,\n      accountValidForReferral,\n      isLoading,\n      playerAddress,\n      contractBalance,\n      playerCount,\n      totalInvestments,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      userAvailable,\n      accountBalance,\n      userTotalDeposits,\n      userTotalWithdrawn,\n      userCheckpoint,\n      baseRate,\n      userPercentRate,\n      contractBalanceRate,\n      availableAirdrop,\n      withdrawnAirdrop,\n      airdropRate,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerAddress ? `${WEB_SITE_URL}?ref=${playerAddress}` : ``;\n    const processWithdrawText = isLoading\n      ? 'max.processing'\n      : 'max.withdrawtowallet';\n\n    const userPercentRateDisplay = userPercentRate/10;\n    const baseRateDisplay = baseRate/10;\n    const userHoldOutRateDisplay = (userPercentRate - contractBalanceRate)/10;\n    const contractBalanceRateDisplay = contractBalanceRate-baseRate >=0? (contractBalanceRate-baseRate)/10:0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n               <Grid item xs={12}>\n                  <div className=\"announcement\">\n                    <p className=\"announcement-text\">\n                      <Translate id=\"max.announcement\" />\n                    </p>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className=\"jumbotron\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12}>\n                        <div className=\"xxl-size white\">\n                          <Translate id=\"max.maintitle\" />\n                        </div>\n                        <div className=\"xxl-size aqua\">\n                          <Translate id=\"max.subtitle1\" />\n                        </div>\n\n                        <div className=\"space\" />\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle2\" />\n                        </div>\n\n                        <div className=\"x-m-size gold\">\n                          <Translate id=\"max.subtitle3\" />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={CONTRACT_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.verify\" />{' '}\n                          <Translate id=\"max.contract\" />\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.investment\" />{' '}\n                        </Button>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href={TRADE_URL}\n                          target=\"_blank\"\n                        >\n                          <Translate id=\"max.tradetdx\" />\n                        </Button>\n                        <Button\n                          className=\"contract-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_airdrop\"\n                        >\n                          <Translate id=\"max.claimairdrop\" />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n                {this.renderCountdownIfNeeded()}\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n                <div id=\"section_stats\" />\n                <Grid item xs={12}>\n                  <div className=\"\">\n                    <div className=\"jumbotron\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/balance.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.contractbalance\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {contractBalance.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/users.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.users\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {playerCount}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.count_users\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <div>\n                            <img\n                              src=\"images/misc/investment.svg\"\n                              className=\"image-medium\"\n                              alt=\"tron\"\n                            />\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            <Translate id=\"max.totalinvestments\" />\n                          </div>\n                          <div className=\"global-stats-item l-size glowing-pink\">\n                            {totalInvestments.toLocaleString()}\n                          </div>\n                          <div className=\"global-stats-item s-size grey\">\n                            TRX\n                          </div>\n                        </Grid>\n                        \n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <div className=\"m-size grey\">\n                    <img\n                      src=\"images/misc/line.svg\"\n                      className=\"image-small\"\n                      alt=\"tron\"\n                    />\n                  </div>\n                </Grid>\n\n                <div id=\"section_invest\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder grey-border deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src='images/misc/diamond.svg'\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"m-size dark plan-name\">\n                                <Translate id=\"max.diamond\" />\n                              </span>\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"input-box\">\n                              <TextField\n                                label=\"\"\n                                className=\"buy-token\"\n                                autoComplete=\"off\"\n                                value={depositAmounts}\n                                onChange={this.handleDepositAmountChange}\n                                InputProps={{\n                                  endAdornment: (\n                                    <img\n                                      src=\"images/misc/logo.svg\"\n                                      className=\"logo\"\n                                      alt=\"tron\"\n                                    />\n                                  ),\n                                }}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"invest-button\"\n                                  className=\"invest-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() =>\n                                    this.deposit()\n                                  }\n                                >\n                                  <Translate id=\"max.invest\" />\n                                </Button>\n                                <div className=\"s-size grey\">\n                                  <Translate id=\"max.minwarning\" />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                \n                <div id=\"section_myaccount\" />\n                <Grid item xs={12} md={6}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                    <div className=\"buy-placeholder grey-border withdraw-card deposit-withdraw-card\">\n                    <Grid container spacing={24}>\n                    <div className=\"space\" />\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={24}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/investment.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.investment\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalDeposits || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/wallet.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.payout\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"blue balance-number\">\n                                {userTotalWithdrawn || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/withdraw.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawableTrx\" />\n                              </span>\n                            </div>\n                            <div className=\"x-m-size middle-children\">\n                              <div className=\"green balance-number\">\n                                {userAvailable || 0} TRX\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={12}>\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/referral.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.userPercentRate\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"blue balance-number\">{' '}\n                                {userPercentRateDisplay || 0}%\n                              </div>\n                            </div>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.baseRate\" />{' '}\n                               {baseRateDisplay || 0}{' '}%\n                            </div>\n                            \n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.contractbonus\" />{' '}\n                              {contractBalanceRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size blue\">\n                              <Translate id=\"max.holdbonus\" />{' '}\n                               {userHoldOutRateDisplay || 0}%\n                            </div>\n\n                            <div className=\"global-stats-item s-size gold\">\n                              <Translate id=\"max.userCheckpoint\" />{' '}\n                               {userCheckpoint}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12}>\n                          <Button\n                            id=\"sell-button\"\n                            variant=\"contained\"\n                            className=\"withdraw-button\"\n                            disableRipple={true}\n                            disabled={this.isWithdrawDisabled()}\n                            onClick={this.withdraw}\n                          >\n                            <span className=\"my-account-title\">\n                              <Translate id={processWithdrawText} />\n                            </span>\n                          </Button>\n                          <div className=\"s-size grey\">\n                            <Translate id=\"max.feewarning\" />\n                          </div>\n                       </Grid>\n                    </Grid>\n                    </div>\n                    </div>\n                  </div>\n                </Grid>\n\n                <div id=\"section_airdrop\" />\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} md={6}>\n                            <div className=\"space\" />\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/gold.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.availableAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"green balance-number\">\n                                {availableAirdrop || 0} TDX\n                              </div>\n                            </div>\n\n                            <div className=\"middle-children\">\n                              <img\n                                src=\"images/misc/platinum.svg\"\n                                className=\"image-small\"\n                                alt=\"tron\"\n                              />\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.withdrawnAirdrop\" />\n                              </span>\n                            </div>\n                            <div>\n                              <div className=\"balance-number\">\n                                {withdrawnAirdrop || 0} TDX\n                              </div>\n                            </div>\n                            \n                            <div className=\"s-size\">\n                              <Translate id=\"max.tdxMessage1\" /> \n                               {' '}{airdropRate}{' '}\n                              <Translate id=\"max.tdxMessage2\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <Button\n                              id=\"sell-button\"\n                              variant=\"contained\"\n                              className=\"invest-button\"\n                              disableRipple={true}\n                              disabled={this.isAirdropDisabled()}\n                              onClick={this.getAirdrop}\n                            >\n                              <span className=\"my-account-title\">\n                                <Translate id=\"max.getairdrop\" />\n                              </span>\n                            </Button>\n                            <div className=\"s-size grey\">\n                              <Translate id=\"max.feewarningairdrop\" />\n                            </div>\n                            <div className=\"space\" />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                  <div className=\"card\">\n                    <div className=\"space\" />\n                    <div className=\"dd-card buy-placeholder grey-border\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Grid container spacing={0}>\n                          {accountValidForReferral ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title\">\n                                  <Translate id=\"max.availableReferralEarnings\" />\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"green balance-number\">\n                                  {availableReferrerEarnings || 0} TRX\n                                </div>\n                              </div>\n                              <div className=\"input-box\">\n                                <TextField\n                                  className=\"divs-referral-link-box\"\n                                  value={myReferralLink}\n                                  margin=\"normal\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                />\n                              </div>\n                              <div className=\"referral-message\">\n                                <span className=\"s-size\">\n                                  <Translate id=\"max.yourreferrallink\" />\n                                  <CopyToClipboard\n                                    text={myReferralLink}\n                                    disableRipple={true}\n                                    onCopy={() => {\n                                      this.copyLink();\n                                    }}\n                                  >\n                                    <IconButton className={classes.button}>\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </CopyToClipboard>\n                                </span>\n                              </div>\n                            </Grid>\n                          ) : accountBalance === 0 ? (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.needPositiveBalance\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          ) : (\n                            <Grid item xs={12} md={6}>\n                              <div className=\"space\" />\n                              <div className=\"middle-children\">\n                                <img\n                                  src=\"images/misc/referral.svg\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"x-m-size\">\n                                  <Translate id=\"max.invalidreferral\" />\n                                </span>\n                              </div>\n                              <div className=\"space\" />\n                            </Grid>\n                          )}\n                          <Grid item xs={12} md={6}>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.1stlvlreferral\" />\n                              （5%): {level1RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.2ndlvlreferral\" />\n                              （2%): {level2RefCount}\n                            </div>\n                            <div className=\"global-stats-item x-m-size blue\">\n                              <Translate id=\"max.3rdlvlreferral\" />\n                              （0.5%): {level3RefCount}\n                            </div>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <div id=\"section_faq\" />\n                <Grid item xs={12}>\n                  <div className=\"dark-bg faq-card\">\n                    <div className=\"my-account dark-bg\">\n                      <span className=\"m-size aqua\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"dark-bg intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size glowing-blue\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size grey\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"s-size glowing-pink\">\n                            <Translate id=\"max.disclaimer\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivs)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { SNACKBAR_ERROR } from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  weiToToken,\n} from './tronCommon';\nimport { toTruncateDown } from './math';\n\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// MAINNET\nconst CONTRACT_ADDRESS = '413f100fbdd26bff25982c35cdadc2f2e6837516cd';\n\n// TESTNET\n// const CONTRACT_ADDRESS = '413084e0c71893d69c2ec1e3fb7701a479da2c9c05';\n\nlet contract;\nlet tronWebState;\nlet tronWeb;\n\nexport default {\n  async initTronWeb(address) {\n    tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n    tronWeb.defaultAddress = {\n      hex: tronWeb.address.toHex(address),\n      base58: FOUNDATION_ADDRESS,\n    };\n\n    tronWebState = await injectTronWeb(tronWeb);\n    contract = await initContract(\n      TRON_WEB_STATE_LOCKED,\n      tronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n    return tronWebState;\n  },\n\n  async getPlayerData(address) {\n    if (!this.isValidAddress(address)) {\n      return null;\n    }\n\n    const myTokens = await contract.myTokens().call();\n    const myDividends = await contract.myDividends().call();\n    const myRoundStats = await contract\n      .getPlayerInfoCurrentRound(address)\n      .call();\n    const myReferrals = await contract.myReferrals().call();\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n      myReferrals: myReferrals\n        ? sunToTrx(new BigNumber(myReferrals).toNumber())\n        : 0,\n      myRoundBuy: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[0]).toNumber())\n        : 0,\n      myRoundSell: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[1]).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  isValidAddress(address) {\n    return address && tronWeb.isAddress(address);\n  },\n};\n","export const toTruncateDown = (value, n) => {\n  if (value < Math.pow(0.1, n)) {\n    return 0;\n  }\n  const v = value.toString().split('.');\n  if (n <= 0) {\n    return v[0];\n  }\n\n  let f = v[1] || '';\n  if (f.length > n) {\n    const result = `${v[0]}.${f.substr(0, n)}`;\n    return result;\n  }\n  while (f.length < n) {\n    f += '0';\n  }\n  const result = `${v[0]}.${f}`;\n  return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport TronAccountDetails from '../../utils/tronAccountDetails';\n\nimport Tracker from '../../utils/tracker';\nimport { SNACKBAR_ERROR } from '../Common/GameSnackbar';\n\nconst initialState = {\n  myTokens: null,\n  myDividends: null,\n  myRoundBuy: null,\n  myRoundSell: null,\n  myReferrals: null,\n  accountAddress: '',\n};\n\nclass AccountDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    Tracker.pageview('/accountDetails');\n  }\n\n  search = async () => {\n    const { showSnackbar } = this.props;\n    const { accountAddress } = this.state;\n    if (!accountAddress) {\n      showSnackbar('Address can not be empty!', SNACKBAR_ERROR);\n      return;\n    }\n    const tronWebState = await TronAccountDetails.initTronWeb(accountAddress);\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData(accountAddress);\n  };\n\n  loadData = async accountAddress => {\n    await this.getPlayerData(accountAddress);\n  };\n\n  getPlayerData = async address => {\n    const playerData = await TronAccountDetails.getPlayerData(address);\n    if (!playerData) {\n      return;\n    }\n    const myTokens = playerData.myTokens;\n    const myReferrals = playerData.myReferrals;\n    const myDividends = playerData.myDividends;\n    const myRoundBuy = playerData.myRoundBuy;\n    const myRoundSell = playerData.myRoundSell;\n    this.setState({\n      myTokens,\n      myDividends,\n      myReferrals,\n      myRoundBuy,\n      myRoundSell,\n    });\n  };\n\n  handleChange = async event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      myTokens,\n      myDividends,\n      myRoundBuy,\n      myRoundSell,\n      myReferrals,\n      accountAddress,\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <Card color=\"primary\" className=\"card\">\n            <Grid\n              container\n              spacing={24}\n              className=\"component-card account-card\"\n            >\n              <Grid item xs={12} md={6}>\n                <div className=\"buy-placeholder\">\n                  <Grid item xs={12}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"l-size\">\n                          <Translate id=\"account.searchAddress\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"input-box\">\n                        <TextField\n                          label=\"\"\n                          name=\"accountAddress\"\n                          className=\"buy-token\"\n                          autoComplete=\"off\"\n                          placeholder=\"address e.g. T*****\"\n                          value={accountAddress}\n                          onChange={this.handleChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <Button\n                            id=\"buy-button\"\n                            className=\"buy-button\"\n                            variant=\"contained\"\n                            onClick={this.search}\n                          >\n                            <Translate id=\"account.search\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.token\" /> {myTokens || 0}{' '}\n                        <span className=\"blue\">\n                          <Translate id=\"general.token\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.myReferrals\" />{' '}\n                        {myReferrals || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.claimableTrx\" />{' '}\n                        {myDividends || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundBuyTrx\" /> {myRoundBuy || 0}{' '}\n                        <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundSellTrx\" />{' '}\n                        {myRoundSell || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AccountDetails));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCREEN_VAULT, SCREEN_ACCOUNT_DETAILS } from '../../actions/app';\n\nimport DailyDivs from '../TronMax/DailyDivs';\nimport AccountDetails from '../TronMax/AccountDetails';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n    case SCREEN_VAULT:\n      return <DailyDivs />;\n    case SCREEN_ACCOUNT_DETAILS:\n      return <AccountDetails />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport customTheme from './customTheme';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"s-size aqua copy-right\">\n            {' '}\n            &copy; 2020 TronDEX - ROI Game on Tron\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(null)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize } from 'react-localize-redux';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen } from '../actions/app';\nimport customTheme from './Common/customTheme';\nimport AppBar from './Common/GameAppBar';\nimport Snackbar from './Common/GameSnackbar';\nimport RoutingScreen from './Common/RoutingScreen';\nimport Footer from './Common/Footer';\nimport './App.css';\nimport Tracker from '../utils/tracker';\nimport { parseGameRoute } from '../utils/parseQueryString';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initTracker();\n    this.initScreen();\n  }\n\n  initScreen = () => {\n    const { setScreen } = this.props;\n    const screen = parseGameRoute();\n    setScreen(screen);\n  };\n\n  initTracker = () => {\n    Tracker.initialize();\n    Tracker.pageview('/app');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"body\">\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}